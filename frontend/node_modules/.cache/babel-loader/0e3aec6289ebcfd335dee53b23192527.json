{"remainingRequest":"D:\\gatekeeper\\frontend\\node_modules\\babel-loader\\lib\\index.js!D:\\gatekeeper\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\gatekeeper\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\gatekeeper\\frontend\\src\\components\\TaskExecution.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\gatekeeper\\frontend\\src\\components\\TaskExecution.vue","mtime":1753233447565},{"path":"D:\\gatekeeper\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1747724956321},{"path":"D:\\gatekeeper\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1747724958365},{"path":"D:\\gatekeeper\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1747724956321},{"path":"D:\\gatekeeper\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1747724959585}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKaW1wb3J0IGlvIGZyb20gJ3NvY2tldC5pby1jbGllbnQnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ1Rhc2tFeGVjdXRpb24nLAogIHByb3BzOiB7CiAgICBpZDogewogICAgICB0eXBlOiBbTnVtYmVyLCBTdHJpbmddLAogICAgICByZXF1aXJlZDogdHJ1ZQogICAgfQogIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGV4ZWN1dGlvbjoge30sCiAgICAgIHRhc2s6IHt9LAogICAgICBsb2dDb250ZW50OiAnJywKICAgICAgbG9hZGluZ0V4ZWN1dGlvbjogZmFsc2UsCiAgICAgIGxvYWRpbmdMb2c6IGZhbHNlLAogICAgICBhdXRvU2Nyb2xsOiB0cnVlLAogICAgICBzb2NrZXQ6IG51bGwsCiAgICAgIGV4ZWN1dGlvblVzZXI6ICcnLAogICAgICByZWZyZXNoSW50ZXJ2YWw6IG51bGwKICAgIH07CiAgfSwKICBjb21wdXRlZDogewogICAgY2FuVGVybWluYXRlKCkgewogICAgICByZXR1cm4gWydwZW5kaW5nJywgJ3J1bm5pbmcnXS5pbmNsdWRlcyh0aGlzLmV4ZWN1dGlvbi5zdGF0dXMpOwogICAgfSwKICAgIGN1cnJlbnRVc2VyKCkgewogICAgICByZXR1cm4gdGhpcy4kc3RvcmUuc3RhdGUudXNlciB8fCB7fTsKICAgIH0KICB9LAogIGNyZWF0ZWQoKSB7CiAgICB0aGlzLmxvYWRFeGVjdXRpb25EZXRhaWxzKCk7CiAgfSwKICBtb3VudGVkKCkgewogICAgLy8g6K6+572u6Ieq5Yqo5Yi35pawCiAgICB0aGlzLnJlZnJlc2hJbnRlcnZhbCA9IHNldEludGVydmFsKCgpID0+IHsKICAgICAgaWYgKHRoaXMuY2FuVGVybWluYXRlKSB7CiAgICAgICAgdGhpcy5yZWZyZXNoRXhlY3V0aW9uKCk7CiAgICAgIH0KICAgIH0sIDUwMDApOwoKICAgIC8vIOi/nuaOpVdlYlNvY2tldAogICAgdGhpcy5jb25uZWN0V2ViU29ja2V0KCk7CiAgfSwKICBiZWZvcmVEZXN0cm95KCkgewogICAgLy8g5riF6Zmk6Ieq5Yqo5Yi35pawCiAgICBpZiAodGhpcy5yZWZyZXNoSW50ZXJ2YWwpIHsKICAgICAgY2xlYXJJbnRlcnZhbCh0aGlzLnJlZnJlc2hJbnRlcnZhbCk7CiAgICB9CgogICAgLy8g5pat5byAV2ViU29ja2V06L+e5o6lCiAgICBpZiAodGhpcy5zb2NrZXQpIHsKICAgICAgdGhpcy5zb2NrZXQuZGlzY29ubmVjdCgpOwogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgLy8g5Yqg6L295omn6KGM6K+m5oOFCiAgICBhc3luYyBsb2FkRXhlY3V0aW9uRGV0YWlscygpIHsKICAgICAgdGhpcy5sb2FkaW5nRXhlY3V0aW9uID0gdHJ1ZTsKICAgICAgdHJ5IHsKICAgICAgICAvLyDojrflj5bmiafooYzorrDlvZUKICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGF4aW9zLmdldChgL2FwaS9leGVjdXRpb25zLyR7dGhpcy5pZH1gKTsKICAgICAgICB0aGlzLmV4ZWN1dGlvbiA9IHJlc3BvbnNlLmRhdGE7CgogICAgICAgIC8vIOiOt+WPluS7u+WKoeivpuaDhQogICAgICAgIGNvbnN0IHRhc2tSZXNwb25zZSA9IGF3YWl0IGF4aW9zLmdldChgL2FwaS90YXNrcy8ke3RoaXMuZXhlY3V0aW9uLnRhc2tfaWR9YCk7CiAgICAgICAgdGhpcy50YXNrID0gdGFza1Jlc3BvbnNlLmRhdGE7CgogICAgICAgIC8vIOiOt+WPluaJp+ihjOeUqOaIt+S/oeaBrwogICAgICAgIGlmICh0aGlzLmV4ZWN1dGlvbi51c2VyX2lkKSB7CiAgICAgICAgICB0cnkgewogICAgICAgICAgICBjb25zdCB1c2VyUmVzcG9uc2UgPSBhd2FpdCBheGlvcy5nZXQoYC9hcGkvdXNlcnMvJHt0aGlzLmV4ZWN1dGlvbi51c2VyX2lkfWApOwogICAgICAgICAgICB0aGlzLmV4ZWN1dGlvblVzZXIgPSB1c2VyUmVzcG9uc2UuZGF0YS51c2VybmFtZTsKICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ+iOt+WPlueUqOaIt+S/oeaBr+Wksei0pTonLCBlcnJvcik7CiAgICAgICAgICAgIC8vIOebtOaOpeaYvuekuueUqOaIt0lE77yM5LiN5re75Yqg5YmN57yACiAgICAgICAgICAgIHRoaXMuZXhlY3V0aW9uVXNlciA9IFN0cmluZyh0aGlzLmV4ZWN1dGlvbi51c2VyX2lkKTsKICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIC8vIOWKoOi9veaXpeW/lwogICAgICAgIHRoaXMubG9hZExvZygpOwogICAgICAgIHRoaXMubG9hZGluZ0V4ZWN1dGlvbiA9IGZhbHNlOwogICAgICB9IGNhdGNoIChlcnJvcikgewogICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IoJ+WKoOi9veaJp+ihjOivpuaDheWksei0pTogJyArIChlcnJvci5yZXNwb25zZSAmJiBlcnJvci5yZXNwb25zZS5kYXRhICYmIGVycm9yLnJlc3BvbnNlLmRhdGEuZXJyb3IgfHwgZXJyb3IubWVzc2FnZSkpOwogICAgICAgIHRoaXMubG9hZGluZ0V4ZWN1dGlvbiA9IGZhbHNlOwogICAgICAgIC8vIOi/lOWbnuS7u+WKoeivpuaDhemhtQogICAgICAgIHRoaXMuJHJvdXRlci5wdXNoKGAvc3lzdGVtL3Rhc2stZGV0YWlsLyR7dGhpcy5leGVjdXRpb24udGFza19pZH1gKTsKICAgICAgfQogICAgfSwKICAgIC8vIOWIt+aWsOaJp+ihjOeKtuaAgQogICAgYXN5bmMgcmVmcmVzaEV4ZWN1dGlvbigpIHsKICAgICAgdHJ5IHsKICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGF4aW9zLmdldChgL2FwaS9leGVjdXRpb25zLyR7dGhpcy5pZH1gKTsKICAgICAgICB0aGlzLmV4ZWN1dGlvbiA9IHJlc3BvbnNlLmRhdGE7CgogICAgICAgIC8vIOWmguaenOS7u+WKoeW3sue7j+WujOaIkO+8jOa4hemZpOiHquWKqOWIt+aWsAogICAgICAgIGlmICghdGhpcy5jYW5UZXJtaW5hdGUgJiYgdGhpcy5yZWZyZXNoSW50ZXJ2YWwpIHsKICAgICAgICAgIGNsZWFySW50ZXJ2YWwodGhpcy5yZWZyZXNoSW50ZXJ2YWwpOwogICAgICAgIH0KICAgICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgICAgICBjb25zb2xlLmVycm9yKCfliLfmlrDmiafooYznirbmgIHlpLHotKU6JywgZXJyb3IpOwogICAgICB9CiAgICB9LAogICAgLy8g5Yqg6L295pel5b+XCiAgICBhc3luYyBsb2FkTG9nKCkgewogICAgICB0aGlzLmxvYWRpbmdMb2cgPSB0cnVlOwogICAgICB0cnkgewogICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgYXhpb3MuZ2V0KGAvYXBpL2V4ZWN1dGlvbnMvJHt0aGlzLmlkfS9sb2dgKTsKICAgICAgICB0aGlzLmxvZ0NvbnRlbnQgPSByZXNwb25zZS5kYXRhLmxvZ19jb250ZW50IHx8ICcnOwoKICAgICAgICAvLyDoh6rliqjmu5rliqjliLDlupXpg6gKICAgICAgICBpZiAodGhpcy5hdXRvU2Nyb2xsKSB7CiAgICAgICAgICB0aGlzLiRuZXh0VGljaygoKSA9PiB7CiAgICAgICAgICAgIHRoaXMuc2Nyb2xsVG9Cb3R0b20oKTsKICAgICAgICAgIH0pOwogICAgICAgIH0KICAgICAgICB0aGlzLmxvYWRpbmdMb2cgPSBmYWxzZTsKICAgICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKCfliqDovb3ml6Xlv5flpLHotKU6ICcgKyAoZXJyb3IucmVzcG9uc2UgJiYgZXJyb3IucmVzcG9uc2UuZGF0YSAmJiBlcnJvci5yZXNwb25zZS5kYXRhLmVycm9yIHx8IGVycm9yLm1lc3NhZ2UpKTsKICAgICAgICB0aGlzLmxvYWRpbmdMb2cgPSBmYWxzZTsKICAgICAgfQogICAgfSwKICAgIC8vIOWIt+aWsOaXpeW/lwogICAgcmVmcmVzaExvZygpIHsKICAgICAgdGhpcy5sb2FkTG9nKCk7CiAgICB9LAogICAgLy8g57uI5q2i5omn6KGMCiAgICBhc3luYyB0ZXJtaW5hdGVFeGVjdXRpb24oKSB7CiAgICAgIHRyeSB7CiAgICAgICAgLy8g5pi+56S656Gu6K6k5a+56K+d5qGGCiAgICAgICAgYXdhaXQgdGhpcy4kY29uZmlybSgn56Gu5a6a6KaB57uI5q2i5q2k5Lu75Yqh5omn6KGM5ZCX77yf5aaC5p6c5pivSmVua2luc+S7u+WKoe+8jOWPr+iDvemcgOimgeS4gOS6m+aXtumXtOaJjeiDveWujOWFqOWBnOatouOAgicsICfnu4jmraLku7vliqEnLCB7CiAgICAgICAgICBjb25maXJtQnV0dG9uVGV4dDogJ+ehruWumue7iOatoicsCiAgICAgICAgICBjYW5jZWxCdXR0b25UZXh0OiAn5Y+W5raIJywKICAgICAgICAgIHR5cGU6ICd3YXJuaW5nJwogICAgICAgIH0pOwoKICAgICAgICAvLyDnlKjmiLfnoa7orqTlkI7vvIzlj5HpgIHnu4jmraLor7fmsYIKICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGF4aW9zLnBvc3QoYC9hcGkvZXhlY3V0aW9ucy8ke3RoaXMuaWR9L3Rlcm1pbmF0ZWApOwoKICAgICAgICAvLyDmmL7npLrlk43lupTmtojmga8KICAgICAgICB0aGlzLiRtZXNzYWdlLnN1Y2Nlc3MocmVzcG9uc2UuZGF0YS5tZXNzYWdlIHx8ICfku7vliqHlt7Lnu4jmraInKTsKCiAgICAgICAgLy8g5Yi35paw5omn6KGM54q25oCBCiAgICAgICAgdGhpcy5yZWZyZXNoRXhlY3V0aW9uKCk7CgogICAgICAgIC8vIOWmguaenOacieitpuWRiuS/oeaBr++8jOaYvuekuumAmuefpQogICAgICAgIGlmIChyZXNwb25zZS5kYXRhLm1lc3NhZ2UgJiYgcmVzcG9uc2UuZGF0YS5tZXNzYWdlLmluY2x1ZGVzKCdKZW5raW5z5p6E5bu65Y+v6IO95LuN5Zyo6L+Q6KGMJykpIHsKICAgICAgICAgIHRoaXMuJG5vdGlmeSh7CiAgICAgICAgICAgIHRpdGxlOiAn6K2m5ZGKJywKICAgICAgICAgICAgbWVzc2FnZTogJ0plbmtpbnPmnoTlu7rlj6/og73ml6Dms5Xlrozlhajnu4jmraLvvIzns7vnu5/lt7LlsJ3or5XmiYDmnInlj6/og73nmoTnu4jmraLmlrnms5XjgIInLAogICAgICAgICAgICB0eXBlOiAnd2FybmluZycsCiAgICAgICAgICAgIGR1cmF0aW9uOiAxMDAwMAogICAgICAgICAgfSk7CiAgICAgICAgfQogICAgICB9IGNhdGNoIChlcnJvcikgewogICAgICAgIC8vIOWmguaenOeUqOaIt+WPlua2iOS6huehruiupOWvueivneahhu+8jOS4jeaYvuekuumUmeivrwogICAgICAgIGlmIChlcnJvciA9PT0gJ2NhbmNlbCcgfHwgZXJyb3IudG9TdHJpbmcoKS5pbmNsdWRlcygnY2FuY2VsJykpIHsKICAgICAgICAgIHJldHVybjsKICAgICAgICB9CgogICAgICAgIC8vIOaYvuekuumUmeivr+S/oeaBrwogICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IoJ+e7iOatouS7u+WKoeWksei0pTogJyArIChlcnJvci5yZXNwb25zZSAmJiBlcnJvci5yZXNwb25zZS5kYXRhICYmIGVycm9yLnJlc3BvbnNlLmRhdGEuZXJyb3IgfHwgZXJyb3IubWVzc2FnZSkpOwoKICAgICAgICAvLyDlpoLmnpzmmK9KZW5raW5z5Lu75Yqh77yM5pi+56S66aKd5aSW5o+Q56S6CiAgICAgICAgaWYgKHRoaXMudGFzay50YXNrX3R5cGUgPT09ICdqZW5raW5zJykgewogICAgICAgICAgdGhpcy4kbm90aWZ5KHsKICAgICAgICAgICAgdGl0bGU6ICfmj5DnpLonLAogICAgICAgICAgICBtZXNzYWdlOiAn5oKo5Y+v5Lul5bCd6K+V55u05o6l5ZyoSmVua2luc+eVjOmdouS4ree7iOatouatpOaehOW7uuOAgicsCiAgICAgICAgICAgIHR5cGU6ICdpbmZvJywKICAgICAgICAgICAgZHVyYXRpb246IDEwMDAwCiAgICAgICAgICB9KTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgICAvLyDov57mjqVXZWJTb2NrZXQKICAgIGNvbm5lY3RXZWJTb2NrZXQoKSB7CiAgICAgIC8vIOWIm+W7ulNvY2tldC5JT+i/nuaOpQogICAgICBjb25zdCBzb2NrZXRVcmwgPSBgJHt3aW5kb3cubG9jYXRpb24ucHJvdG9jb2x9Ly8ke3dpbmRvdy5sb2NhdGlvbi5ob3N0fWA7CiAgICAgIHRoaXMuc29ja2V0ID0gaW8oc29ja2V0VXJsKTsKCiAgICAgIC8vIOebkeWQrOaXpeW/l+abtOaWsOS6i+S7tgogICAgICB0aGlzLnNvY2tldC5vbihgdGFza19sb2dfdXBkYXRlXyR7dGhpcy5pZH1gLCBkYXRhID0+IHsKICAgICAgICBpZiAoZGF0YS5uZXdfY29udGVudCkgewogICAgICAgICAgdGhpcy5sb2dDb250ZW50ICs9IGRhdGEubmV3X2NvbnRlbnQ7CgogICAgICAgICAgLy8g6Ieq5Yqo5rua5Yqo5Yiw5bqV6YOoCiAgICAgICAgICBpZiAodGhpcy5hdXRvU2Nyb2xsKSB7CiAgICAgICAgICAgIHRoaXMuJG5leHRUaWNrKCgpID0+IHsKICAgICAgICAgICAgICB0aGlzLnNjcm9sbFRvQm90dG9tKCk7CiAgICAgICAgICAgIH0pOwogICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgLy8g5aaC5p6c5Lu75Yqh5a6M5oiQ77yM5Yi35paw5omn6KGM54q25oCBCiAgICAgICAgaWYgKGRhdGEuY29tcGxldGUpIHsKICAgICAgICAgIHRoaXMucmVmcmVzaEV4ZWN1dGlvbigpOwogICAgICAgIH0KICAgICAgfSk7CgogICAgICAvLyDnm5HlkKzku7vliqHlrozmiJDkuovku7YKICAgICAgdGhpcy5zb2NrZXQub24oYHRhc2tfY29tcGxldGVfJHt0aGlzLmlkfWAsIGRhdGEgPT4gewogICAgICAgIC8vIOabtOaWsOaJp+ihjOeKtuaAgQogICAgICAgIHRoaXMuZXhlY3V0aW9uLnN0YXR1cyA9IGRhdGEuc3RhdHVzOwogICAgICAgIHRoaXMuZXhlY3V0aW9uLnJlc3VsdCA9IGRhdGEucmVzdWx0OwogICAgICAgIHRoaXMuZXhlY3V0aW9uLmVuZF90aW1lID0gbmV3IERhdGUoKS50b0lTT1N0cmluZygpOwoKICAgICAgICAvLyDmmL7npLrpgJrnn6UKICAgICAgICB0aGlzLiRub3RpZnkoewogICAgICAgICAgdGl0bGU6ICfku7vliqHmiafooYzlrozmiJAnLAogICAgICAgICAgbWVzc2FnZTogYOS7u+WKoeaJp+ihjOe7k+aenDogJHtkYXRhLnJlc3VsdCB8fCAn5pyq55+lJ31gLAogICAgICAgICAgdHlwZTogZGF0YS5zdGF0dXMgPT09ICdzdWNjZXNzJyA/ICdzdWNjZXNzJyA6ICd3YXJuaW5nJywKICAgICAgICAgIGR1cmF0aW9uOiA1MDAwCiAgICAgICAgfSk7CiAgICAgIH0pOwogICAgfSwKICAgIC8vIOa7muWKqOWIsOaXpeW/l+W6lemDqAogICAgc2Nyb2xsVG9Cb3R0b20oKSB7CiAgICAgIGNvbnN0IGNvbnRhaW5lciA9IHRoaXMuJHJlZnMubG9nQ29udGFpbmVyOwogICAgICBpZiAoY29udGFpbmVyKSB7CiAgICAgICAgY29udGFpbmVyLnNjcm9sbFRvcCA9IGNvbnRhaW5lci5zY3JvbGxIZWlnaHQ7CiAgICAgIH0KICAgIH0sCiAgICAvLyDov5Tlm57kuIrkuIDpobUKICAgIGdvQmFjaygpIHsKICAgICAgaWYgKHRoaXMuJHJvdXRlLnF1ZXJ5LmZyb20gPT09ICdsaXN0JykgewogICAgICAgIHRoaXMuJHJvdXRlci5wdXNoKCcvc3lzdGVtL3Rhc2stbWFuYWdlcicpOwogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMuJHJvdXRlci5wdXNoKGAvc3lzdGVtL3Rhc2stZGV0YWlsLyR7dGhpcy5leGVjdXRpb24udGFza19pZH1gKTsKICAgICAgfQogICAgfSwKICAgIC8vIOagvOW8j+WMluaXpeacnwogICAgZm9ybWF0RGF0ZShkYXRlU3RyaW5nKSB7CiAgICAgIGlmICghZGF0ZVN0cmluZykgcmV0dXJuICcnOwoKICAgICAgLy8g5Yib5bu65pel5pyf5a+56LGhCiAgICAgIGNvbnN0IGRhdGUgPSBuZXcgRGF0ZShkYXRlU3RyaW5nKTsKCiAgICAgIC8vIOiOt+WPllVUQ+aXtumXtOW5tua3u+WKoDjlsI/ml7bvvIjkuJzlhavljLrvvIkKICAgICAgY29uc3QgdXRjVGltZSA9IGRhdGUuZ2V0VGltZSgpOwogICAgICBjb25zdCBiZWlqaW5nVGltZSA9IG5ldyBEYXRlKHV0Y1RpbWUgKyA4ICogNjAgKiA2MCAqIDEwMDApOwoKICAgICAgLy8g5qC85byP5YyW5Li65pys5Zyw5pe26Ze05a2X56ym5LiyCiAgICAgIHJldHVybiBiZWlqaW5nVGltZS50b0xvY2FsZVN0cmluZygnemgtQ04nLCB7CiAgICAgICAgeWVhcjogJ251bWVyaWMnLAogICAgICAgIG1vbnRoOiAnMi1kaWdpdCcsCiAgICAgICAgZGF5OiAnMi1kaWdpdCcsCiAgICAgICAgaG91cjogJzItZGlnaXQnLAogICAgICAgIG1pbnV0ZTogJzItZGlnaXQnLAogICAgICAgIHNlY29uZDogJzItZGlnaXQnLAogICAgICAgIGhvdXIxMjogZmFsc2UKICAgICAgfSk7CiAgICB9LAogICAgLy8g6I635Y+W5Lu75Yqh57G75Z6L5qCH562+CiAgICBnZXRUYXNrVHlwZUxhYmVsKHR5cGUpIHsKICAgICAgY29uc3QgdHlwZXMgPSB7CiAgICAgICAgJ2plbmtpbnMnOiAnSmVua2luc+S7u+WKoScsCiAgICAgICAgJ3NjcmlwdCc6ICfohJrmnKzku7vliqEnLAogICAgICAgICdjb21tYW5kJzogJ+WRveS7pOS7u+WKoScKICAgICAgfTsKICAgICAgcmV0dXJuIHR5cGVzW3R5cGVdIHx8IHR5cGU7CiAgICB9LAogICAgLy8g6I635Y+W54q25oCB5qCH562+CiAgICBnZXRTdGF0dXNMYWJlbChzdGF0dXMpIHsKICAgICAgY29uc3Qgc3RhdHVzZXMgPSB7CiAgICAgICAgJ3BlbmRpbmcnOiAn5b6F5omn6KGMJywKICAgICAgICAncnVubmluZyc6ICfmiafooYzkuK0nLAogICAgICAgICdzdWNjZXNzJzogJ+aIkOWKnycsCiAgICAgICAgJ2ZhaWxlZCc6ICflpLHotKUnLAogICAgICAgICd0ZXJtaW5hdGVkJzogJ+W3sue7iOatoicKICAgICAgfTsKICAgICAgcmV0dXJuIHN0YXR1c2VzW3N0YXR1c10gfHwgc3RhdHVzOwogICAgfSwKICAgIC8vIOiOt+WPlueKtuaAgeagh+etvuagt+W8jwogICAgZ2V0U3RhdHVzVHlwZShzdGF0dXMpIHsKICAgICAgY29uc3QgdHlwZXMgPSB7CiAgICAgICAgJ3BlbmRpbmcnOiAnaW5mbycsCiAgICAgICAgJ3J1bm5pbmcnOiAncHJpbWFyeScsCiAgICAgICAgJ3N1Y2Nlc3MnOiAnc3VjY2VzcycsCiAgICAgICAgJ2ZhaWxlZCc6ICdkYW5nZXInLAogICAgICAgICd0ZXJtaW5hdGVkJzogJ3dhcm5pbmcnCiAgICAgIH07CiAgICAgIHJldHVybiB0eXBlc1tzdGF0dXNdIHx8ICcnOwogICAgfSwKICAgIC8vIOagvOW8j+WMlkplbmtpbnPlj4LmlbDkuLrooajmoLzmlbDmja4KICAgIGZvcm1hdEplbmtpbnNQYXJhbXMocGFyYW1zKSB7CiAgICAgIGlmICghcGFyYW1zKSByZXR1cm4gW107CiAgICAgIHJldHVybiBPYmplY3Qua2V5cyhwYXJhbXMpLm1hcChrZXkgPT4gKHsKICAgICAgICBuYW1lOiBrZXksCiAgICAgICAgdmFsdWU6IHBhcmFtc1trZXldCiAgICAgIH0pKTsKICAgIH0KICB9Cn07"},{"version":3,"names":["axios","io","name","props","id","type","Number","String","required","data","execution","task","logContent","loadingExecution","loadingLog","autoScroll","socket","executionUser","refreshInterval","computed","canTerminate","includes","status","currentUser","$store","state","user","created","loadExecutionDetails","mounted","setInterval","refreshExecution","connectWebSocket","beforeDestroy","clearInterval","disconnect","methods","response","get","taskResponse","task_id","user_id","userResponse","username","error","console","loadLog","$message","message","$router","push","log_content","$nextTick","scrollToBottom","refreshLog","terminateExecution","$confirm","confirmButtonText","cancelButtonText","post","success","$notify","title","duration","toString","task_type","socketUrl","window","location","protocol","host","on","new_content","complete","result","end_time","Date","toISOString","container","$refs","logContainer","scrollTop","scrollHeight","goBack","$route","query","from","formatDate","dateString","date","utcTime","getTime","beijingTime","toLocaleString","year","month","day","hour","minute","second","hour12","getTaskTypeLabel","types","getStatusLabel","statuses","getStatusType","formatJenkinsParams","params","Object","keys","map","key","value"],"sources":["src/components/TaskExecution.vue"],"sourcesContent":["<template>\n  <div class=\"task-execution\">\n    <div class=\"page-header\">\n      <div class=\"header-left\">\n        <h2 class=\"page-title\">任务执行详情</h2>\n        <el-tag :type=\"getStatusType(execution.status)\" class=\"status-tag\">\n          {{ getStatusLabel(execution.status) }}\n        </el-tag>\n      </div>\n      <div class=\"header-actions\">\n        <el-button type=\"primary\" icon=\"el-icon-back\" @click=\"goBack\">\n          返回\n        </el-button>\n        <el-button \n          type=\"danger\" \n          icon=\"el-icon-close\" \n          @click=\"terminateExecution\"\n          v-if=\"canTerminate\">\n          终止执行\n        </el-button>\n      </div>\n    </div>\n\n    <el-row :gutter=\"20\">\n      <el-col :span=\"8\">\n        <el-card class=\"info-card\">\n          <div slot=\"header\">\n            <span>执行信息</span>\n          </div>\n          \n          <el-descriptions direction=\"vertical\" :column=\"1\" border>\n            <el-descriptions-item label=\"执行ID\">{{ execution.id }}</el-descriptions-item>\n            <el-descriptions-item label=\"任务名称\">\n              <router-link :to=\"`/system/task-detail/${execution.task_id}`\">\n                {{ task.name }}\n              </router-link>\n            </el-descriptions-item>\n            <el-descriptions-item label=\"任务类型\">{{ getTaskTypeLabel(task.task_type) }}</el-descriptions-item>\n            <el-descriptions-item label=\"状态\">\n              <el-tag :type=\"getStatusType(execution.status)\">\n                {{ getStatusLabel(execution.status) }}\n              </el-tag>\n            </el-descriptions-item>\n            <el-descriptions-item label=\"开始时间\">{{ formatDate(execution.start_time) }}</el-descriptions-item>\n            <el-descriptions-item label=\"结束时间\">\n              {{ execution.end_time ? formatDate(execution.end_time) : '进行中' }}\n            </el-descriptions-item>\n            <el-descriptions-item label=\"执行用户\">{{ executionUser }}</el-descriptions-item>\n            <el-descriptions-item label=\"执行结果\">{{ execution.result || '无结果' }}</el-descriptions-item>\n          </el-descriptions>\n          \n          <!-- Jenkins特有信息 -->\n          <template v-if=\"task.task_type === 'jenkins' && execution.jenkins_build_number\">\n            <div class=\"section-divider\">Jenkins构建信息</div>\n            <el-descriptions direction=\"vertical\" :column=\"1\" border>\n              <el-descriptions-item label=\"构建号\">{{ execution.jenkins_build_number }}</el-descriptions-item>\n              <el-descriptions-item label=\"构建URL\">\n                <a :href=\"execution.jenkins_build_url\" target=\"_blank\">{{ execution.jenkins_build_url }}</a>\n              </el-descriptions-item>\n              <el-descriptions-item label=\"执行参数\" v-if=\"Object.keys(execution.jenkins_parameters || {}).length > 0\">\n                <div class=\"params-table\">\n                  <el-table :data=\"formatJenkinsParams(execution.jenkins_parameters)\" border size=\"small\">\n                    <el-table-column prop=\"name\" label=\"参数名\" width=\"180\"></el-table-column>\n                    <el-table-column prop=\"value\" label=\"参数值\"></el-table-column>\n                  </el-table>\n                </div>\n              </el-descriptions-item>\n            </el-descriptions>\n          </template>\n        </el-card>\n      </el-col>\n      \n      <el-col :span=\"16\">\n        <el-card class=\"log-card\">\n          <div slot=\"header\" class=\"log-header\">\n            <span>执行日志</span>\n            <div class=\"log-actions\">\n              <el-switch\n                v-model=\"autoScroll\"\n                active-text=\"自动滚动\"\n                inactive-text=\"手动滚动\"\n              ></el-switch>\n              <el-button \n                size=\"mini\" \n                type=\"text\" \n                icon=\"el-icon-refresh\" \n                @click=\"refreshLog\"\n                :loading=\"loadingLog\">\n                刷新\n              </el-button>\n            </div>\n          </div>\n          \n          <div \n            class=\"log-content\" \n            ref=\"logContainer\"\n            v-loading=\"loadingLog\"\n            element-loading-text=\"加载日志中...\"\n          >\n            <pre v-if=\"logContent\">{{ logContent }}</pre>\n            <div v-else class=\"no-log\">\n              <i class=\"el-icon-document\"></i>\n              <span>暂无日志内容</span>\n            </div>\n          </div>\n        </el-card>\n      </el-col>\n    </el-row>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport io from 'socket.io-client';\n\nexport default {\n  name: 'TaskExecution',\n  props: {\n    id: {\n      type: [Number, String],\n      required: true\n    }\n  },\n  data() {\n    return {\n      execution: {},\n      task: {},\n      logContent: '',\n      loadingExecution: false,\n      loadingLog: false,\n      autoScroll: true,\n      socket: null,\n      executionUser: '',\n      refreshInterval: null\n    };\n  },\n  computed: {\n    canTerminate() {\n      return ['pending', 'running'].includes(this.execution.status);\n    },\n    currentUser() {\n      return this.$store.state.user || {};\n    }\n  },\n  created() {\n    this.loadExecutionDetails();\n  },\n  mounted() {\n    // 设置自动刷新\n    this.refreshInterval = setInterval(() => {\n      if (this.canTerminate) {\n        this.refreshExecution();\n      }\n    }, 5000);\n    \n    // 连接WebSocket\n    this.connectWebSocket();\n  },\n  beforeDestroy() {\n    // 清除自动刷新\n    if (this.refreshInterval) {\n      clearInterval(this.refreshInterval);\n    }\n    \n    // 断开WebSocket连接\n    if (this.socket) {\n      this.socket.disconnect();\n    }\n  },\n  methods: {\n    // 加载执行详情\n    async loadExecutionDetails() {\n      this.loadingExecution = true;\n      try {\n        // 获取执行记录\n        const response = await axios.get(`/api/executions/${this.id}`);\n        this.execution = response.data;\n        \n        // 获取任务详情\n        const taskResponse = await axios.get(`/api/tasks/${this.execution.task_id}`);\n        this.task = taskResponse.data;\n        \n        // 获取执行用户信息\n        if (this.execution.user_id) {\n          try {\n            const userResponse = await axios.get(`/api/users/${this.execution.user_id}`);\n            this.executionUser = userResponse.data.username;\n          } catch (error) {\n            console.error('获取用户信息失败:', error);\n            // 直接显示用户ID，不添加前缀\n            this.executionUser = String(this.execution.user_id);\n          }\n        }\n        \n        // 加载日志\n        this.loadLog();\n        \n        this.loadingExecution = false;\n      } catch (error) {\n        this.$message.error('加载执行详情失败: ' + (error.response && error.response.data && error.response.data.error || error.message));\n        this.loadingExecution = false;\n        // 返回任务详情页\n        this.$router.push(`/system/task-detail/${this.execution.task_id}`);\n      }\n    },\n    \n    // 刷新执行状态\n    async refreshExecution() {\n      try {\n        const response = await axios.get(`/api/executions/${this.id}`);\n        this.execution = response.data;\n        \n        // 如果任务已经完成，清除自动刷新\n        if (!this.canTerminate && this.refreshInterval) {\n          clearInterval(this.refreshInterval);\n        }\n      } catch (error) {\n        console.error('刷新执行状态失败:', error);\n      }\n    },\n    \n    // 加载日志\n    async loadLog() {\n      this.loadingLog = true;\n      try {\n        const response = await axios.get(`/api/executions/${this.id}/log`);\n        this.logContent = response.data.log_content || '';\n        \n        // 自动滚动到底部\n        if (this.autoScroll) {\n          this.$nextTick(() => {\n            this.scrollToBottom();\n          });\n        }\n        \n        this.loadingLog = false;\n      } catch (error) {\n        this.$message.error('加载日志失败: ' + (error.response && error.response.data && error.response.data.error || error.message));\n        this.loadingLog = false;\n      }\n    },\n    \n    // 刷新日志\n    refreshLog() {\n      this.loadLog();\n    },\n    \n    // 终止执行\n    async terminateExecution() {\n      try {\n        // 显示确认对话框\n        await this.$confirm(\n          '确定要终止此任务执行吗？如果是Jenkins任务，可能需要一些时间才能完全停止。',\n          '终止任务',\n          {\n            confirmButtonText: '确定终止',\n            cancelButtonText: '取消',\n            type: 'warning'\n          }\n        );\n        \n        // 用户确认后，发送终止请求\n        const response = await axios.post(`/api/executions/${this.id}/terminate`);\n        \n        // 显示响应消息\n        this.$message.success(response.data.message || '任务已终止');\n        \n        // 刷新执行状态\n        this.refreshExecution();\n        \n        // 如果有警告信息，显示通知\n        if (response.data.message && response.data.message.includes('Jenkins构建可能仍在运行')) {\n          this.$notify({\n            title: '警告',\n            message: 'Jenkins构建可能无法完全终止，系统已尝试所有可能的终止方法。',\n            type: 'warning',\n            duration: 10000\n          });\n        }\n      } catch (error) {\n        // 如果用户取消了确认对话框，不显示错误\n        if (error === 'cancel' || error.toString().includes('cancel')) {\n          return;\n        }\n        \n        // 显示错误信息\n        this.$message.error('终止任务失败: ' + (error.response && error.response.data && error.response.data.error || error.message));\n        \n        // 如果是Jenkins任务，显示额外提示\n        if (this.task.task_type === 'jenkins') {\n          this.$notify({\n            title: '提示',\n            message: '您可以尝试直接在Jenkins界面中终止此构建。',\n            type: 'info',\n            duration: 10000\n          });\n        }\n      }\n    },\n    \n    // 连接WebSocket\n    connectWebSocket() {\n      // 创建Socket.IO连接\n      const socketUrl = `${window.location.protocol}//${window.location.host}`;\n      this.socket = io(socketUrl);\n      \n      // 监听日志更新事件\n      this.socket.on(`task_log_update_${this.id}`, data => {\n        if (data.new_content) {\n          this.logContent += data.new_content;\n          \n          // 自动滚动到底部\n          if (this.autoScroll) {\n            this.$nextTick(() => {\n              this.scrollToBottom();\n            });\n          }\n        }\n        \n        // 如果任务完成，刷新执行状态\n        if (data.complete) {\n          this.refreshExecution();\n        }\n      });\n      \n      // 监听任务完成事件\n      this.socket.on(`task_complete_${this.id}`, data => {\n        // 更新执行状态\n        this.execution.status = data.status;\n        this.execution.result = data.result;\n        this.execution.end_time = new Date().toISOString();\n        \n        // 显示通知\n        this.$notify({\n          title: '任务执行完成',\n          message: `任务执行结果: ${data.result || '未知'}`,\n          type: data.status === 'success' ? 'success' : 'warning',\n          duration: 5000\n        });\n      });\n    },\n    \n    // 滚动到日志底部\n    scrollToBottom() {\n      const container = this.$refs.logContainer;\n      if (container) {\n        container.scrollTop = container.scrollHeight;\n      }\n    },\n    \n    // 返回上一页\n    goBack() {\n      if (this.$route.query.from === 'list') {\n        this.$router.push('/system/task-manager');\n      } else {\n        this.$router.push(`/system/task-detail/${this.execution.task_id}`);\n      }\n    },\n    \n    // 格式化日期\n    formatDate(dateString) {\n      if (!dateString) return '';\n      \n      // 创建日期对象\n      const date = new Date(dateString);\n      \n      // 获取UTC时间并添加8小时（东八区）\n      const utcTime = date.getTime();\n      const beijingTime = new Date(utcTime + 8 * 60 * 60 * 1000);\n      \n      // 格式化为本地时间字符串\n      return beijingTime.toLocaleString('zh-CN', {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit',\n        hour: '2-digit',\n        minute: '2-digit',\n        second: '2-digit',\n        hour12: false\n      });\n    },\n    \n    // 获取任务类型标签\n    getTaskTypeLabel(type) {\n      const types = {\n        'jenkins': 'Jenkins任务',\n        'script': '脚本任务',\n        'command': '命令任务'\n      };\n      return types[type] || type;\n    },\n    \n    // 获取状态标签\n    getStatusLabel(status) {\n      const statuses = {\n        'pending': '待执行',\n        'running': '执行中',\n        'success': '成功',\n        'failed': '失败',\n        'terminated': '已终止'\n      };\n      return statuses[status] || status;\n    },\n    \n    // 获取状态标签样式\n    getStatusType(status) {\n      const types = {\n        'pending': 'info',\n        'running': 'primary',\n        'success': 'success',\n        'failed': 'danger',\n        'terminated': 'warning'\n      };\n      return types[status] || '';\n    },\n\n    // 格式化Jenkins参数为表格数据\n    formatJenkinsParams(params) {\n      if (!params) return [];\n      return Object.keys(params).map(key => ({\n        name: key,\n        value: params[key]\n      }));\n    }\n  }\n};\n</script>\n\n<style scoped>\n.task-execution {\n  padding: 20px;\n}\n\n.page-header {\n  margin-bottom: 20px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.header-left {\n  display: flex;\n  align-items: center;\n}\n\n.page-title {\n  font-size: 24px;\n  margin: 0;\n  margin-right: 15px;\n}\n\n.status-tag {\n  margin-right: 10px;\n}\n\n.info-card,\n.log-card {\n  margin-bottom: 20px;\n}\n\n.section-divider {\n  font-size: 16px;\n  font-weight: bold;\n  margin: 20px 0 10px 0;\n  padding-bottom: 10px;\n  border-bottom: 1px solid #EBEEF5;\n}\n\n.log-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.log-actions {\n  display: flex;\n  align-items: center;\n}\n\n.log-actions .el-switch {\n  margin-right: 15px;\n}\n\n.log-content {\n  height: 600px;\n  overflow-y: auto;\n  background-color: #1e1e1e;\n  color: #f0f0f0;\n  padding: 10px;\n  font-family: monospace;\n  border-radius: 4px;\n}\n\n.log-content pre {\n  margin: 0;\n  white-space: pre-wrap;\n  word-break: break-all;\n}\n\n.no-log {\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  color: #909399;\n}\n\n.no-log i {\n  font-size: 48px;\n  margin-bottom: 10px;\n}\n\n.params-table {\n  max-width: 100%;\n}\n\n.params-table .el-table {\n  margin-bottom: 0;\n}\n</style> "],"mappings":"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","ignoreList":[]}]}