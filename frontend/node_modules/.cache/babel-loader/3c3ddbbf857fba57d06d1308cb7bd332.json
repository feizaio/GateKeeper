{"remainingRequest":"D:\\test\\frontend\\node_modules\\babel-loader\\lib\\index.js!D:\\test\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\test\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\test\\frontend\\src\\components\\CredentialManagement.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\test\\frontend\\src\\components\\CredentialManagement.vue","mtime":1747723632442},{"path":"D:\\test\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1747724956321},{"path":"D:\\test\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1747724958365},{"path":"D:\\test\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1747724956321},{"path":"D:\\test\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1747724959585}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKZXhwb3J0IGRlZmF1bHQgewogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBjcmVkZW50aWFsczogW10sCiAgICAgIGRpYWxvZ1Zpc2libGU6IGZhbHNlLAogICAgICB2aWV3RGlhbG9nVmlzaWJsZTogZmFsc2UsCiAgICAgIGlzRWRpdDogZmFsc2UsCiAgICAgIGN1cnJlbnRDcmVkZW50aWFsOiBudWxsLAogICAgICBjcmVkZW50aWFsRm9ybTogewogICAgICAgIG5hbWU6ICcnLAogICAgICAgIHVzZXJuYW1lOiAnJywKICAgICAgICBwYXNzd29yZDogJycsCiAgICAgICAgZGVzY3JpcHRpb246ICcnCiAgICAgIH0sCiAgICAgIHJ1bGVzOiB7CiAgICAgICAgbmFtZTogW3sKICAgICAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgICAgICAgbWVzc2FnZTogJ+ivt+i+k+WFpeWHreaNruWQjeensCcsCiAgICAgICAgICB0cmlnZ2VyOiAnYmx1cicKICAgICAgICB9LCB7CiAgICAgICAgICBtaW46IDIsCiAgICAgICAgICBtYXg6IDUwLAogICAgICAgICAgbWVzc2FnZTogJ+mVv+W6puWcqCAyIOWIsCA1MCDkuKrlrZfnrKYnLAogICAgICAgICAgdHJpZ2dlcjogJ2JsdXInCiAgICAgICAgfV0sCiAgICAgICAgdXNlcm5hbWU6IFt7CiAgICAgICAgICByZXF1aXJlZDogdHJ1ZSwKICAgICAgICAgIG1lc3NhZ2U6ICfor7fovpPlhaXnlKjmiLflkI0nLAogICAgICAgICAgdHJpZ2dlcjogJ2JsdXInCiAgICAgICAgfV0sCiAgICAgICAgcGFzc3dvcmQ6IFt7CiAgICAgICAgICB2YWxpZGF0b3I6IChydWxlLCB2YWx1ZSwgY2FsbGJhY2spID0+IHsKICAgICAgICAgICAgaWYgKCF0aGlzLmlzRWRpdCAmJiAhdmFsdWUpIHsKICAgICAgICAgICAgICBjYWxsYmFjayhuZXcgRXJyb3IoJ+ivt+i+k+WFpeWvhueggScpKTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICBjYWxsYmFjaygpOwogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgdHJpZ2dlcjogJ2JsdXInCiAgICAgICAgfV0KICAgICAgfQogICAgfTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICBkaWFsb2dUaXRsZSgpIHsKICAgICAgcmV0dXJuIHRoaXMuaXNFZGl0ID8gJ+e8lui+keWHreaNricgOiAn5re75Yqg5Yet5o2uJzsKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIGFzeW5jIGxvYWRDcmVkZW50aWFscygpIHsKICAgICAgdHJ5IHsKICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGF4aW9zLmdldCgnL2FwaS9jcmVkZW50aWFscycpOwogICAgICAgIHRoaXMuY3JlZGVudGlhbHMgPSByZXNwb25zZS5kYXRhOwogICAgICB9IGNhdGNoIChlcnJvcikgewogICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IoJ+iOt+WPluWHreaNruWIl+ihqOWksei0pScpOwogICAgICAgIGNvbnNvbGUuZXJyb3IoZXJyb3IpOwogICAgICB9CiAgICB9LAogICAgc2hvd0FkZERpYWxvZygpIHsKICAgICAgdGhpcy5pc0VkaXQgPSBmYWxzZTsKICAgICAgdGhpcy5jcmVkZW50aWFsRm9ybSA9IHsKICAgICAgICBuYW1lOiAnJywKICAgICAgICB1c2VybmFtZTogJycsCiAgICAgICAgcGFzc3dvcmQ6ICcnLAogICAgICAgIGRlc2NyaXB0aW9uOiAnJwogICAgICB9OwogICAgICB0aGlzLmRpYWxvZ1Zpc2libGUgPSB0cnVlOwogICAgfSwKICAgIHNob3dFZGl0RGlhbG9nKGNyZWRlbnRpYWwpIHsKICAgICAgdGhpcy5pc0VkaXQgPSB0cnVlOwogICAgICB0aGlzLmNyZWRlbnRpYWxGb3JtID0gewogICAgICAgIGlkOiBjcmVkZW50aWFsLmlkLAogICAgICAgIG5hbWU6IGNyZWRlbnRpYWwubmFtZSwKICAgICAgICB1c2VybmFtZTogY3JlZGVudGlhbC51c2VybmFtZSwKICAgICAgICBwYXNzd29yZDogJycsCiAgICAgICAgLy8g57yW6L6R5pe25LiN5pi+56S65a+G56CBCiAgICAgICAgZGVzY3JpcHRpb246IGNyZWRlbnRpYWwuZGVzY3JpcHRpb24gfHwgJycKICAgICAgfTsKICAgICAgdGhpcy5kaWFsb2dWaXNpYmxlID0gdHJ1ZTsKICAgIH0sCiAgICBhc3luYyBzaG93Vmlld0RpYWxvZyhjcmVkZW50aWFsKSB7CiAgICAgIHRyeSB7CiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBheGlvcy5nZXQoYC9hcGkvY3JlZGVudGlhbHMvJHtjcmVkZW50aWFsLmlkfWApOwogICAgICAgIHRoaXMuY3VycmVudENyZWRlbnRpYWwgPSByZXNwb25zZS5kYXRhOwogICAgICAgIHRoaXMudmlld0RpYWxvZ1Zpc2libGUgPSB0cnVlOwogICAgICB9IGNhdGNoIChlcnJvcikgewogICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IoJ+iOt+WPluWHreaNruivpuaDheWksei0pScpOwogICAgICAgIGNvbnNvbGUuZXJyb3IoZXJyb3IpOwogICAgICB9CiAgICB9LAogICAgZ2VuZXJhdGVQYXNzd29yZCgpIHsKICAgICAgLy8g55Sf5oiQOC0xMuS9jeeahOmaj+acuuWvhuegge+8jOWMheWQq+Wkp+Wwj+WGmeWtl+avjeOAgeaVsOWtl+WSjOeJueauiuWtl+espgogICAgICBjb25zdCBjaGFycyA9ICdBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWmFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6MDEyMzQ1Njc4OSFAIyQlXiYqKClfKyc7CiAgICAgIGNvbnN0IGxlbmd0aCA9IDEyOwogICAgICBsZXQgcGFzc3dvcmQgPSAnJzsKICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBsZW5ndGg7IGkrKykgewogICAgICAgIGNvbnN0IHJhbmRvbUluZGV4ID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogY2hhcnMubGVuZ3RoKTsKICAgICAgICBwYXNzd29yZCArPSBjaGFyc1tyYW5kb21JbmRleF07CiAgICAgIH0KICAgICAgdGhpcy5jcmVkZW50aWFsRm9ybS5wYXNzd29yZCA9IHBhc3N3b3JkOwoKICAgICAgLy8g5by55Ye65o+Q56S6CiAgICAgIHRoaXMuJG1lc3NhZ2UoewogICAgICAgIG1lc3NhZ2U6ICflt7LnlJ/miJDpmo/mnLrlr4bnoIEnLAogICAgICAgIHR5cGU6ICdzdWNjZXNzJywKICAgICAgICBkdXJhdGlvbjogMjAwMAogICAgICB9KTsKICAgIH0sCiAgICBhc3luYyBoYW5kbGVTdWJtaXQoKSB7CiAgICAgIHRyeSB7CiAgICAgICAgYXdhaXQgdGhpcy4kcmVmcy5jcmVkZW50aWFsRm9ybS52YWxpZGF0ZSgpOwogICAgICAgIGlmICh0aGlzLmlzRWRpdCkgewogICAgICAgICAgLy8g57yW6L6R5Yet5o2uCiAgICAgICAgICBjb25zdCBkYXRhID0gewogICAgICAgICAgICBuYW1lOiB0aGlzLmNyZWRlbnRpYWxGb3JtLm5hbWUsCiAgICAgICAgICAgIHVzZXJuYW1lOiB0aGlzLmNyZWRlbnRpYWxGb3JtLnVzZXJuYW1lLAogICAgICAgICAgICBkZXNjcmlwdGlvbjogdGhpcy5jcmVkZW50aWFsRm9ybS5kZXNjcmlwdGlvbgogICAgICAgICAgfTsKCiAgICAgICAgICAvLyDlj6rmnInlvZPlr4bnoIHlrZfmrrXmnInlgLzml7bmiY3lj5HpgIEKICAgICAgICAgIGlmICh0aGlzLmNyZWRlbnRpYWxGb3JtLnBhc3N3b3JkKSB7CiAgICAgICAgICAgIGRhdGEucGFzc3dvcmQgPSB0aGlzLmNyZWRlbnRpYWxGb3JtLnBhc3N3b3JkOwogICAgICAgICAgfQogICAgICAgICAgYXdhaXQgYXhpb3MucHV0KGAvYXBpL2NyZWRlbnRpYWxzLyR7dGhpcy5jcmVkZW50aWFsRm9ybS5pZH1gLCBkYXRhKTsKICAgICAgICAgIHRoaXMuJG1lc3NhZ2Uuc3VjY2Vzcygn5Yet5o2u5pu05paw5oiQ5YqfJyk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIC8vIOa3u+WKoOWHreaNrgogICAgICAgICAgYXdhaXQgYXhpb3MucG9zdCgnL2FwaS9jcmVkZW50aWFscycsIHRoaXMuY3JlZGVudGlhbEZvcm0pOwogICAgICAgICAgdGhpcy4kbWVzc2FnZS5zdWNjZXNzKCflh63mja7mt7vliqDmiJDlip8nKTsKICAgICAgICB9CiAgICAgICAgdGhpcy5kaWFsb2dWaXNpYmxlID0gZmFsc2U7CiAgICAgICAgdGhpcy5sb2FkQ3JlZGVudGlhbHMoKTsKICAgICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgICAgICAvLyDooajljZXpqozor4HlpLHotKXkuI3pnIDopoHnibnmrorlpITnkIYKICAgICAgICBpZiAoZXJyb3IuY29uc3RydWN0b3IgJiYgZXJyb3IuY29uc3RydWN0b3IubmFtZSA9PT0gJ0Vycm9yJykgewogICAgICAgICAgcmV0dXJuOwogICAgICAgIH0KICAgICAgICBsZXQgZXJyb3JNZXNzYWdlID0gJ+aTjeS9nOWksei0pSc7CiAgICAgICAgaWYgKGVycm9yLnJlc3BvbnNlICYmIGVycm9yLnJlc3BvbnNlLmRhdGEgJiYgZXJyb3IucmVzcG9uc2UuZGF0YS5lcnJvcikgewogICAgICAgICAgZXJyb3JNZXNzYWdlID0gZXJyb3IucmVzcG9uc2UuZGF0YS5lcnJvcjsKICAgICAgICB9CiAgICAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcihlcnJvck1lc3NhZ2UpOwogICAgICB9CiAgICB9LAogICAgYXN5bmMgZGVsZXRlQ3JlZGVudGlhbChjcmVkZW50aWFsKSB7CiAgICAgIHRyeSB7CiAgICAgICAgYXdhaXQgdGhpcy4kY29uZmlybShg56Gu6K6k5Yig6Zmk5Yet5o2uICIke2NyZWRlbnRpYWwubmFtZX0iP2AsICfmj5DnpLonLCB7CiAgICAgICAgICB0eXBlOiAnd2FybmluZycKICAgICAgICB9KTsKICAgICAgICBhd2FpdCBheGlvcy5kZWxldGUoYC9hcGkvY3JlZGVudGlhbHMvJHtjcmVkZW50aWFsLmlkfWApOwogICAgICAgIHRoaXMuJG1lc3NhZ2Uuc3VjY2Vzcygn5Yig6Zmk5oiQ5YqfJyk7CiAgICAgICAgdGhpcy5sb2FkQ3JlZGVudGlhbHMoKTsKICAgICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgICAgICBpZiAoZXJyb3IgIT09ICdjYW5jZWwnKSB7CiAgICAgICAgICBsZXQgZXJyb3JNZXNzYWdlID0gJ+WIoOmZpOWksei0pSc7CiAgICAgICAgICBpZiAoZXJyb3IucmVzcG9uc2UgJiYgZXJyb3IucmVzcG9uc2UuZGF0YSAmJiBlcnJvci5yZXNwb25zZS5kYXRhLmVycm9yKSB7CiAgICAgICAgICAgIGVycm9yTWVzc2FnZSA9IGVycm9yLnJlc3BvbnNlLmRhdGEuZXJyb3I7CiAgICAgICAgICB9CiAgICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKGVycm9yTWVzc2FnZSk7CiAgICAgICAgfQogICAgICB9CiAgICB9CiAgfSwKICBjcmVhdGVkKCkgewogICAgdGhpcy5sb2FkQ3JlZGVudGlhbHMoKTsKICB9Cn07"},{"version":3,"names":["axios","data","credentials","dialogVisible","viewDialogVisible","isEdit","currentCredential","credentialForm","name","username","password","description","rules","required","message","trigger","min","max","validator","rule","value","callback","Error","computed","dialogTitle","methods","loadCredentials","response","get","error","$message","console","showAddDialog","showEditDialog","credential","id","showViewDialog","generatePassword","chars","length","i","randomIndex","Math","floor","random","type","duration","handleSubmit","$refs","validate","put","success","post","constructor","errorMessage","deleteCredential","$confirm","delete","created"],"sources":["src/components/CredentialManagement.vue"],"sourcesContent":["<template>\r\n  <div class=\"credential-management\">\r\n    <div class=\"toolbar\">\r\n      <el-button type=\"primary\" @click=\"showAddDialog\">\r\n        <i class=\"el-icon-plus\"></i> 添加凭据\r\n      </el-button>\r\n    </div>\r\n\r\n    <el-table :data=\"credentials\" style=\"width: 100%\">\r\n      <el-table-column prop=\"name\" label=\"凭据名称\"></el-table-column>\r\n      <el-table-column prop=\"username\" label=\"用户名\"></el-table-column>\r\n      <el-table-column prop=\"server_count\" label=\"使用此凭据的服务器数\">\r\n        <template slot-scope=\"scope\">\r\n          <el-tag type=\"info\">{{ scope.row.server_count }}</el-tag>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column prop=\"description\" label=\"描述\" show-overflow-tooltip></el-table-column>\r\n      <el-table-column label=\"操作\" width=\"220\">\r\n        <template slot-scope=\"scope\">\r\n          <el-button \r\n            size=\"mini\" \r\n            type=\"primary\"\r\n            @click=\"showViewDialog(scope.row)\">\r\n            查看\r\n          </el-button>\r\n          <el-button \r\n            size=\"mini\" \r\n            type=\"warning\"\r\n            @click=\"showEditDialog(scope.row)\">\r\n            编辑\r\n          </el-button>\r\n          <el-button \r\n            size=\"mini\" \r\n            type=\"danger\" \r\n            @click=\"deleteCredential(scope.row)\"\r\n            :disabled=\"scope.row.server_count > 0\">\r\n            删除\r\n          </el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <!-- 添加/编辑凭据对话框 -->\r\n    <el-dialog :title=\"dialogTitle\" :visible.sync=\"dialogVisible\" width=\"500px\">\r\n      <el-form :model=\"credentialForm\" :rules=\"rules\" ref=\"credentialForm\" label-width=\"80px\">\r\n        <el-form-item label=\"名称\" prop=\"name\">\r\n          <el-input v-model=\"credentialForm.name\" placeholder=\"请输入凭据名称\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"用户名\" prop=\"username\">\r\n          <el-input v-model=\"credentialForm.username\" placeholder=\"请输入用户名\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item :label=\"isEdit ? '新密码' : '密码'\" prop=\"password\">\r\n          <el-input \r\n            type=\"password\" \r\n            v-model=\"credentialForm.password\" \r\n            placeholder=\"请输入密码\"\r\n            show-password>\r\n            <template slot=\"append\">\r\n              <el-button type=\"text\" @click=\"generatePassword\">生成</el-button>\r\n            </template>\r\n          </el-input>\r\n          <div class=\"form-tip\" v-if=\"isEdit\">留空表示不修改密码</div>\r\n        </el-form-item>\r\n        <el-form-item label=\"描述\" prop=\"description\">\r\n          <el-input \r\n            type=\"textarea\" \r\n            v-model=\"credentialForm.description\" \r\n            placeholder=\"请输入描述信息\"\r\n            :rows=\"3\">\r\n          </el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <div slot=\"footer\">\r\n        <el-button @click=\"dialogVisible = false\">取消</el-button>\r\n        <el-button type=\"primary\" @click=\"handleSubmit\">确定</el-button>\r\n      </div>\r\n    </el-dialog>\r\n\r\n    <!-- 查看凭据详情对话框 -->\r\n    <el-dialog title=\"凭据详情\" :visible.sync=\"viewDialogVisible\" width=\"700px\">\r\n      <template v-if=\"currentCredential\">\r\n        <div class=\"credential-detail\">\r\n          <div class=\"detail-item\">\r\n            <span class=\"item-label\">凭据名称：</span>\r\n            <span class=\"item-value\">{{ currentCredential.name }}</span>\r\n          </div>\r\n          <div class=\"detail-item\">\r\n            <span class=\"item-label\">用户名：</span>\r\n            <span class=\"item-value\">{{ currentCredential.username }}</span>\r\n          </div>\r\n          <div class=\"detail-item\">\r\n            <span class=\"item-label\">描述：</span>\r\n            <span class=\"item-value\">{{ currentCredential.description || '无' }}</span>\r\n          </div>\r\n        </div>\r\n        \r\n        <el-divider content-position=\"left\">使用此凭据的服务器</el-divider>\r\n        \r\n        <div v-if=\"currentCredential.servers && currentCredential.servers.length > 0\">\r\n          <el-table :data=\"currentCredential.servers\" style=\"width: 100%\">\r\n            <el-table-column prop=\"name\" label=\"服务器名称\"></el-table-column>\r\n            <el-table-column prop=\"ip\" label=\"IP地址\"></el-table-column>\r\n            <el-table-column prop=\"type\" label=\"类型\">\r\n              <template slot-scope=\"scope\">\r\n                <el-tag :type=\"scope.row.type === 'Windows' ? 'primary' : 'success'\">\r\n                  {{ scope.row.type }}\r\n                </el-tag>\r\n              </template>\r\n            </el-table-column>\r\n          </el-table>\r\n        </div>\r\n        <div v-else class=\"empty-list\">\r\n          暂无服务器使用此凭据\r\n        </div>\r\n      </template>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      credentials: [],\r\n      dialogVisible: false,\r\n      viewDialogVisible: false,\r\n      isEdit: false,\r\n      currentCredential: null,\r\n      credentialForm: {\r\n        name: '',\r\n        username: '',\r\n        password: '',\r\n        description: ''\r\n      },\r\n      rules: {\r\n        name: [\r\n          { required: true, message: '请输入凭据名称', trigger: 'blur' },\r\n          { min: 2, max: 50, message: '长度在 2 到 50 个字符', trigger: 'blur' }\r\n        ],\r\n        username: [\r\n          { required: true, message: '请输入用户名', trigger: 'blur' }\r\n        ],\r\n        password: [\r\n          { \r\n            validator: (rule, value, callback) => {\r\n              if (!this.isEdit && !value) {\r\n                callback(new Error('请输入密码'));\r\n              } else {\r\n                callback();\r\n              }\r\n            },\r\n            trigger: 'blur' \r\n          }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    dialogTitle() {\r\n      return this.isEdit ? '编辑凭据' : '添加凭据';\r\n    }\r\n  },\r\n  methods: {\r\n    async loadCredentials() {\r\n      try {\r\n        const response = await axios.get('/api/credentials');\r\n        this.credentials = response.data;\r\n      } catch (error) {\r\n        this.$message.error('获取凭据列表失败');\r\n        console.error(error);\r\n      }\r\n    },\r\n    \r\n    showAddDialog() {\r\n      this.isEdit = false;\r\n      this.credentialForm = {\r\n        name: '',\r\n        username: '',\r\n        password: '',\r\n        description: ''\r\n      };\r\n      this.dialogVisible = true;\r\n    },\r\n    \r\n    showEditDialog(credential) {\r\n      this.isEdit = true;\r\n      this.credentialForm = {\r\n        id: credential.id,\r\n        name: credential.name,\r\n        username: credential.username,\r\n        password: '',  // 编辑时不显示密码\r\n        description: credential.description || ''\r\n      };\r\n      this.dialogVisible = true;\r\n    },\r\n    \r\n    async showViewDialog(credential) {\r\n      try {\r\n        const response = await axios.get(`/api/credentials/${credential.id}`);\r\n        this.currentCredential = response.data;\r\n        this.viewDialogVisible = true;\r\n      } catch (error) {\r\n        this.$message.error('获取凭据详情失败');\r\n        console.error(error);\r\n      }\r\n    },\r\n    \r\n    generatePassword() {\r\n      // 生成8-12位的随机密码，包含大小写字母、数字和特殊字符\r\n      const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*()_+';\r\n      const length = 12;\r\n      let password = '';\r\n      \r\n      for (let i = 0; i < length; i++) {\r\n        const randomIndex = Math.floor(Math.random() * chars.length);\r\n        password += chars[randomIndex];\r\n      }\r\n      \r\n      this.credentialForm.password = password;\r\n      \r\n      // 弹出提示\r\n      this.$message({\r\n        message: '已生成随机密码',\r\n        type: 'success',\r\n        duration: 2000\r\n      });\r\n    },\r\n    \r\n    async handleSubmit() {\r\n      try {\r\n        await this.$refs.credentialForm.validate();\r\n        \r\n        if (this.isEdit) {\r\n          // 编辑凭据\r\n          const data = {\r\n            name: this.credentialForm.name,\r\n            username: this.credentialForm.username,\r\n            description: this.credentialForm.description\r\n          };\r\n          \r\n          // 只有当密码字段有值时才发送\r\n          if (this.credentialForm.password) {\r\n            data.password = this.credentialForm.password;\r\n          }\r\n          \r\n          await axios.put(`/api/credentials/${this.credentialForm.id}`, data);\r\n          this.$message.success('凭据更新成功');\r\n        } else {\r\n          // 添加凭据\r\n          await axios.post('/api/credentials', this.credentialForm);\r\n          this.$message.success('凭据添加成功');\r\n        }\r\n        \r\n        this.dialogVisible = false;\r\n        this.loadCredentials();\r\n      } catch (error) {\r\n        // 表单验证失败不需要特殊处理\r\n        if (error.constructor && error.constructor.name === 'Error') {\r\n          return;\r\n        }\r\n        \r\n        let errorMessage = '操作失败';\r\n        if (error.response && error.response.data && error.response.data.error) {\r\n          errorMessage = error.response.data.error;\r\n        }\r\n        this.$message.error(errorMessage);\r\n      }\r\n    },\r\n    \r\n    async deleteCredential(credential) {\r\n      try {\r\n        await this.$confirm(`确认删除凭据 \"${credential.name}\"?`, '提示', {\r\n          type: 'warning'\r\n        });\r\n        \r\n        await axios.delete(`/api/credentials/${credential.id}`);\r\n        this.$message.success('删除成功');\r\n        this.loadCredentials();\r\n      } catch (error) {\r\n        if (error !== 'cancel') {\r\n          let errorMessage = '删除失败';\r\n          if (error.response && error.response.data && error.response.data.error) {\r\n            errorMessage = error.response.data.error;\r\n          }\r\n          this.$message.error(errorMessage);\r\n        }\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    this.loadCredentials();\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.credential-management {\r\n  padding: 20px;\r\n}\r\n\r\n.toolbar {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.form-tip {\r\n  font-size: 12px;\r\n  color: #909399;\r\n  margin-top: 5px;\r\n}\r\n\r\n.credential-detail {\r\n  padding: 10px;\r\n  background-color: #f8f8f8;\r\n  border-radius: 4px;\r\n}\r\n\r\n.detail-item {\r\n  margin: 10px 0;\r\n  line-height: 20px;\r\n}\r\n\r\n.item-label {\r\n  font-weight: bold;\r\n  margin-right: 10px;\r\n  color: #606266;\r\n}\r\n\r\n.empty-list {\r\n  color: #909399;\r\n  text-align: center;\r\n  padding: 20px 0;\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]}]}