{"remainingRequest":"E:\\yunwei\\1.0\\frontend\\node_modules\\babel-loader\\lib\\index.js!E:\\yunwei\\1.0\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!E:\\yunwei\\1.0\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\yunwei\\1.0\\frontend\\src\\components\\UserManagement.vue?vue&type=script&lang=js","dependencies":[{"path":"E:\\yunwei\\1.0\\frontend\\src\\components\\UserManagement.vue","mtime":1740634990181},{"path":"E:\\yunwei\\1.0\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1740710845061},{"path":"E:\\yunwei\\1.0\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1740710847398},{"path":"E:\\yunwei\\1.0\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1740710845061},{"path":"E:\\yunwei\\1.0\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1740710848685}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKZXhwb3J0IGRlZmF1bHQgewogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICB1c2VyczogW10sCiAgICAgIGFsbFNlcnZlcnM6IFtdLAogICAgICBzZWxlY3RlZFNlcnZlcnM6IFtdLAogICAgICBjdXJyZW50VXNlcjogbnVsbCwKICAgICAgc2VsZWN0ZWRVc2VyOiBudWxsLAogICAgICB1c2VyRGlhbG9nVmlzaWJsZTogZmFsc2UsCiAgICAgIHNlcnZlckF1dGhEaWFsb2dWaXNpYmxlOiBmYWxzZSwKICAgICAgdXNlckZvcm06IHsKICAgICAgICB1c2VybmFtZTogJycsCiAgICAgICAgcGFzc3dvcmQ6ICcnLAogICAgICAgIGlzX2FkbWluOiBmYWxzZQogICAgICB9LAogICAgICB1c2VyUnVsZXM6IHsKICAgICAgICB1c2VybmFtZTogW3sKICAgICAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgICAgICAgbWVzc2FnZTogJ+ivt+i+k+WFpeeUqOaIt+WQjScsCiAgICAgICAgICB0cmlnZ2VyOiAnYmx1cicKICAgICAgICB9XSwKICAgICAgICBwYXNzd29yZDogW3sKICAgICAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgICAgICAgbWVzc2FnZTogJ+ivt+i+k+WFpeWvhueggScsCiAgICAgICAgICB0cmlnZ2VyOiAnYmx1cicKICAgICAgICB9XQogICAgICB9CiAgICB9OwogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIGRpYWxvZ1RpdGxlKCkgewogICAgICByZXR1cm4gdGhpcy5zZWxlY3RlZFVzZXIgPyAn57yW6L6R55So5oi3JyA6ICfmt7vliqDnlKjmiLcnOwogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgYXN5bmMgbG9hZFVzZXJzKCkgewogICAgICB0cnkgewogICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgYXhpb3MuZ2V0KCcvYXBpL3VzZXJzJyk7CiAgICAgICAgdGhpcy51c2VycyA9IHJlc3BvbnNlLmRhdGE7CiAgICAgICAgLy8g6I635Y+W5b2T5YmN55So5oi35L+h5oGvCiAgICAgICAgY29uc3QgY3VycmVudFVzZXJSZXNwb25zZSA9IGF3YWl0IGF4aW9zLmdldCgnL2FwaS91c2Vycy9jdXJyZW50Jyk7CiAgICAgICAgdGhpcy5jdXJyZW50VXNlciA9IGN1cnJlbnRVc2VyUmVzcG9uc2UuZGF0YTsKICAgICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKCfojrflj5bnlKjmiLfliJfooajlpLHotKUnKTsKICAgICAgfQogICAgfSwKICAgIGFzeW5jIGxvYWRTZXJ2ZXJzKCkgewogICAgICB0cnkgewogICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgYXhpb3MuZ2V0KCcvYXBpL3NlcnZlcnMnKTsKICAgICAgICB0aGlzLmFsbFNlcnZlcnMgPSByZXNwb25zZS5kYXRhOwogICAgICB9IGNhdGNoIChlcnJvcikgewogICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IoJ+iOt+WPluacjeWKoeWZqOWIl+ihqOWksei0pScpOwogICAgICB9CiAgICB9LAogICAgc2hvd0FkZFVzZXJEaWFsb2coKSB7CiAgICAgIHRoaXMuc2VsZWN0ZWRVc2VyID0gbnVsbDsKICAgICAgdGhpcy51c2VyRm9ybSA9IHsKICAgICAgICB1c2VybmFtZTogJycsCiAgICAgICAgcGFzc3dvcmQ6ICcnLAogICAgICAgIGlzX2FkbWluOiBmYWxzZQogICAgICB9OwogICAgICB0aGlzLnVzZXJEaWFsb2dWaXNpYmxlID0gdHJ1ZTsKICAgIH0sCiAgICBzaG93RWRpdFVzZXJEaWFsb2codXNlcikgewogICAgICB0aGlzLnNlbGVjdGVkVXNlciA9IHVzZXI7CiAgICAgIHRoaXMudXNlckZvcm0gPSB7CiAgICAgICAgdXNlcm5hbWU6IHVzZXIudXNlcm5hbWUsCiAgICAgICAgcGFzc3dvcmQ6ICcnLAogICAgICAgIGlzX2FkbWluOiB1c2VyLmlzX2FkbWluCiAgICAgIH07CiAgICAgIHRoaXMudXNlckRpYWxvZ1Zpc2libGUgPSB0cnVlOwogICAgfSwKICAgIGFzeW5jIGhhbmRsZVVzZXJTdWJtaXQoKSB7CiAgICAgIHRyeSB7CiAgICAgICAgaWYgKHRoaXMuc2VsZWN0ZWRVc2VyKSB7CiAgICAgICAgICAvLyDnvJbovpHnlKjmiLcKICAgICAgICAgIGF3YWl0IGF4aW9zLnB1dChgL2FwaS91c2Vycy8ke3RoaXMuc2VsZWN0ZWRVc2VyLmlkfWAsIHRoaXMudXNlckZvcm0pOwogICAgICAgICAgdGhpcy4kbWVzc2FnZS5zdWNjZXNzKCfnlKjmiLfmm7TmlrDmiJDlip8nKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgLy8g5re75Yqg55So5oi3CiAgICAgICAgICBhd2FpdCBheGlvcy5wb3N0KCcvYXBpL3VzZXJzJywgdGhpcy51c2VyRm9ybSk7CiAgICAgICAgICB0aGlzLiRtZXNzYWdlLnN1Y2Nlc3MoJ+eUqOaIt+a3u+WKoOaIkOWKnycpOwogICAgICAgIH0KICAgICAgICB0aGlzLnVzZXJEaWFsb2dWaXNpYmxlID0gZmFsc2U7CiAgICAgICAgdGhpcy5sb2FkVXNlcnMoKTsKICAgICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgICAgICBsZXQgZXJyb3JNZXNzYWdlID0gJ+aTjeS9nOWksei0pSc7CiAgICAgICAgaWYgKGVycm9yLnJlc3BvbnNlICYmIGVycm9yLnJlc3BvbnNlLmRhdGEgJiYgZXJyb3IucmVzcG9uc2UuZGF0YS5lcnJvcikgewogICAgICAgICAgZXJyb3JNZXNzYWdlID0gZXJyb3IucmVzcG9uc2UuZGF0YS5lcnJvcjsKICAgICAgICB9CiAgICAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcihlcnJvck1lc3NhZ2UpOwogICAgICB9CiAgICB9LAogICAgYXN5bmMgZGVsZXRlVXNlcih1c2VyKSB7CiAgICAgIHRyeSB7CiAgICAgICAgYXdhaXQgdGhpcy4kY29uZmlybSgn56Gu6K6k5Yig6Zmk6K+l55So5oi3PycsICfmj5DnpLonLCB7CiAgICAgICAgICB0eXBlOiAnd2FybmluZycKICAgICAgICB9KTsKICAgICAgICBhd2FpdCBheGlvcy5kZWxldGUoYC9hcGkvdXNlcnMvJHt1c2VyLmlkfWApOwogICAgICAgIHRoaXMuJG1lc3NhZ2Uuc3VjY2Vzcygn5Yig6Zmk5oiQ5YqfJyk7CiAgICAgICAgdGhpcy5sb2FkVXNlcnMoKTsKICAgICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgICAgICBpZiAoZXJyb3IgIT09ICdjYW5jZWwnKSB7CiAgICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKCfliKDpmaTlpLHotKUnKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgICBhc3luYyBzaG93U2VydmVyQXV0aERpYWxvZyh1c2VyKSB7CiAgICAgIHRoaXMuc2VsZWN0ZWRVc2VyID0gdXNlcjsKICAgICAgdGhpcy5zZXJ2ZXJBdXRoRGlhbG9nVmlzaWJsZSA9IHRydWU7CiAgICAgIHRyeSB7CiAgICAgICAgYXdhaXQgdGhpcy5sb2FkU2VydmVycygpOyAvLyDliqDovb3miYDmnInmnI3liqHlmagKICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGF4aW9zLmdldChgL2FwaS91c2Vycy8ke3VzZXIuaWR9L3NlcnZlcnNgKTsKICAgICAgICB0aGlzLnNlbGVjdGVkU2VydmVycyA9IHJlc3BvbnNlLmRhdGEubWFwKHNlcnZlciA9PiBzZXJ2ZXIuaWQpOwogICAgICB9IGNhdGNoIChlcnJvcikgewogICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IoJ+iOt+WPlueUqOaIt+acjeWKoeWZqOaOiOadg+Wksei0pScpOwogICAgICB9CiAgICB9LAogICAgYXN5bmMgaGFuZGxlU2VydmVyQXV0aCgpIHsKICAgICAgdHJ5IHsKICAgICAgICBhd2FpdCBheGlvcy5wb3N0KGAvYXBpL3VzZXJzLyR7dGhpcy5zZWxlY3RlZFVzZXIuaWR9L3NlcnZlcnNgLCB7CiAgICAgICAgICBzZXJ2ZXJfaWRzOiB0aGlzLnNlbGVjdGVkU2VydmVycwogICAgICAgIH0pOwogICAgICAgIHRoaXMuJG1lc3NhZ2Uuc3VjY2Vzcygn5pyN5Yqh5Zmo5o6I5p2D5pu05paw5oiQ5YqfJyk7CiAgICAgICAgdGhpcy5zZXJ2ZXJBdXRoRGlhbG9nVmlzaWJsZSA9IGZhbHNlOwogICAgICB9IGNhdGNoIChlcnJvcikgewogICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IoJ+abtOaWsOacjeWKoeWZqOaOiOadg+Wksei0pScpOwogICAgICB9CiAgICB9CiAgfSwKICBjcmVhdGVkKCkgewogICAgdGhpcy5sb2FkVXNlcnMoKTsKICB9Cn07"},{"version":3,"names":["axios","data","users","allServers","selectedServers","currentUser","selectedUser","userDialogVisible","serverAuthDialogVisible","userForm","username","password","is_admin","userRules","required","message","trigger","computed","dialogTitle","methods","loadUsers","response","get","currentUserResponse","error","$message","loadServers","showAddUserDialog","showEditUserDialog","user","handleUserSubmit","put","id","success","post","errorMessage","deleteUser","$confirm","type","delete","showServerAuthDialog","map","server","handleServerAuth","server_ids","created"],"sources":["src/components/UserManagement.vue"],"sourcesContent":["<template>\r\n  <div class=\"user-management\">\r\n    <div class=\"toolbar\">\r\n      <el-button type=\"primary\" @click=\"showAddUserDialog\">\r\n        <i class=\"el-icon-plus\"></i> 添加用户\r\n      </el-button>\r\n    </div>\r\n\r\n    <el-table :data=\"users\" style=\"width: 100%\">\r\n      <el-table-column prop=\"username\" label=\"用户名\"></el-table-column>\r\n      <el-table-column prop=\"is_admin\" label=\"角色\">\r\n        <template slot-scope=\"scope\">\r\n          {{ scope.row.is_admin ? '管理员' : '普通用户' }}\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"授权服务器\">\r\n        <template slot-scope=\"scope\">\r\n          <el-button size=\"mini\" @click=\"showServerAuthDialog(scope.row)\">\r\n            管理授权\r\n          </el-button>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"操作\" width=\"200\">\r\n        <template slot-scope=\"scope\">\r\n          <el-button \r\n            size=\"mini\" \r\n            type=\"primary\"\r\n            @click=\"showEditUserDialog(scope.row)\">\r\n            编辑\r\n          </el-button>\r\n          <el-button \r\n            size=\"mini\" \r\n            type=\"danger\" \r\n            @click=\"deleteUser(scope.row)\"\r\n            :disabled=\"scope.row.id === currentUser.id\">\r\n            删除\r\n          </el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <!-- 添加/编辑用户对话框 -->\r\n    <el-dialog :title=\"dialogTitle\" :visible.sync=\"userDialogVisible\">\r\n      <el-form :model=\"userForm\" :rules=\"userRules\" ref=\"userForm\" label-width=\"100px\">\r\n        <el-form-item label=\"用户名\" prop=\"username\">\r\n          <el-input v-model=\"userForm.username\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"密码\" prop=\"password\">\r\n          <el-input type=\"password\" v-model=\"userForm.password\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"是否管理员\">\r\n          <el-switch v-model=\"userForm.is_admin\"></el-switch>\r\n        </el-form-item>\r\n      </el-form>\r\n      <div slot=\"footer\">\r\n        <el-button @click=\"userDialogVisible = false\">取消</el-button>\r\n        <el-button type=\"primary\" @click=\"handleUserSubmit\">确定</el-button>\r\n      </div>\r\n    </el-dialog>\r\n\r\n    <!-- 服务器授权对话框 -->\r\n    <el-dialog title=\"服务器授权\" :visible.sync=\"serverAuthDialogVisible\">\r\n      <el-transfer\r\n        v-model=\"selectedServers\"\r\n        :data=\"allServers\"\r\n        :titles=\"['未授权服务器', '已授权服务器']\"\r\n        :props=\"{\r\n          key: 'id',\r\n          label: 'name'\r\n        }\"\r\n      ></el-transfer>\r\n      <div slot=\"footer\">\r\n        <el-button @click=\"serverAuthDialogVisible = false\">取消</el-button>\r\n        <el-button type=\"primary\" @click=\"handleServerAuth\">确定</el-button>\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      users: [],\r\n      allServers: [],\r\n      selectedServers: [],\r\n      currentUser: null,\r\n      selectedUser: null,\r\n      userDialogVisible: false,\r\n      serverAuthDialogVisible: false,\r\n      userForm: {\r\n        username: '',\r\n        password: '',\r\n        is_admin: false\r\n      },\r\n      userRules: {\r\n        username: [\r\n          { required: true, message: '请输入用户名', trigger: 'blur' }\r\n        ],\r\n        password: [\r\n          { required: true, message: '请输入密码', trigger: 'blur' }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    dialogTitle() {\r\n      return this.selectedUser ? '编辑用户' : '添加用户';\r\n    }\r\n  },\r\n  methods: {\r\n    async loadUsers() {\r\n      try {\r\n        const response = await axios.get('/api/users');\r\n        this.users = response.data;\r\n        // 获取当前用户信息\r\n        const currentUserResponse = await axios.get('/api/users/current');\r\n        this.currentUser = currentUserResponse.data;\r\n      } catch (error) {\r\n        this.$message.error('获取用户列表失败');\r\n      }\r\n    },\r\n    \r\n    async loadServers() {\r\n      try {\r\n        const response = await axios.get('/api/servers');\r\n        this.allServers = response.data;\r\n      } catch (error) {\r\n        this.$message.error('获取服务器列表失败');\r\n      }\r\n    },\r\n    \r\n    showAddUserDialog() {\r\n      this.selectedUser = null;\r\n      this.userForm = {\r\n        username: '',\r\n        password: '',\r\n        is_admin: false\r\n      };\r\n      this.userDialogVisible = true;\r\n    },\r\n    \r\n    showEditUserDialog(user) {\r\n      this.selectedUser = user;\r\n      this.userForm = {\r\n        username: user.username,\r\n        password: '',\r\n        is_admin: user.is_admin\r\n      };\r\n      this.userDialogVisible = true;\r\n    },\r\n    \r\n    async handleUserSubmit() {\r\n      try {\r\n        if (this.selectedUser) {\r\n          // 编辑用户\r\n          await axios.put(`/api/users/${this.selectedUser.id}`, this.userForm);\r\n          this.$message.success('用户更新成功');\r\n        } else {\r\n          // 添加用户\r\n          await axios.post('/api/users', this.userForm);\r\n          this.$message.success('用户添加成功');\r\n        }\r\n        this.userDialogVisible = false;\r\n        this.loadUsers();\r\n      } catch (error) {\r\n        let errorMessage = '操作失败';\r\n        if (error.response && error.response.data && error.response.data.error) {\r\n          errorMessage = error.response.data.error;\r\n        }\r\n        this.$message.error(errorMessage);\r\n      }\r\n    },\r\n    \r\n    async deleteUser(user) {\r\n      try {\r\n        await this.$confirm('确认删除该用户?', '提示', {\r\n          type: 'warning'\r\n        });\r\n        await axios.delete(`/api/users/${user.id}`);\r\n        this.$message.success('删除成功');\r\n        this.loadUsers();\r\n      } catch (error) {\r\n        if (error !== 'cancel') {\r\n          this.$message.error('删除失败');\r\n        }\r\n      }\r\n    },\r\n    \r\n    async showServerAuthDialog(user) {\r\n      this.selectedUser = user;\r\n      this.serverAuthDialogVisible = true;\r\n      try {\r\n        await this.loadServers(); // 加载所有服务器\r\n        const response = await axios.get(`/api/users/${user.id}/servers`);\r\n        this.selectedServers = response.data.map(server => server.id);\r\n      } catch (error) {\r\n        this.$message.error('获取用户服务器授权失败');\r\n      }\r\n    },\r\n    \r\n    async handleServerAuth() {\r\n      try {\r\n        await axios.post(`/api/users/${this.selectedUser.id}/servers`, {\r\n          server_ids: this.selectedServers\r\n        });\r\n        this.$message.success('服务器授权更新成功');\r\n        this.serverAuthDialogVisible = false;\r\n      } catch (error) {\r\n        this.$message.error('更新服务器授权失败');\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    this.loadUsers();\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.user-management {\r\n  padding: 20px;\r\n}\r\n\r\n.toolbar {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.el-transfer {\r\n  margin: 20px 0;\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]}]}