{"remainingRequest":"D:\\gatekeeper\\frontend\\node_modules\\babel-loader\\lib\\index.js!D:\\gatekeeper\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\gatekeeper\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\gatekeeper\\frontend\\src\\components\\Layout.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\gatekeeper\\frontend\\src\\components\\Layout.vue","mtime":1751423160169},{"path":"D:\\gatekeeper\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1747724956321},{"path":"D:\\gatekeeper\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1747724958365},{"path":"D:\\gatekeeper\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1747724956321},{"path":"D:\\gatekeeper\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1747724959585}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdMYXlvdXQnLAogIGRhdGEoKSB7CiAgICAvLyDlr4bnoIHnoa7orqTpqozor4Hlh73mlbAKICAgIGNvbnN0IHZhbGlkYXRlQ29uZmlybVBhc3N3b3JkID0gKHJ1bGUsIHZhbHVlLCBjYWxsYmFjaykgPT4gewogICAgICBpZiAodmFsdWUgIT09IHRoaXMucGFzc3dvcmRGb3JtLm5ld1Bhc3N3b3JkKSB7CiAgICAgICAgY2FsbGJhY2sobmV3IEVycm9yKCfkuKTmrKHovpPlhaXnmoTlr4bnoIHkuI3kuIDoh7QnKSk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgY2FsbGJhY2soKTsKICAgICAgfQogICAgfTsKICAgIHJldHVybiB7CiAgICAgIGNsaWVudENvbm5lY3RlZDogZmFsc2UsCiAgICAgIGNsaWVudFN0YXR1czogbnVsbCwKICAgICAgY2hlY2tpbmdTdGF0dXM6IGZhbHNlLAogICAgICBzaG93Q2xpZW50RGlhbG9nOiBmYWxzZSwKICAgICAgcGFzc3dvcmREaWFsb2dWaXNpYmxlOiBmYWxzZSwKICAgICAgY2xpZW50Tm90Q29ubmVjdGVkRGlhbG9nVmlzaWJsZTogZmFsc2UsCiAgICAgIGNsaWVudENvbmZpZzogewogICAgICAgIC8vIOWuouaIt+err+WNj+iuru+8jOeUqOS6juWQr+WKqOWuouaIt+err+W6lOeUqAogICAgICAgIHByb3RvY29sOiAnZm9ydDovLycsCiAgICAgICAgLy8g5a6i5oi356uv56uv5Y+j77yM55So5LqO5qOA5rWL5a6i5oi356uv54q25oCBCiAgICAgICAgcG9ydDogNDU2NTQsCiAgICAgICAgLy8g5a6i5oi356uv5LiL6L295paH5Lu25ZCNCiAgICAgICAgZmlsZU5hbWU6ICdHYXRla2VlcGVyU2V0dXAuZXhlJwogICAgICB9LAogICAgICBwYXNzd29yZEZvcm06IHsKICAgICAgICBvbGRQYXNzd29yZDogJycsCiAgICAgICAgbmV3UGFzc3dvcmQ6ICcnLAogICAgICAgIGNvbmZpcm1QYXNzd29yZDogJycKICAgICAgfSwKICAgICAgcGFzc3dvcmRSdWxlczogewogICAgICAgIG9sZFBhc3N3b3JkOiBbewogICAgICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICAgICAgICBtZXNzYWdlOiAn6K+36L6T5YWl5Y6f5a+G56CBJywKICAgICAgICAgIHRyaWdnZXI6ICdibHVyJwogICAgICAgIH1dLAogICAgICAgIG5ld1Bhc3N3b3JkOiBbewogICAgICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICAgICAgICBtZXNzYWdlOiAn6K+36L6T5YWl5paw5a+G56CBJywKICAgICAgICAgIHRyaWdnZXI6ICdibHVyJwogICAgICAgIH0sIHsKICAgICAgICAgIG1pbjogNiwKICAgICAgICAgIG1lc3NhZ2U6ICflr4bnoIHplb/luqbkuI3og73lsI/kuo425Liq5a2X56ymJywKICAgICAgICAgIHRyaWdnZXI6ICdibHVyJwogICAgICAgIH1dLAogICAgICAgIGNvbmZpcm1QYXNzd29yZDogW3sKICAgICAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgICAgICAgbWVzc2FnZTogJ+ivt+WGjeasoei+k+WFpeaWsOWvhueggScsCiAgICAgICAgICB0cmlnZ2VyOiAnYmx1cicKICAgICAgICB9LCB7CiAgICAgICAgICB2YWxpZGF0b3I6IHZhbGlkYXRlQ29uZmlybVBhc3N3b3JkLAogICAgICAgICAgdHJpZ2dlcjogJ2JsdXInCiAgICAgICAgfV0KICAgICAgfSwKICAgICAgc3RhdHVzQ2hlY2tDb250cm9sbGVyOiBudWxsLAogICAgICBsYXN0Q2hlY2tUaW1lOiAwLAogICAgICAvLyDmt7vliqDkuIrmrKHmo4Dmn6Xml7bpl7TorrDlvZUKICAgICAgY29uc2VjdXRpdmVGYWlsdXJlczogMCwKICAgICAgLy8g5re75Yqg6L+e57ut5aSx6LSl5qyh5pWw6K6w5b2VCiAgICAgIGRpYWxvZ1VwZGF0ZVRpbWVyOiBudWxsIC8vIOW8ueeql+eKtuaAgeabtOaWsOWumuaXtuWZqAogICAgfTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICBzdGF0dXNJY29uKCkgewogICAgICBpZiAodGhpcy5jaGVja2luZ1N0YXR1cykgcmV0dXJuICdlbC1pY29uLWxvYWRpbmcnOwogICAgICBpZiAoIXRoaXMuY2xpZW50U3RhdHVzKSByZXR1cm4gJ2VsLWljb24tZXJyb3InOwogICAgICByZXR1cm4gdGhpcy5jbGllbnRTdGF0dXMuc2VydmVyX2Nvbm5lY3RlZCA/ICdlbC1pY29uLXN1Y2Nlc3MnIDogJ2VsLWljb24td2FybmluZyc7CiAgICB9LAogICAgc3RhdHVzVGV4dCgpIHsKICAgICAgaWYgKHRoaXMuY2hlY2tpbmdTdGF0dXMpIHJldHVybiAn5q2j5Zyo5qOA5p+l5a6i5oi356uv54q25oCBLi4uJzsKICAgICAgaWYgKCF0aGlzLmNsaWVudFN0YXR1cykgcmV0dXJuICflrqLmiLfnq6/mnKrov57mjqUnOwogICAgICBpZiAoIXRoaXMuY2xpZW50U3RhdHVzLnNlcnZlcl9jb25uZWN0ZWQpIHJldHVybiAn5aCh5Z6S5py66L+e5o6l5pat5byAJzsKICAgICAgcmV0dXJuICflrqLmiLfnq6/lt7Lov57mjqUnOwogICAgfSwKICAgIGlzTG9nZ2VkSW4oKSB7CiAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5zdGF0ZS51c2VyICE9PSBudWxsOwogICAgfSwKICAgIGlzQWRtaW4oKSB7CiAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5zdGF0ZS51c2VyICYmIHRoaXMuJHN0b3JlLnN0YXRlLnVzZXIuaXNfYWRtaW47CiAgICB9LAogICAgY3VycmVudFVzZXIoKSB7CiAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5zdGF0ZS51c2VyIHx8IHsKICAgICAgICB1c2VybmFtZTogJycKICAgICAgfTsKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIC8vIOa3u+WKoOabtOaWsOW8ueeql+aYvuekuueKtuaAgeeahOaWueazlQogICAgdXBkYXRlRGlhbG9nVmlzaWJpbGl0eSgpIHsKICAgICAgY29uc29sZS5sb2coJ+abtOaWsOW8ueeql+eKtuaAge+8jOW9k+WJjeWuouaIt+err+eKtuaAgTonLCB0aGlzLnN0YXR1c0ljb24sICflt7Lov57mjqU6JywgdGhpcy5jbGllbnRDb25uZWN0ZWQpOwoKICAgICAgLy8g5aaC5p6c54q25oCB5Zu+5qCH5piv5oiQ5Yqf77yM5by65Yi25YWz6Zet5by556qXCiAgICAgIGlmICh0aGlzLnN0YXR1c0ljb24gPT09ICdlbC1pY29uLXN1Y2Nlc3MnKSB7CiAgICAgICAgdGhpcy5jbGllbnROb3RDb25uZWN0ZWREaWFsb2dWaXNpYmxlID0gZmFsc2U7CiAgICAgICAgY29uc29sZS5sb2coJ+WuouaIt+err+W3sui/nuaOpe+8jOWFs+mXreW8ueeqlycpOwogICAgICB9CgogICAgICAvLyDlpoLmnpzlrqLmiLfnq6/lt7Lov57mjqXvvIzlvLrliLblhbPpl63lvLnnqpcKICAgICAgaWYgKHRoaXMuY2xpZW50Q29ubmVjdGVkKSB7CiAgICAgICAgdGhpcy5jbGllbnROb3RDb25uZWN0ZWREaWFsb2dWaXNpYmxlID0gZmFsc2U7CiAgICAgICAgY29uc29sZS5sb2coJ+WuouaIt+err+W3sui/nuaOpe+8jOWFs+mXreW8ueeqlycpOwogICAgICB9CiAgICB9LAogICAgLy8g6YeN572u5LiN5rS75Yqo6K6h5pe25ZmoCiAgICByZXNldEluYWN0aXZpdHlUaW1lcigpIHsKICAgICAgLy8g5L2/55SoVnVleCBhY3Rpb27ph43nva7orqHml7blmagKICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ3Jlc2V0SW5hY3Rpdml0eVRpbWVyJyk7CiAgICB9LAogICAgLy8g5qOA5p+l5a6i5oi356uv54q25oCB5bm26YeN572u6K6h5pe25ZmoCiAgICBjaGVja0FuZFJlc2V0VGltZXIoKSB7CiAgICAgIHRoaXMucmVzZXRJbmFjdGl2aXR5VGltZXIoKTsKCiAgICAgIC8vIOWmguaenOacgOWQjuS4gOasoeajgOafpeaYr+WcqDPnp5LliY3vvIzkuJTlvZPliY3mnKrlnKjmo4Dmn6XkuK3vvIzliJnnq4vljbPmo4Dmn6UKICAgICAgY29uc3Qgbm93ID0gRGF0ZS5ub3coKTsKICAgICAgaWYgKG5vdyAtIHRoaXMubGFzdENoZWNrVGltZSA+IDMwMDAgJiYgIXRoaXMuY2hlY2tpbmdTdGF0dXMpIHsKICAgICAgICB0aGlzLmNoZWNrQ2xpZW50U3RhdHVzKCk7CiAgICAgIH0KICAgIH0sCiAgICBhc3luYyBoYW5kbGVMb2dvdXQoKSB7CiAgICAgIHRyeSB7CiAgICAgICAgLy8g6LCD55So5rOo6ZSA5o6l5Y+jCiAgICAgICAgYXdhaXQgYXhpb3MucG9zdCgnL2FwaS9hdXRoL2xvZ291dCcpOwogICAgICAgIC8vIOa4hemZpOacrOWcsOWtmOWCqOeahCB0b2tlbiDlkoznlKjmiLfkv6Hmga8KICAgICAgICBsb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbSgndG9rZW4nKTsKICAgICAgICB0aGlzLiRzdG9yZS5jb21taXQoJ2NsZWFyVXNlckluZm8nKTsKICAgICAgICAvLyDlgZzmraLnirbmgIHmo4Dmn6UKICAgICAgICB0aGlzLnN0b3BTdGF0dXNDaGVjaygpOwogICAgICAgIC8vIOmHjee9rueKtuaAgQogICAgICAgIHRoaXMuY2xpZW50Q29ubmVjdGVkID0gZmFsc2U7CiAgICAgICAgdGhpcy5jbGllbnRTdGF0dXMgPSBudWxsOwogICAgICAgIHRoaXMuY2hlY2tpbmdTdGF0dXMgPSBmYWxzZTsKICAgICAgICB0aGlzLnNob3dDbGllbnREaWFsb2cgPSBmYWxzZTsKICAgICAgICB0aGlzLmNsaWVudE5vdENvbm5lY3RlZERpYWxvZ1Zpc2libGUgPSBmYWxzZTsKICAgICAgICAvLyDot7PovazliLDnmbvlvZXpobXpnaIKICAgICAgICB0aGlzLiRyb3V0ZXIucHVzaCgnL2xvZ2luJyk7CiAgICAgICAgdGhpcy4kbWVzc2FnZS5zdWNjZXNzKCfms6jplIDmiJDlip8nKTsKICAgICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgICAgICBjb25zb2xlLmVycm9yKCfms6jplIDlpLHotKU6JywgZXJyb3IpOwogICAgICAgIGNvbnN0IGVycm9yTWVzc2FnZSA9IGVycm9yLnJlc3BvbnNlICYmIGVycm9yLnJlc3BvbnNlLmRhdGEgJiYgZXJyb3IucmVzcG9uc2UuZGF0YS5lcnJvciB8fCBlcnJvci5tZXNzYWdlOwogICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IoJ+azqOmUgOWksei0pTogJyArIGVycm9yTWVzc2FnZSk7CiAgICAgIH0KICAgIH0sCiAgICBhc3luYyBjaGVja0NsaWVudFN0YXR1cygpIHsKICAgICAgLy8g5aaC5p6c5pyq55m75b2V77yM5LiN5omn6KGM5qOA5p+lCiAgICAgIGlmICghdGhpcy5pc0xvZ2dlZEluKSB7CiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICAvLyDmo4Dmn6XmmK/lkKblpITkuo7lhrfljbTmnJ/vvIgx56eS5YaF77yJ5LiU5b2T5YmN5pyq5Zyo5qOA5p+l5LitCiAgICAgIGNvbnN0IG5vdyA9IERhdGUubm93KCk7CiAgICAgIGlmIChub3cgLSB0aGlzLmxhc3RDaGVja1RpbWUgPCAxMDAwICYmICF0aGlzLmNoZWNraW5nU3RhdHVzKSB7CiAgICAgICAgY29uc29sZS5sb2coJ+WuouaIt+err+eKtuaAgeajgOafpei/h+S6jumikee5ge+8jOW/veeVpeacrOasoeajgOafpScpOwogICAgICAgIHJldHVybjsKICAgICAgfQoKICAgICAgLy8g5pu05paw5pyA5ZCO5qOA5p+l5pe26Ze0CiAgICAgIHRoaXMubGFzdENoZWNrVGltZSA9IG5vdzsKICAgICAgdHJ5IHsKICAgICAgICAvLyDorr7nva7mraPlnKjmo4Dmn6XnirbmgIEKICAgICAgICB0aGlzLmNoZWNraW5nU3RhdHVzID0gdHJ1ZTsKCiAgICAgICAgLy8g5Y+W5raI5LmL5YmN55qE6K+35rGC77yI5aaC5p6c5pyJ77yJCiAgICAgICAgaWYgKHRoaXMuc3RhdHVzQ2hlY2tDb250cm9sbGVyKSB7CiAgICAgICAgICB0aGlzLnN0YXR1c0NoZWNrQ29udHJvbGxlci5hYm9ydCgpOwogICAgICAgIH0KCiAgICAgICAgLy8g5Yib5bu65paw55qEIEFib3J0Q29udHJvbGxlcgogICAgICAgIHRoaXMuc3RhdHVzQ2hlY2tDb250cm9sbGVyID0gbmV3IEFib3J0Q29udHJvbGxlcigpOwogICAgICAgIGNvbnN0IHRpbWVvdXQgPSBzZXRUaW1lb3V0KCgpID0+IHRoaXMuc3RhdHVzQ2hlY2tDb250cm9sbGVyLmFib3J0KCksIDE1MDApOwoKICAgICAgICAvLyDnm7TmjqXku47mnKzlnLDlrqLmiLfnq6/ojrflj5bnirbmgIEKICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKCdodHRwOi8vMTI3LjAuMC4xOjQ1NjU0L3N0YXR1cycsIHsKICAgICAgICAgIG1ldGhvZDogJ0dFVCcsCiAgICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAgICdBY2NlcHQnOiAnYXBwbGljYXRpb24vanNvbicKICAgICAgICAgIH0sCiAgICAgICAgICBzaWduYWw6IHRoaXMuc3RhdHVzQ2hlY2tDb250cm9sbGVyLnNpZ25hbAogICAgICAgIH0pOwogICAgICAgIGNsZWFyVGltZW91dCh0aW1lb3V0KTsKICAgICAgICBpZiAocmVzcG9uc2Uub2spIHsKICAgICAgICAgIGNvbnN0IGRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7CiAgICAgICAgICB0aGlzLmNsaWVudFN0YXR1cyA9IGRhdGE7CiAgICAgICAgICBjb25zdCB3YXNDb25uZWN0ZWQgPSB0aGlzLmNsaWVudENvbm5lY3RlZDsKICAgICAgICAgIHRoaXMuY2xpZW50Q29ubmVjdGVkID0gZGF0YS5zdGF0dXMgPT09ICdydW5uaW5nJyAmJiBkYXRhLnNlcnZlcl9jb25uZWN0ZWQ7CgogICAgICAgICAgLy8g5L+d5a2Y5a6i5oi356uv5L+h5oGv5Yiwc3RvcmUKICAgICAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgnU0VUX0NMSUVOVF9JTkZPJywgZGF0YSk7CgogICAgICAgICAgLy8g5qC55o2u6L+e5o6l54q25oCB55u05o6l5o6n5Yi25by556qXCiAgICAgICAgICB0aGlzLmNsaWVudE5vdENvbm5lY3RlZERpYWxvZ1Zpc2libGUgPSAhdGhpcy5jbGllbnRDb25uZWN0ZWQ7CgogICAgICAgICAgLy8g5aaC5p6c6L+e5o6l5oiQ5Yqf77yM6YeN572u6L+e57ut5aSx6LSl5qyh5pWwCiAgICAgICAgICBpZiAodGhpcy5jbGllbnRDb25uZWN0ZWQpIHsKICAgICAgICAgICAgdGhpcy5jb25zZWN1dGl2ZUZhaWx1cmVzID0gMDsKCiAgICAgICAgICAgIC8vIOW8uuWItuagueaNruWuouaIt+err+eKtuaAgeabtOaWsOW8ueeqlwogICAgICAgICAgICB0aGlzLnVwZGF0ZURpYWxvZ1Zpc2liaWxpdHkoKTsKCiAgICAgICAgICAgIC8vIOWmguaenOS5i+WJjeacqui/nuaOpe+8jOeOsOWcqOi/nuaOpeaIkOWKn++8jOaYvuekuui/nuaOpeaIkOWKn+aPkOekugogICAgICAgICAgICBpZiAoIXdhc0Nvbm5lY3RlZCkgewogICAgICAgICAgICAgIHRoaXMuJG5vdGlmeSh7CiAgICAgICAgICAgICAgICB0aXRsZTogJ+WuouaIt+err+W3sui/nuaOpScsCiAgICAgICAgICAgICAgICBtZXNzYWdlOiAn5aCh5Z6S5py65a6i5oi356uv6L+e5o6l5oiQ5YqfJywKICAgICAgICAgICAgICAgIHR5cGU6ICdzdWNjZXNzJywKICAgICAgICAgICAgICAgIGR1cmF0aW9uOiAzMDAwLAogICAgICAgICAgICAgICAgcG9zaXRpb246ICd0b3AtcmlnaHQnCiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIC8vIOWNs+S9v+ivt+axguaIkOWKn++8jOS9huWmguaenOWuouaIt+err+acquecn+ato+i/nuaOpe+8jOS5n+iuoeS4uuWksei0pQogICAgICAgICAgICB0aGlzLmNvbnNlY3V0aXZlRmFpbHVyZXMrKzsKICAgICAgICAgIH0KICAgICAgICAgIGNvbnNvbGUubG9nKCflrqLmiLfnq6/nirbmgIE6JywgZGF0YSk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHRoaXMuY2xpZW50U3RhdHVzID0gbnVsbDsKICAgICAgICAgIHRoaXMuY2xpZW50Q29ubmVjdGVkID0gZmFsc2U7CiAgICAgICAgICB0aGlzLiRzdG9yZS5jb21taXQoJ1NFVF9DTElFTlRfSU5GTycsIG51bGwpOwogICAgICAgICAgdGhpcy5jb25zZWN1dGl2ZUZhaWx1cmVzKys7CiAgICAgICAgICB0aGlzLmNsaWVudE5vdENvbm5lY3RlZERpYWxvZ1Zpc2libGUgPSB0cnVlOwogICAgICAgIH0KICAgICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgICAgICB0aGlzLmNsaWVudFN0YXR1cyA9IG51bGw7CiAgICAgICAgdGhpcy5jbGllbnRDb25uZWN0ZWQgPSBmYWxzZTsKICAgICAgICB0aGlzLiRzdG9yZS5jb21taXQoJ1NFVF9DTElFTlRfSU5GTycsIG51bGwpOwogICAgICAgIGlmIChlcnJvci5uYW1lID09PSAnQWJvcnRFcnJvcicpIHsKICAgICAgICAgIHRoaXMuY29uc2VjdXRpdmVGYWlsdXJlcyArPSAwLjU7CiAgICAgICAgICBjb25zb2xlLmxvZygn5qOA5p+l5a6i5oi356uv54q25oCB6LaF5pe2Jyk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHRoaXMuY29uc2VjdXRpdmVGYWlsdXJlcysrOwogICAgICAgICAgY29uc29sZS5lcnJvcign5qOA5p+l5a6i5oi356uv54q25oCB5aSx6LSlOicsIGVycm9yKTsKICAgICAgICB9CiAgICAgICAgdGhpcy5jbGllbnROb3RDb25uZWN0ZWREaWFsb2dWaXNpYmxlID0gdHJ1ZTsKICAgICAgfSBmaW5hbGx5IHsKICAgICAgICB0aGlzLmNoZWNraW5nU3RhdHVzID0gZmFsc2U7CiAgICAgICAgdGhpcy5zdGF0dXNDaGVja0NvbnRyb2xsZXIgPSBudWxsOwoKICAgICAgICAvLyDmo4Dmn6XlrozmiJDlkI7vvIzlho3mrKHmoLnmja7lvZPliY3nirbmgIHlvLrliLbmm7TmlrDlvLnnqpfnirbmgIEKICAgICAgICB0aGlzLiRuZXh0VGljaygoKSA9PiB7CiAgICAgICAgICB0aGlzLnVwZGF0ZURpYWxvZ1Zpc2liaWxpdHkoKTsKICAgICAgICB9KTsKICAgICAgfQogICAgfSwKICAgIC8vIOWcqOS4i+mdoueahOaWueazleS4re+8jOWinuWKoOeri+WNs+ajgOafpeeKtuaAgeeahOmAu+i+kQogICAgZG93bmxvYWRDbGllbnQoKSB7CiAgICAgIHRyeSB7CiAgICAgICAgLy8g5L2/55So6Z2Z5oCB55qE5LiL6L296ZO+5o6lCiAgICAgICAgY29uc3QgZG93bmxvYWRVcmwgPSAnL3N0YXRpYy9HYXRla2VlcGVyU2V0dXAuZXhlJzsKICAgICAgICBjb25zb2xlLmxvZygn5bCd6K+V5LiL6L295a6i5oi356uv77yM5LiL6L295Zyw5Z2AOicsIGRvd25sb2FkVXJsKTsKCiAgICAgICAgLy8g5pi+56S65o+Q56S6CiAgICAgICAgdGhpcy4kbWVzc2FnZS5zdWNjZXNzKCflvIDlp4vkuIvovb3lrqLmiLfnq6/vvIzor7fnqI3lgJkuLi4nKTsKCiAgICAgICAgLy8g5L2/55SoYeagh+etvuS4i+i9vQogICAgICAgIGNvbnN0IGxpbmsgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdhJyk7CiAgICAgICAgbGluay5ocmVmID0gZG93bmxvYWRVcmw7CiAgICAgICAgbGluay5zZXRBdHRyaWJ1dGUoJ2Rvd25sb2FkJywgJ0dhdGVrZWVwZXJTZXR1cC5leGUnKTsKICAgICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGxpbmspOwogICAgICAgIGxpbmsuY2xpY2soKTsKICAgICAgICBkb2N1bWVudC5ib2R5LnJlbW92ZUNoaWxkKGxpbmspOwoKICAgICAgICAvLyDkuIvovb3lkI7mmL7npLrmj5DnpLoKICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHsKICAgICAgICAgIHRoaXMuJGNvbmZpcm0oJ+WmguaenOS4i+i9veayoeacieiHquWKqOW8gOWni++8jOivt+iBlOezu+euoeeQhuWRmOiOt+WPluWuouaIt+err+WuieijheWMhScsICfkuIvovb3mj5DnpLonLCB7CiAgICAgICAgICAgIGNvbmZpcm1CdXR0b25UZXh0OiAn56Gu5a6aJywKICAgICAgICAgICAgc2hvd0NhbmNlbEJ1dHRvbjogZmFsc2UsCiAgICAgICAgICAgIHR5cGU6ICdpbmZvJwogICAgICAgICAgfSk7CiAgICAgICAgfSwgMzAwMCk7CiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgICAgY29uc29sZS5lcnJvcign5LiL6L295a6i5oi356uv5Ye66ZSZOicsIGVycm9yKTsKICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKCfkuIvovb3lpLHotKXvvIzor7fogZTns7vnrqHnkIblkZjojrflj5blrqLmiLfnq6/lronoo4XljIUnKTsKICAgICAgfQogICAgfSwKICAgIHN0YXJ0Q2xpZW50KCkgewogICAgICAvLyDlpoLmnpzlrqLmiLfnq6/lt7Lnu4/ov57mjqXvvIzliJnkuI3pnIDopoHlkK/liqgKICAgICAgaWYgKHRoaXMuY2xpZW50Q29ubmVjdGVkKSB7CiAgICAgICAgdGhpcy4kbWVzc2FnZS5pbmZvKCflrqLmiLfnq6/lt7Lov57mjqXvvIzml6DpnIDph43mlrDlkK/liqgnKTsKICAgICAgICByZXR1cm47CiAgICAgIH0KCiAgICAgIC8vIOaYvuekuuato+WcqOWwneivlei/nuaOpeeahOa2iOaBrwogICAgICB0aGlzLiRtZXNzYWdlKHsKICAgICAgICBtZXNzYWdlOiAn5q2j5Zyo5bCd6K+V5ZCv5Yqo5a6i5oi356uvLi4uJywKICAgICAgICB0eXBlOiAnaW5mbycsCiAgICAgICAgZHVyYXRpb246IDMwMDAKICAgICAgfSk7CgogICAgICAvLyDkvb/nlKjms6jlhoznmoTljY/orq7lkK/liqjlrqLmiLfnq68KICAgICAgd2luZG93LmxvY2F0aW9uLmhyZWYgPSAnZm9ydDovL3N0YXJ0JzsKCiAgICAgIC8vIOiuvue9ruS4gOS4quefreaagueahOW7tui/n+WQjuWGjeasoeajgOafpeWuouaIt+err+eKtuaAgQogICAgICBzZXRUaW1lb3V0KCgpID0+IHsKICAgICAgICBjb25zb2xlLmxvZygn5ZCv5Yqo5a6i5oi356uv5ZCO6YeN5paw5qOA5p+l54q25oCBJyk7CiAgICAgICAgdGhpcy5jaGVja0NsaWVudFN0YXR1cygpOwogICAgICB9LCAzMDAwKTsKICAgIH0sCiAgICBjaGVja0NsaWVudEluc3RhbGxlZCgpIHsKICAgICAgdGhpcy5jbGllbnRJbnN0YWxsZWQgPSB0cnVlOwogICAgfSwKICAgIHN0YXJ0U3RhdHVzQ2hlY2soKSB7CiAgICAgIC8vIOWmguaenOacqueZu+W9le+8jOS4jeWQr+WKqOajgOafpQogICAgICBpZiAoIXRoaXMuaXNMb2dnZWRJbikgewogICAgICAgIHJldHVybjsKICAgICAgfQoKICAgICAgLy8g5aaC5p6c5bey57uP5pyJ5a6a5pe25Zmo5Zyo6L+Q6KGM77yM5YWI5riF6Zmk5a6DCiAgICAgIHRoaXMuc3RvcFN0YXR1c0NoZWNrKCk7CgogICAgICAvLyDliJ3lp4vljJbnirbmgIEKICAgICAgdGhpcy5jbGllbnROb3RDb25uZWN0ZWREaWFsb2dWaXNpYmxlID0gZmFsc2U7CgogICAgICAvLyDmm7TpopHnuYHlnLDmo4Dmn6XnirbmgIHvvIjmr48z56eS5LiA5qyh77yJCiAgICAgIHRoaXMuc3RhdHVzQ2hlY2tJbnRlcnZhbCA9IHNldEludGVydmFsKCgpID0+IHsKICAgICAgICB0aGlzLmNoZWNrQ2xpZW50U3RhdHVzKCk7CiAgICAgIH0sIDMwMDApOwoKICAgICAgLy8g56uL5Y2z5omn6KGM5LiA5qyh5qOA5p+lCiAgICAgIHRoaXMuY2hlY2tDbGllbnRTdGF0dXMoKTsKICAgIH0sCiAgICBzdG9wU3RhdHVzQ2hlY2soKSB7CiAgICAgIGlmICh0aGlzLnN0YXR1c0NoZWNrSW50ZXJ2YWwpIHsKICAgICAgICBjbGVhckludGVydmFsKHRoaXMuc3RhdHVzQ2hlY2tJbnRlcnZhbCk7CiAgICAgICAgdGhpcy5zdGF0dXNDaGVja0ludGVydmFsID0gbnVsbDsKICAgICAgfQoKICAgICAgLy8g5Y+W5raI6L+b6KGM5Lit55qE6K+35rGCCiAgICAgIGlmICh0aGlzLnN0YXR1c0NoZWNrQ29udHJvbGxlcikgewogICAgICAgIHRoaXMuc3RhdHVzQ2hlY2tDb250cm9sbGVyLmFib3J0KCk7CiAgICAgICAgdGhpcy5zdGF0dXNDaGVja0NvbnRyb2xsZXIgPSBudWxsOwogICAgICB9CgogICAgICAvLyDph43nva7nirbmgIEKICAgICAgdGhpcy5jbGllbnROb3RDb25uZWN0ZWREaWFsb2dWaXNpYmxlID0gZmFsc2U7CiAgICB9LAogICAgaGFuZGxlQ29tbWFuZChjb21tYW5kKSB7CiAgICAgIHN3aXRjaCAoY29tbWFuZCkgewogICAgICAgIGNhc2UgJ2NoYW5nZVBhc3N3b3JkJzoKICAgICAgICAgIHRoaXMuc2hvd0NoYW5nZVBhc3N3b3JkRGlhbG9nKCk7CiAgICAgICAgICBicmVhazsKICAgICAgICBjYXNlICdsb2dvdXQnOgogICAgICAgICAgdGhpcy5oYW5kbGVMb2dvdXQoKTsKICAgICAgICAgIGJyZWFrOwogICAgICB9CiAgICB9LAogICAgc2hvd0NoYW5nZVBhc3N3b3JkRGlhbG9nKCkgewogICAgICB0aGlzLnBhc3N3b3JkRGlhbG9nVmlzaWJsZSA9IHRydWU7CiAgICAgIHRoaXMucGFzc3dvcmRGb3JtID0gewogICAgICAgIG9sZFBhc3N3b3JkOiAnJywKICAgICAgICBuZXdQYXNzd29yZDogJycsCiAgICAgICAgY29uZmlybVBhc3N3b3JkOiAnJwogICAgICB9OwogICAgfSwKICAgIGFzeW5jIHN1Ym1pdFBhc3N3b3JkQ2hhbmdlKCkgewogICAgICB0cnkgewogICAgICAgIGF3YWl0IHRoaXMuJHJlZnMucGFzc3dvcmRGb3JtLnZhbGlkYXRlKCk7CiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCB0aGlzLmF4aW9zLnBvc3QoJy9hcGkvYXV0aC9jaGFuZ2UtcGFzc3dvcmQnLCB7CiAgICAgICAgICBvbGRfcGFzc3dvcmQ6IHRoaXMucGFzc3dvcmRGb3JtLm9sZFBhc3N3b3JkLAogICAgICAgICAgbmV3X3Bhc3N3b3JkOiB0aGlzLnBhc3N3b3JkRm9ybS5uZXdQYXNzd29yZAogICAgICAgIH0pOwogICAgICAgIGlmIChyZXNwb25zZS5kYXRhLnN1Y2Nlc3MpIHsKICAgICAgICAgIHRoaXMuJG1lc3NhZ2Uuc3VjY2Vzcygn5a+G56CB5L+u5pS55oiQ5YqfJyk7CiAgICAgICAgICB0aGlzLnBhc3N3b3JkRGlhbG9nVmlzaWJsZSA9IGZhbHNlOwogICAgICAgIH0KICAgICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgICAgICBpZiAoZXJyb3IucmVzcG9uc2UpIHsKICAgICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IoZXJyb3IucmVzcG9uc2UuZGF0YS5lcnJvciB8fCAn5a+G56CB5L+u5pS55aSx6LSlJyk7CiAgICAgICAgfSBlbHNlIGlmIChlcnJvci5tZXNzYWdlKSB7CiAgICAgICAgICAvLyDooajljZXpqozor4HplJnor68KICAgICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IoZXJyb3IubWVzc2FnZSk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IoJ+WvhueggeS/ruaUueWksei0pScpOwogICAgICAgIH0KICAgICAgfQogICAgfQogIH0sCiAgd2F0Y2g6IHsKICAgIC8vIOebkeWQrOeZu+W9leeKtuaAgeWPmOWMlgogICAgaXNMb2dnZWRJbihuZXdWYWx1ZSkgewogICAgICBpZiAobmV3VmFsdWUpIHsKICAgICAgICB0aGlzLnN0YXJ0U3RhdHVzQ2hlY2soKTsKICAgICAgICAvLyDliJ3lp4vljJbkuI3mtLvliqjorqHml7blmagKICAgICAgICB0aGlzLnJlc2V0SW5hY3Rpdml0eVRpbWVyKCk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy5zdG9wU3RhdHVzQ2hlY2soKTsKICAgICAgICAvLyDnoa7kv53lvLnnqpflhbPpl60KICAgICAgICB0aGlzLmNsaWVudE5vdENvbm5lY3RlZERpYWxvZ1Zpc2libGUgPSBmYWxzZTsKICAgICAgfQogICAgfSwKICAgIC8vIOa3u+WKoOWvueeKtuaAgeWbvuagh+eahOebkeWQrAogICAgc3RhdHVzSWNvbihuZXdJY29uKSB7CiAgICAgIGNvbnNvbGUubG9nKCfnirbmgIHlm77moIflj5jljJY6JywgbmV3SWNvbik7CiAgICAgIHRoaXMudXBkYXRlRGlhbG9nVmlzaWJpbGl0eSgpOwogICAgfSwKICAgIC8vIOebkeWQrOWuouaIt+err+i/nuaOpeeKtuaAgeWPmOWMlgogICAgY2xpZW50Q29ubmVjdGVkKG5ld1ZhbHVlKSB7CiAgICAgIGNvbnNvbGUubG9nKCflrqLmiLfnq6/ov57mjqXnirbmgIHlj5jljJY6JywgbmV3VmFsdWUpOwogICAgICB0aGlzLnVwZGF0ZURpYWxvZ1Zpc2liaWxpdHkoKTsKICAgIH0KICB9LAogIG1vdW50ZWQoKSB7CiAgICAvLyDliJ3lp4vljJblvLnnqpfnirbmgIEKICAgIHRoaXMuY2xpZW50Tm90Q29ubmVjdGVkRGlhbG9nVmlzaWJsZSA9IGZhbHNlOwoKICAgIC8vIOWPquWcqOeZu+W9leeKtuaAgeS4i+WQr+WKqOajgOafpQogICAgaWYgKHRoaXMuaXNMb2dnZWRJbikgewogICAgICB0aGlzLnN0YXJ0U3RhdHVzQ2hlY2soKTsKICAgICAgLy8g5Yid5aeL5YyW5LiN5rS75Yqo6K6h5pe25ZmoCiAgICAgIHRoaXMucmVzZXRJbmFjdGl2aXR5VGltZXIoKTsKCiAgICAgIC8vIOWQr+WKqOWQjuS4u+WKqOajgOafpeS4gOasoeeKtuaAgeW5tuabtOaWsOW8ueeqlwogICAgICB0aGlzLiRuZXh0VGljaygoKSA9PiB7CiAgICAgICAgdGhpcy51cGRhdGVEaWFsb2dWaXNpYmlsaXR5KCk7CiAgICAgIH0pOwogICAgfQoKICAgIC8vIOWIm+W7uuWumuaXtuWZqO+8jOavj+enkuajgOafpeS4gOasoeW8ueeql+eKtuaAgQogICAgdGhpcy5kaWFsb2dVcGRhdGVUaW1lciA9IHNldEludGVydmFsKCgpID0+IHsKICAgICAgaWYgKHRoaXMuaXNMb2dnZWRJbikgewogICAgICAgIHRoaXMudXBkYXRlRGlhbG9nVmlzaWJpbGl0eSgpOwogICAgICB9CiAgICB9LCAxMDAwKTsKICB9LAogIGJlZm9yZURlc3Ryb3koKSB7CiAgICB0aGlzLnN0b3BTdGF0dXNDaGVjaygpOwogICAgLy8g56Gu5L+d57uE5Lu26ZSA5q+B5pe25YWz6Zet5by556qXCiAgICB0aGlzLmNsaWVudE5vdENvbm5lY3RlZERpYWxvZ1Zpc2libGUgPSBmYWxzZTsKCiAgICAvLyDmuIXpmaTlrprml7blmagKICAgIGlmICh0aGlzLmRpYWxvZ1VwZGF0ZVRpbWVyKSB7CiAgICAgIGNsZWFySW50ZXJ2YWwodGhpcy5kaWFsb2dVcGRhdGVUaW1lcik7CiAgICAgIHRoaXMuZGlhbG9nVXBkYXRlVGltZXIgPSBudWxsOwogICAgfQogIH0KfTs="},{"version":3,"names":["axios","name","data","validateConfirmPassword","rule","value","callback","passwordForm","newPassword","Error","clientConnected","clientStatus","checkingStatus","showClientDialog","passwordDialogVisible","clientNotConnectedDialogVisible","clientConfig","protocol","port","fileName","oldPassword","confirmPassword","passwordRules","required","message","trigger","min","validator","statusCheckController","lastCheckTime","consecutiveFailures","dialogUpdateTimer","computed","statusIcon","server_connected","statusText","isLoggedIn","$store","state","user","isAdmin","is_admin","currentUser","username","methods","updateDialogVisibility","console","log","resetInactivityTimer","dispatch","checkAndResetTimer","now","Date","checkClientStatus","handleLogout","post","localStorage","removeItem","commit","stopStatusCheck","$router","push","$message","success","error","errorMessage","response","abort","AbortController","timeout","setTimeout","fetch","method","headers","signal","clearTimeout","ok","json","wasConnected","status","$notify","title","type","duration","position","$nextTick","downloadClient","downloadUrl","link","document","createElement","href","setAttribute","body","appendChild","click","removeChild","$confirm","confirmButtonText","showCancelButton","startClient","info","window","location","checkClientInstalled","clientInstalled","startStatusCheck","statusCheckInterval","setInterval","clearInterval","handleCommand","command","showChangePasswordDialog","submitPasswordChange","$refs","validate","old_password","new_password","watch","newValue","newIcon","mounted","beforeDestroy"],"sources":["src/components/Layout.vue"],"sourcesContent":["<template>\n  <div class=\"layout\" @mousemove=\"resetInactivityTimer\" @click=\"checkAndResetTimer\" @keydown=\"resetInactivityTimer\">\n    <el-container>\n      <el-header height=\"50px\">\n        <div class=\"header-content\">\n          <div class=\"client-status\">\n            <el-tooltip :content=\"statusText\" placement=\"bottom\">\n              <i :class=\"['client-icon', statusIcon]\"></i>\n            </el-tooltip>\n          </div>\n          <span class=\"header-title\">堡垒机管理系统</span>\n          \n          <!-- 用户信息下拉菜单 -->\n          <div class=\"user-dropdown\">\n            <el-dropdown trigger=\"click\" @command=\"handleCommand\">\n              <div class=\"user-info\">\n                <i class=\"el-icon-user-solid\"></i>\n                <span>{{ currentUser.username }}</span>\n                <i class=\"el-icon-caret-bottom\"></i>\n              </div>\n              <el-dropdown-menu slot=\"dropdown\">\n                <el-dropdown-item command=\"changePassword\">\n                  <i class=\"el-icon-key\"></i>\n                  <span>修改密码</span>\n                </el-dropdown-item>\n                <el-dropdown-item divided command=\"logout\">\n                  <i class=\"el-icon-switch-button\"></i>\n                  <span>退出登录</span>\n                </el-dropdown-item>\n              </el-dropdown-menu>\n            </el-dropdown>\n          </div>\n        </div>\n      </el-header>\n      \n      <el-container>\n        <el-aside width=\"180px\">\n          <el-menu\n            :default-active=\"$route.path\"\n            class=\"el-menu-vertical\"\n            router>\n            <el-menu-item index=\"/dashboard\" v-if=\"isAdmin\">\n              <i class=\"el-icon-data-analysis\"></i>\n              <span>仪表盘</span>\n            </el-menu-item>\n            <el-menu-item index=\"/\">\n              <i class=\"el-icon-monitor\"></i>\n              <span>服务器管理</span>\n            </el-menu-item>\n            \n            <el-submenu index=\"2\">\n              <template slot=\"title\">\n                <i class=\"el-icon-setting\"></i>\n                <span>系统设置</span>\n              </template>\n              <el-menu-item index=\"/users\">\n                <i class=\"el-icon-user\"></i>\n                <span>用户管理</span>\n              </el-menu-item>\n              <el-menu-item index=\"/system/categories\" v-if=\"isAdmin\">\n                <i class=\"el-icon-collection-tag\"></i>\n                <span>分类管理</span>\n              </el-menu-item>\n              <el-menu-item index=\"/system/credentials\" v-if=\"isAdmin\">\n                <i class=\"el-icon-key\"></i>\n                <span>凭据管理</span>\n              </el-menu-item>\n              <el-menu-item index=\"/system/audit-logs\" v-if=\"isAdmin\">\n                <i class=\"el-icon-document\"></i>\n                <span>审计日志</span>\n              </el-menu-item>\n            </el-submenu>\n          </el-menu>\n        </el-aside>\n        \n        <el-main class=\"main-content\">\n          <router-view></router-view>\n        </el-main>\n      </el-container>\n    </el-container>\n\n    <!-- 修改密码对话框 -->\n    <el-dialog\n      title=\"修改密码\"\n      :visible.sync=\"passwordDialogVisible\"\n      width=\"400px\"\n      :close-on-click-modal=\"false\">\n      <el-form\n        :model=\"passwordForm\"\n        :rules=\"passwordRules\"\n        ref=\"passwordForm\"\n        label-width=\"100px\">\n        <el-form-item label=\"原密码\" prop=\"oldPassword\">\n          <el-input\n            v-model=\"passwordForm.oldPassword\"\n            type=\"password\"\n            show-password\n            placeholder=\"请输入原密码\">\n          </el-input>\n        </el-form-item>\n        <el-form-item label=\"新密码\" prop=\"newPassword\">\n          <el-input\n            v-model=\"passwordForm.newPassword\"\n            type=\"password\"\n            show-password\n            placeholder=\"请输入新密码\">\n          </el-input>\n        </el-form-item>\n        <el-form-item label=\"确认新密码\" prop=\"confirmPassword\">\n          <el-input\n            v-model=\"passwordForm.confirmPassword\"\n            type=\"password\"\n            show-password\n            placeholder=\"请再次输入新密码\">\n          </el-input>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"passwordDialogVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"submitPasswordChange\">确 定</el-button>\n      </div>\n    </el-dialog>\n\n    <!-- 添加客户端未连接弹窗 -->\n    <el-dialog\n      title=\"客户端连接提示\"\n      :visible.sync=\"clientNotConnectedDialogVisible\"\n      width=\"360px\"\n      :close-on-click-modal=\"false\"\n      :show-close=\"false\"\n      custom-class=\"client-not-connected-dialog\">\n      <div class=\"client-dialog-content\">\n        <div class=\"client-dialog-icon\">\n          <i class=\"el-icon-warning-outline\"></i>\n        </div>\n        <div class=\"client-dialog-message\">\n          <p>检测到客户端未连接</p>\n          <ul>\n            <li>请确保已安装堡垒机客户端</li>\n            <li>如未安装，请点击下载并安装</li>\n            <li>如已安装，请点击启动客户端</li>\n          </ul>\n        </div>\n      </div>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"downloadClient\" size=\"small\">下载客户端</el-button>\n        <el-button type=\"primary\" @click=\"startClient\" size=\"small\">启动客户端</el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'Layout',\n  data() {\n    // 密码确认验证函数\n    const validateConfirmPassword = (rule, value, callback) => {\n      if (value !== this.passwordForm.newPassword) {\n        callback(new Error('两次输入的密码不一致'));\n      } else {\n        callback();\n      }\n    };\n\n    return {\n      clientConnected: false,\n      clientStatus: null,\n      checkingStatus: false,\n      showClientDialog: false,\n      passwordDialogVisible: false,\n      clientNotConnectedDialogVisible: false,\n      clientConfig: {\n        // 客户端协议，用于启动客户端应用\n        protocol: 'fort://',\n        // 客户端端口，用于检测客户端状态\n        port: 45654,\n        // 客户端下载文件名\n        fileName: 'GatekeeperSetup.exe'\n      },\n      passwordForm: {\n        oldPassword: '',\n        newPassword: '',\n        confirmPassword: ''\n      },\n      passwordRules: {\n        oldPassword: [\n          { required: true, message: '请输入原密码', trigger: 'blur' }\n        ],\n        newPassword: [\n          { required: true, message: '请输入新密码', trigger: 'blur' },\n          { min: 6, message: '密码长度不能小于6个字符', trigger: 'blur' }\n        ],\n        confirmPassword: [\n          { required: true, message: '请再次输入新密码', trigger: 'blur' },\n          { validator: validateConfirmPassword, trigger: 'blur' }\n        ]\n      },\n      statusCheckController: null,\n      lastCheckTime: 0, // 添加上次检查时间记录\n      consecutiveFailures: 0, // 添加连续失败次数记录\n      dialogUpdateTimer: null // 弹窗状态更新定时器\n    }\n  },\n  computed: {\n    statusIcon() {\n      if (this.checkingStatus) return 'el-icon-loading';\n      if (!this.clientStatus) return 'el-icon-error';\n      return this.clientStatus.server_connected ? 'el-icon-success' : 'el-icon-warning';\n    },\n    statusText() {\n      if (this.checkingStatus) return '正在检查客户端状态...';\n      if (!this.clientStatus) return '客户端未连接';\n      if (!this.clientStatus.server_connected) return '堡垒机连接断开';\n      return '客户端已连接';\n    },\n    isLoggedIn() {\n      return this.$store.state.user !== null;\n    },\n    isAdmin() {\n      return this.$store.state.user && this.$store.state.user.is_admin;\n    },\n    currentUser() {\n      return this.$store.state.user || { username: '' };\n    }\n  },\n  methods: {\n    // 添加更新弹窗显示状态的方法\n    updateDialogVisibility() {\n      console.log('更新弹窗状态，当前客户端状态:', this.statusIcon, '已连接:', this.clientConnected);\n      \n      // 如果状态图标是成功，强制关闭弹窗\n      if (this.statusIcon === 'el-icon-success') {\n        this.clientNotConnectedDialogVisible = false;\n        console.log('客户端已连接，关闭弹窗');\n      }\n      \n      // 如果客户端已连接，强制关闭弹窗\n      if (this.clientConnected) {\n        this.clientNotConnectedDialogVisible = false;\n        console.log('客户端已连接，关闭弹窗');\n      }\n    },\n    \n    // 重置不活动计时器\n    resetInactivityTimer() {\n      // 使用Vuex action重置计时器\n      this.$store.dispatch('resetInactivityTimer');\n    },\n    \n    // 检查客户端状态并重置计时器\n    checkAndResetTimer() {\n      this.resetInactivityTimer();\n      \n      // 如果最后一次检查是在3秒前，且当前未在检查中，则立即检查\n      const now = Date.now();\n      if (now - this.lastCheckTime > 3000 && !this.checkingStatus) {\n        this.checkClientStatus();\n      }\n    },\n    async handleLogout() {\n      try {\n        // 调用注销接口\n        await axios.post('/api/auth/logout');\n        // 清除本地存储的 token 和用户信息\n        localStorage.removeItem('token');\n        this.$store.commit('clearUserInfo');\n        // 停止状态检查\n        this.stopStatusCheck();\n        // 重置状态\n        this.clientConnected = false;\n        this.clientStatus = null;\n        this.checkingStatus = false;\n        this.showClientDialog = false;\n        this.clientNotConnectedDialogVisible = false;\n        // 跳转到登录页面\n        this.$router.push('/login');\n        this.$message.success('注销成功');\n      } catch (error) {\n        console.error('注销失败:', error);\n        const errorMessage = error.response && error.response.data && error.response.data.error || error.message;\n        this.$message.error('注销失败: ' + errorMessage);\n      }\n    },\n    async checkClientStatus() {\n      // 如果未登录，不执行检查\n      if (!this.isLoggedIn) {\n        return;\n      }\n      \n      // 检查是否处于冷却期（1秒内）且当前未在检查中\n      const now = Date.now();\n      if (now - this.lastCheckTime < 1000 && !this.checkingStatus) {\n        console.log('客户端状态检查过于频繁，忽略本次检查');\n        return;\n      }\n      \n      // 更新最后检查时间\n      this.lastCheckTime = now;\n      \n      try {\n        // 设置正在检查状态\n        this.checkingStatus = true;\n\n        // 取消之前的请求（如果有）\n        if (this.statusCheckController) {\n          this.statusCheckController.abort();\n        }\n        \n        // 创建新的 AbortController\n        this.statusCheckController = new AbortController();\n        const timeout = setTimeout(() => this.statusCheckController.abort(), 1500);\n        \n        // 直接从本地客户端获取状态\n        const response = await fetch('http://127.0.0.1:45654/status', {\n          method: 'GET',\n          headers: {\n            'Accept': 'application/json'\n          },\n          signal: this.statusCheckController.signal\n        });\n        \n        clearTimeout(timeout);\n        \n        if (response.ok) {\n          const data = await response.json();\n          this.clientStatus = data;\n          const wasConnected = this.clientConnected;\n          this.clientConnected = data.status === 'running' && data.server_connected;\n          \n          // 保存客户端信息到store\n          this.$store.commit('SET_CLIENT_INFO', data);\n          \n          // 根据连接状态直接控制弹窗\n          this.clientNotConnectedDialogVisible = !this.clientConnected;\n          \n          // 如果连接成功，重置连续失败次数\n          if (this.clientConnected) {\n            this.consecutiveFailures = 0;\n            \n            // 强制根据客户端状态更新弹窗\n            this.updateDialogVisibility();\n            \n            // 如果之前未连接，现在连接成功，显示连接成功提示\n            if (!wasConnected) {\n              this.$notify({\n                title: '客户端已连接',\n                message: '堡垒机客户端连接成功',\n                type: 'success',\n                duration: 3000,\n                position: 'top-right'\n              });\n            }\n          } else {\n            // 即使请求成功，但如果客户端未真正连接，也计为失败\n            this.consecutiveFailures++;\n          }\n          \n          console.log('客户端状态:', data);\n        } else {\n          this.clientStatus = null;\n          this.clientConnected = false;\n          this.$store.commit('SET_CLIENT_INFO', null);\n          this.consecutiveFailures++;\n          this.clientNotConnectedDialogVisible = true;\n        }\n      } catch (error) {\n        this.clientStatus = null;\n        this.clientConnected = false;\n        this.$store.commit('SET_CLIENT_INFO', null);\n        \n        if (error.name === 'AbortError') {\n          this.consecutiveFailures += 0.5;\n          console.log('检查客户端状态超时');\n        } else {\n          this.consecutiveFailures++;\n          console.error('检查客户端状态失败:', error);\n        }\n        \n        this.clientNotConnectedDialogVisible = true;\n      } finally {\n        this.checkingStatus = false;\n        this.statusCheckController = null;\n        \n        // 检查完成后，再次根据当前状态强制更新弹窗状态\n        this.$nextTick(() => {\n          this.updateDialogVisibility();\n        });\n      }\n    },\n    \n    // 在下面的方法中，增加立即检查状态的逻辑\n    downloadClient() {\n      try {\n        // 使用静态的下载链接\n        const downloadUrl = '/static/GatekeeperSetup.exe';\n        console.log('尝试下载客户端，下载地址:', downloadUrl);\n        \n        // 显示提示\n        this.$message.success('开始下载客户端，请稍候...');\n        \n        // 使用a标签下载\n        const link = document.createElement('a');\n        link.href = downloadUrl;\n        link.setAttribute('download', 'GatekeeperSetup.exe');\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n        \n        // 下载后显示提示\n        setTimeout(() => {\n          this.$confirm('如果下载没有自动开始，请联系管理员获取客户端安装包', '下载提示', {\n            confirmButtonText: '确定',\n            showCancelButton: false,\n            type: 'info'\n          });\n        }, 3000);\n      } catch (error) {\n        console.error('下载客户端出错:', error);\n        this.$message.error('下载失败，请联系管理员获取客户端安装包');\n      }\n    },\n    \n    startClient() {\n      // 如果客户端已经连接，则不需要启动\n      if (this.clientConnected) {\n        this.$message.info('客户端已连接，无需重新启动');\n        return;\n      }\n      \n      // 显示正在尝试连接的消息\n      this.$message({\n        message: '正在尝试启动客户端...',\n        type: 'info',\n        duration: 3000\n      });\n      \n      // 使用注册的协议启动客户端\n      window.location.href = 'fort://start';\n      \n      // 设置一个短暂的延迟后再次检查客户端状态\n      setTimeout(() => {\n        console.log('启动客户端后重新检查状态');\n        this.checkClientStatus();\n      }, 3000);\n    },\n    \n    checkClientInstalled() {\n      this.clientInstalled = true;\n    },\n    \n    startStatusCheck() {\n      // 如果未登录，不启动检查\n      if (!this.isLoggedIn) {\n        return;\n      }\n      \n      // 如果已经有定时器在运行，先清除它\n      this.stopStatusCheck();\n\n      // 初始化状态\n      this.clientNotConnectedDialogVisible = false;\n      \n      // 更频繁地检查状态（每3秒一次）\n      this.statusCheckInterval = setInterval(() => {\n        this.checkClientStatus();\n      }, 3000);\n      \n      // 立即执行一次检查\n      this.checkClientStatus();\n    },\n    stopStatusCheck() {\n      if (this.statusCheckInterval) {\n        clearInterval(this.statusCheckInterval);\n        this.statusCheckInterval = null;\n      }\n      \n      // 取消进行中的请求\n      if (this.statusCheckController) {\n        this.statusCheckController.abort();\n        this.statusCheckController = null;\n      }\n\n      // 重置状态\n      this.clientNotConnectedDialogVisible = false;\n    },\n    handleCommand(command) {\n      switch (command) {\n        case 'changePassword':\n          this.showChangePasswordDialog();\n          break;\n        case 'logout':\n          this.handleLogout();\n          break;\n      }\n    },\n    showChangePasswordDialog() {\n      this.passwordDialogVisible = true;\n      this.passwordForm = {\n        oldPassword: '',\n        newPassword: '',\n        confirmPassword: ''\n      };\n    },\n    async submitPasswordChange() {\n      try {\n        await this.$refs.passwordForm.validate();\n        \n        const response = await this.axios.post('/api/auth/change-password', {\n          old_password: this.passwordForm.oldPassword,\n          new_password: this.passwordForm.newPassword\n        });\n\n        if (response.data.success) {\n          this.$message.success('密码修改成功');\n          this.passwordDialogVisible = false;\n        }\n      } catch (error) {\n        if (error.response) {\n          this.$message.error(error.response.data.error || '密码修改失败');\n        } else if (error.message) {\n          // 表单验证错误\n          this.$message.error(error.message);\n        } else {\n          this.$message.error('密码修改失败');\n        }\n      }\n    }\n  },\n  watch: {\n    // 监听登录状态变化\n    isLoggedIn(newValue) {\n      if (newValue) {\n        this.startStatusCheck();\n        // 初始化不活动计时器\n        this.resetInactivityTimer();\n      } else {\n        this.stopStatusCheck();\n        // 确保弹窗关闭\n        this.clientNotConnectedDialogVisible = false;\n      }\n    },\n    // 添加对状态图标的监听\n    statusIcon(newIcon) {\n      console.log('状态图标变化:', newIcon);\n      this.updateDialogVisibility();\n    },\n    // 监听客户端连接状态变化\n    clientConnected(newValue) {\n      console.log('客户端连接状态变化:', newValue);\n      this.updateDialogVisibility();\n    }\n  },\n  mounted() {\n    // 初始化弹窗状态\n    this.clientNotConnectedDialogVisible = false;\n    \n    // 只在登录状态下启动检查\n    if (this.isLoggedIn) {\n      this.startStatusCheck();\n      // 初始化不活动计时器\n      this.resetInactivityTimer();\n      \n      // 启动后主动检查一次状态并更新弹窗\n      this.$nextTick(() => {\n        this.updateDialogVisibility();\n      });\n    }\n    \n    // 创建定时器，每秒检查一次弹窗状态\n    this.dialogUpdateTimer = setInterval(() => {\n      if (this.isLoggedIn) {\n        this.updateDialogVisibility();\n      }\n    }, 1000);\n  },\n  beforeDestroy() {\n    this.stopStatusCheck();\n    // 确保组件销毁时关闭弹窗\n    this.clientNotConnectedDialogVisible = false;\n    \n    // 清除定时器\n    if (this.dialogUpdateTimer) {\n      clearInterval(this.dialogUpdateTimer);\n      this.dialogUpdateTimer = null;\n    }\n  }\n}\n</script>\n\n<style scoped>\n.layout {\n  height: 100vh;\n  background-color: #f0f2f5;\n}\n\n.el-aside {\n  background: linear-gradient(180deg, #F8FAFF 0%, #F0F5FF 100%);\n  height: 100vh;\n  box-shadow: 1px 0 8px rgba(0,0,0,0.05);\n  display: flex;\n  flex-direction: column;\n  width: 180px !important;\n}\n\n.el-menu {\n  border-right: none;\n  background: transparent;\n  padding-top: 12px;\n  flex: 1;\n  width: 180px;\n}\n\n.el-menu-item {\n  height: 48px;\n  line-height: 48px;\n  color: #5B6B8B !important;\n  margin: 4px 12px;\n  padding: 0 16px !important;\n  border-radius: 8px;\n  font-size: 14px;\n  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n}\n\n.el-menu-item:hover {\n  color: #4B7BE5 !important;\n  background-color: rgba(75, 123, 229, 0.08) !important;\n  transform: translateX(4px);\n}\n\n.el-menu-item.is-active {\n  color: #4B7BE5 !important;\n  background-color: rgba(75, 123, 229, 0.12) !important;\n  font-weight: 500;\n}\n\n.el-submenu /deep/ .el-submenu__title {\n  height: 48px;\n  line-height: 48px;\n  color: #5B6B8B !important;\n  margin: 4px 12px;\n  padding: 0 16px !important;\n  border-radius: 8px;\n  font-size: 14px;\n  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n}\n\n.el-submenu /deep/ .el-submenu__title:hover {\n  color: #4B7BE5 !important;\n  background-color: rgba(75, 123, 229, 0.08) !important;\n  transform: translateX(4px);\n}\n\n.el-submenu.is-active /deep/ .el-submenu__title {\n  color: #4B7BE5 !important;\n}\n\n.el-submenu /deep/ .el-menu {\n  background-color: transparent !important;\n  padding-left: 8px;\n  margin: 0 8px;\n  border-radius: 8px;\n}\n\n.el-menu-item i, .el-submenu /deep/ .el-submenu__title i {\n  margin-right: 12px;\n  width: 18px;\n  font-size: 18px;\n  color: inherit;\n  transition: all 0.3s ease;\n}\n\n.header-content {\n  display: flex;\n  align-items: center;\n  height: 100%;\n  padding: 0 24px;\n  background: linear-gradient(90deg, #5B8FF9 0%, #4B7BE5 100%);\n  position: relative;\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n}\n\n.header-title {\n  color: #fff;\n  font-size: 18px;\n  font-weight: 500;\n  letter-spacing: 0.5px;\n  opacity: 0.95;\n  margin-left: 20px;\n}\n\n.user-dropdown {\n  margin-left: auto;\n}\n\n.user-info {\n  display: flex;\n  align-items: center;\n  padding: 6px 16px;\n  cursor: pointer;\n  background: rgba(255, 255, 255, 0.1);\n  border-radius: 20px;\n  transition: all 0.3s ease;\n}\n\n.user-info:hover {\n  background: rgba(255, 255, 255, 0.2);\n}\n\n.user-info i {\n  color: #fff;\n  font-size: 16px;\n}\n\n.user-info {\n  display: flex;\n  align-items: center;\n  padding: 6px 14px; /* 调整 */\n  cursor: pointer;\n  background: rgba(255, 255, 255, 0.1);\n  border-radius: 20px;\n  transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1); /* 调整 */\n  gap: 6px; /* 新增 */\n}\n\n.el-dropdown-menu {\n  min-width: 140px; /* 新增 */\n  border-radius: 6px; /* 调整 */\n  margin-top: 4px; /* 减少间距 */\n}\n\n.el-dropdown-menu__item {\n  align-items: center; /* 新增 */\n  padding: 8px 16px; /* 调整 */\n  font-size: 13px; /* 可选：调小字号 */\n}\n\n.el-dropdown-menu__item i {\n  margin-right: 8px; /* 调整 */\n  width: 18px; /* 新增 */\n  font-size: 16px; /* 调整 */\n}\n\n.el-dropdown-menu__item.is-divided {\n  border-top: 1px solid #ebeef5;\n  margin: 4px 0;\n  padding-top: 8px; /* 调整 */\n}\n\n.el-header {\n  padding: 0;\n  height: 60px !important;\n  box-shadow: 0 1px 4px rgba(0,21,41,0.08);\n  z-index: 10;\n  position: relative;\n}\n\n.el-main {\n  padding: 20px;\n  background-color: #F8FAFF;\n}\n\n.client-status {\n  display: flex;\n  align-items: center;\n  margin-right: 24px;\n  padding: 6px 12px;\n  background: rgba(255,255,255,0.1);\n  border-radius: 20px;\n  backdrop-filter: blur(5px);\n  transition: all 0.3s ease;\n}\n\n.client-status:hover {\n  background: rgba(255,255,255,0.15);\n}\n\n.client-icon {\n  font-size: 16px;\n  color: rgba(255,255,255,0.85);\n  transition: all 0.3s ease;\n}\n\n.client-icon.el-icon-success {\n  color: #67C23A;\n  text-shadow: 0 0 8px rgba(103, 194, 58, 0.3);\n}\n\n.client-icon.el-icon-error {\n  color: #F56C6C;\n  text-shadow: 0 0 8px rgba(245, 108, 108, 0.3);\n}\n\n.client-icon.el-icon-loading {\n  color: #409EFF;\n  text-shadow: 0 0 8px rgba(64, 158, 255, 0.3);\n}\n\n/* 客户端对话框样式 */\n.client-dialog-content {\n  display: flex;\n  padding: 10px;\n}\n\n.client-dialog-icon {\n  margin-right: 15px;\n  display: flex;\n  align-items: flex-start;\n  padding-top: 5px;\n}\n\n.client-dialog-icon i {\n  font-size: 24px;\n  color: #E6A23C;\n  animation: pulse 2s infinite;\n}\n\n.client-dialog-message {\n  flex: 1;\n}\n\n.client-dialog-message p {\n  margin-top: 0;\n  margin-bottom: 10px;\n  font-weight: 500;\n  color: #303133;\n}\n\n.client-dialog-message ul {\n  margin: 0;\n  padding-left: 20px;\n  color: #606266;\n}\n\n.client-dialog-message ul li {\n  margin-bottom: 8px;\n  list-style-type: none;\n}\n\n@keyframes pulse {\n  0% {\n    opacity: 1;\n  }\n  50% {\n    opacity: 0.6;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n\n/* 增加对话框中按钮的间距 */\n.dialog-footer .el-button {\n  margin-left: 10px;\n}\n\n/* 添加客户端未连接弹窗的样式 */\n.client-not-connected-dialog {\n  border-radius: 8px;\n}\n\n.client-not-connected-dialog /deep/ .el-dialog__header {\n  padding: 12px 20px 8px;\n  background-color: #f9f9f9;\n  border-bottom: 1px solid #eee;\n  border-radius: 8px 8px 0 0;\n}\n\n.client-not-connected-dialog /deep/ .el-dialog__title {\n  font-size: 16px;\n  font-weight: 500;\n  color: #333;\n}\n\n.client-not-connected-dialog /deep/ .el-dialog__body {\n  padding: 12px 20px;\n}\n\n.client-not-connected-dialog /deep/ .el-dialog__footer {\n  padding: 8px 20px 12px;\n  border-top: 1px solid #f0f0f0;\n}\n\n.client-not-connected-dialog .client-dialog-content {\n  display: flex;\n  padding: 0;\n}\n\n.client-not-connected-dialog .client-dialog-icon {\n  margin-right: 12px;\n  display: flex;\n  align-items: flex-start;\n  padding-top: 2px;\n}\n\n.client-not-connected-dialog .client-dialog-icon i {\n  font-size: 20px;\n  color: #E6A23C;\n}\n\n.client-not-connected-dialog .client-dialog-message {\n  flex: 1;\n}\n\n.client-not-connected-dialog .client-dialog-message p {\n  margin: 0 0 6px;\n  font-size: 14px;\n  font-weight: 500;\n  color: #303133;\n}\n\n.client-not-connected-dialog .client-dialog-message ul {\n  margin: 0;\n  padding-left: 16px;\n  color: #606266;\n  list-style-type: disc;\n}\n\n.client-not-connected-dialog .client-dialog-message li {\n  margin-bottom: 4px;\n  line-height: 1.4;\n  font-size: 13px;\n  padding-left: 2px;\n}\n\n.client-not-connected-dialog .dialog-footer {\n  margin-top: 0;\n  text-align: right;\n}\n\n.client-not-connected-dialog .dialog-footer .el-button {\n  padding: 7px 15px;\n}\n\n.client-not-connected-dialog .dialog-footer .el-button + .el-button {\n  margin-left: 8px;\n}\n\n.main-content {\n  height: calc(100vh - 50px);\n  overflow-y: auto;\n  padding: 20px;\n}\n</style>"],"mappings":"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","ignoreList":[]}]}