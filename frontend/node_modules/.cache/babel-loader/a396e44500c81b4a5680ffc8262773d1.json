{"remainingRequest":"E:\\gatekeeper\\frontend\\node_modules\\babel-loader\\lib\\index.js!E:\\gatekeeper\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!E:\\gatekeeper\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\gatekeeper\\frontend\\src\\components\\Layout.vue?vue&type=script&lang=js","dependencies":[{"path":"E:\\gatekeeper\\frontend\\src\\components\\Layout.vue","mtime":1745292702895},{"path":"E:\\gatekeeper\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1740710845061},{"path":"E:\\gatekeeper\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1740710847398},{"path":"E:\\gatekeeper\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1740710845061},{"path":"E:\\gatekeeper\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1740710848685}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["axios","name","data","validateConfirmPassword","rule","value","callback","passwordForm","newPassword","Error","clientConnected","clientStatus","checkingStatus","showClientDialog","passwordDialogVisible","clientConfig","protocol","port","fileName","oldPassword","confirmPassword","passwordRules","required","message","trigger","min","validator","statusCheckController","lastCheckTime","consecutiveFailures","computed","statusIcon","server_connected","statusText","isLoggedIn","$store","state","user","isAdmin","is_admin","currentUser","username","methods","resetInactivityTimer","dispatch","checkAndResetTimer","now","Date","checkClientStatus","handleLogout","post","localStorage","removeItem","commit","stopStatusCheck","$router","push","$message","success","error","console","errorMessage","response","log","wasConnected","abort","AbortController","timeout","setTimeout","fetch","method","headers","signal","clearTimeout","ok","json","status","$notify","title","type","duration","position","downloadClient","downloadUrl","link","document","createElement","href","setAttribute","body","appendChild","click","removeChild","iframe","style","display","src","$confirm","confirmButtonText","cancelButtonText","then","axiosDownload","catch","clientInstalled","setItem","url","responseType","blob","Blob","URL","createObjectURL","download","revokeObjectURL","startClient","info","window","location","checkClientInstalled","startStatusCheck","statusCheckInterval","setInterval","clearInterval","handleCommand","command","showChangePasswordDialog","submitPasswordChange","$refs","validate","old_password","new_password","watch","newValue","mounted","beforeDestroy"],"sources":["src/components/Layout.vue"],"sourcesContent":["<template>\n  <div class=\"layout\" @mousemove=\"resetInactivityTimer\" @click=\"checkAndResetTimer\" @keydown=\"resetInactivityTimer\">\n    <el-container>\n      <el-header height=\"50px\">\n        <div class=\"header-content\">\n          <div class=\"client-status\">\n            <el-tooltip :content=\"statusText\" placement=\"bottom\">\n              <i :class=\"['client-icon', statusIcon]\"></i>\n            </el-tooltip>\n          </div>\n          <span class=\"header-title\">堡垒机管理系统</span>\n          \n          <!-- 用户信息下拉菜单 -->\n          <div class=\"user-dropdown\">\n            <el-dropdown trigger=\"click\" @command=\"handleCommand\">\n              <div class=\"user-info\">\n                <i class=\"el-icon-user-solid\"></i>\n                <span>{{ currentUser.username }}</span>\n                <i class=\"el-icon-caret-bottom\"></i>\n              </div>\n              <el-dropdown-menu slot=\"dropdown\">\n                <el-dropdown-item command=\"changePassword\">\n                  <i class=\"el-icon-key\"></i>\n                  <span>修改密码</span>\n                </el-dropdown-item>\n                <el-dropdown-item divided command=\"logout\">\n                  <i class=\"el-icon-switch-button\"></i>\n                  <span>退出登录</span>\n                </el-dropdown-item>\n              </el-dropdown-menu>\n            </el-dropdown>\n          </div>\n        </div>\n      </el-header>\n      \n      <el-container>\n        <el-aside width=\"180px\">\n          <el-menu\n            :default-active=\"$route.path\"\n            class=\"el-menu-vertical\"\n            router>\n            <el-menu-item index=\"/\">\n              <i class=\"el-icon-monitor\"></i>\n              <span>服务器管理</span>\n            </el-menu-item>\n            \n            <el-submenu index=\"2\">\n              <template slot=\"title\">\n                <i class=\"el-icon-setting\"></i>\n                <span>系统设置</span>\n              </template>\n              <el-menu-item index=\"/users\">\n                <i class=\"el-icon-user\"></i>\n                <span>用户管理</span>\n              </el-menu-item>\n              <el-menu-item index=\"/system/categories\" v-if=\"isAdmin\">\n                <i class=\"el-icon-collection-tag\"></i>\n                <span>分类管理</span>\n              </el-menu-item>\n            </el-submenu>\n          </el-menu>\n        </el-aside>\n        \n        <el-main>\n          <router-view></router-view>\n        </el-main>\n      </el-container>\n    </el-container>\n\n    <!-- 修改密码对话框 -->\n    <el-dialog\n      title=\"修改密码\"\n      :visible.sync=\"passwordDialogVisible\"\n      width=\"400px\"\n      :close-on-click-modal=\"false\">\n      <el-form\n        :model=\"passwordForm\"\n        :rules=\"passwordRules\"\n        ref=\"passwordForm\"\n        label-width=\"100px\">\n        <el-form-item label=\"原密码\" prop=\"oldPassword\">\n          <el-input\n            v-model=\"passwordForm.oldPassword\"\n            type=\"password\"\n            show-password\n            placeholder=\"请输入原密码\">\n          </el-input>\n        </el-form-item>\n        <el-form-item label=\"新密码\" prop=\"newPassword\">\n          <el-input\n            v-model=\"passwordForm.newPassword\"\n            type=\"password\"\n            show-password\n            placeholder=\"请输入新密码\">\n          </el-input>\n        </el-form-item>\n        <el-form-item label=\"确认新密码\" prop=\"confirmPassword\">\n          <el-input\n            v-model=\"passwordForm.confirmPassword\"\n            type=\"password\"\n            show-password\n            placeholder=\"请再次输入新密码\">\n          </el-input>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"passwordDialogVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"submitPasswordChange\">确 定</el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'Layout',\n  data() {\n    // 密码确认验证函数\n    const validateConfirmPassword = (rule, value, callback) => {\n      if (value !== this.passwordForm.newPassword) {\n        callback(new Error('两次输入的密码不一致'));\n      } else {\n        callback();\n      }\n    };\n\n    return {\n      clientConnected: false,\n      clientStatus: null,\n      checkingStatus: false,\n      showClientDialog: false,\n      passwordDialogVisible: false,\n      clientConfig: {\n        // 客户端协议，用于启动客户端应用\n        protocol: 'fort://',\n        // 客户端端口，用于检测客户端状态\n        port: 45654,\n        // 客户端下载文件名\n        fileName: 'GatekeeperSetup.exe'\n      },\n      passwordForm: {\n        oldPassword: '',\n        newPassword: '',\n        confirmPassword: ''\n      },\n      passwordRules: {\n        oldPassword: [\n          { required: true, message: '请输入原密码', trigger: 'blur' }\n        ],\n        newPassword: [\n          { required: true, message: '请输入新密码', trigger: 'blur' },\n          { min: 6, message: '密码长度不能小于6个字符', trigger: 'blur' }\n        ],\n        confirmPassword: [\n          { required: true, message: '请再次输入新密码', trigger: 'blur' },\n          { validator: validateConfirmPassword, trigger: 'blur' }\n        ]\n      },\n      statusCheckController: null,\n      lastCheckTime: 0, // 添加上次检查时间记录\n      consecutiveFailures: 0 // 添加连续失败次数记录\n    }\n  },\n  computed: {\n    statusIcon() {\n      if (this.checkingStatus) return 'el-icon-loading';\n      if (!this.clientStatus) return 'el-icon-error';\n      return this.clientStatus.server_connected ? 'el-icon-success' : 'el-icon-warning';\n    },\n    statusText() {\n      if (this.checkingStatus) return '正在检查客户端状态...';\n      if (!this.clientStatus) return '客户端未连接';\n      if (!this.clientStatus.server_connected) return '堡垒机连接断开';\n      return '客户端已连接';\n    },\n    isLoggedIn() {\n      return this.$store.state.user !== null;\n    },\n    isAdmin() {\n      return this.$store.state.user && this.$store.state.user.is_admin;\n    },\n    currentUser() {\n      return this.$store.state.user || { username: '' };\n    }\n  },\n  methods: {\n    // 重置不活动计时器\n    resetInactivityTimer() {\n      // 使用Vuex action重置计时器\n      this.$store.dispatch('resetInactivityTimer');\n    },\n    \n    // 检查客户端状态并重置计时器\n    checkAndResetTimer() {\n      this.resetInactivityTimer();\n      \n      // 如果最后一次检查是在3秒前，且当前未在检查中，则立即检查\n      const now = Date.now();\n      if (now - this.lastCheckTime > 3000 && !this.checkingStatus) {\n        this.checkClientStatus();\n      }\n    },\n    async handleLogout() {\n      try {\n        // 调用注销接口\n        await axios.post('/api/auth/logout');\n        // 清除本地存储的 token 和用户信息\n        localStorage.removeItem('token');\n        this.$store.commit('SET_USER', null);\n        // 停止状态检查\n        this.stopStatusCheck();\n        // 重置状态\n        this.clientConnected = false;\n        this.clientStatus = null;\n        this.checkingStatus = false;\n        this.showClientDialog = false;\n        // 跳转到登录页面\n        this.$router.push('/login');\n        this.$message.success('注销成功');\n      } catch (error) {\n        console.error('注销失败:', error);\n        const errorMessage = error.response && error.response.data && error.response.data.error || error.message;\n        this.$message.error('注销失败: ' + errorMessage);\n      }\n    },\n    async checkClientStatus() {\n      // 如果未登录，不执行检查\n      if (!this.isLoggedIn) {\n        return;\n      }\n      \n      // 检查是否处于冷却期（1秒内）且当前未在检查中\n      const now = Date.now();\n      if (now - this.lastCheckTime < 1000 && !this.checkingStatus) {\n        console.log('客户端状态检查过于频繁，忽略本次检查');\n        return;\n      }\n      \n      // 更新最后检查时间\n      this.lastCheckTime = now;\n      \n      // 记录检查前的连接状态\n      const wasConnected = this.clientConnected;\n      \n      try {\n        // 设置正在检查状态\n        this.checkingStatus = true;\n\n        // 取消之前的请求（如果有）\n        if (this.statusCheckController) {\n          this.statusCheckController.abort();\n        }\n        \n        // 创建新的 AbortController\n        this.statusCheckController = new AbortController();\n        const timeout = setTimeout(() => this.statusCheckController.abort(), 1500);\n        \n        // 直接从本地客户端获取状态\n        const response = await fetch('http://127.0.0.1:45654/status', {\n          method: 'GET',\n          headers: {\n            'Accept': 'application/json'\n          },\n          signal: this.statusCheckController.signal\n        });\n        \n        clearTimeout(timeout);\n        \n        if (response.ok) {\n          const data = await response.json();\n          this.clientStatus = data;\n          this.clientConnected = data.status === 'running' && data.server_connected;\n          \n          // 保存客户端信息到store\n          this.$store.commit('SET_CLIENT_INFO', data);\n          \n          // 如果连接成功，重置连续失败次数\n          if (this.clientConnected) {\n            this.consecutiveFailures = 0;\n            \n            // 如果之前未连接，现在连接成功，显示连接成功提示\n            if (!wasConnected) {\n              this.$notify({\n                title: '客户端已连接',\n                message: '堡垒机客户端连接成功',\n                type: 'success',\n                duration: 3000,\n                position: 'top-right'\n              });\n            }\n          } else {\n            // 即使请求成功，但如果客户端未真正连接，也计为失败\n            this.consecutiveFailures++;\n          }\n          \n          console.log('客户端状态:', data);\n        } else {\n          this.clientStatus = null;\n          this.clientConnected = false;\n          this.$store.commit('SET_CLIENT_INFO', null);\n          \n          // 增加连续失败次数\n          this.consecutiveFailures++;\n        }\n      } catch (error) {\n        this.clientStatus = null;\n        this.clientConnected = false;\n        this.$store.commit('SET_CLIENT_INFO', null);\n        \n        // 对任何错误（包括AbortError）都增加连续失败次数，但权重不同\n        if (error.name === 'AbortError') {\n          // 超时错误也算作失败，但增加幅度较小\n          this.consecutiveFailures += 0.5;\n          console.log('检查客户端状态超时');\n        } else {\n          this.consecutiveFailures++;\n          console.error('检查客户端状态失败:', error);\n        }\n      } finally {\n        this.checkingStatus = false;\n        this.statusCheckController = null;\n      }\n    },\n    \n    // 在下面的方法中，增加立即检查状态的逻辑\n    downloadClient() {\n      try {\n        // 使用静态的下载链接\n        const downloadUrl = '/static/GatekeeperSetup.exe';\n        \n        // 关闭对话框并显示提示\n        this.showClientDialog = false;\n        this.$message.success('开始下载客户端，请稍候...');\n        \n        // 采用多种方法尝试下载，增加成功率\n        \n        // 方法1：创建一个隐藏的a标签并触发点击下载\n        const link = document.createElement('a');\n        link.href = downloadUrl;\n        link.setAttribute('download', 'GatekeeperSetup.exe');\n        link.setAttribute('target', '_blank');\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n        \n        // 方法3：使用iframe下载\n        const iframe = document.createElement('iframe');\n        iframe.style.display = 'none';\n        iframe.src = downloadUrl;\n        document.body.appendChild(iframe);\n        // 2秒后移除iframe\n        setTimeout(() => {\n          document.body.removeChild(iframe);\n        }, 2000);\n        \n        // 方法2：延迟确认下载是否开始\n        setTimeout(() => {\n          this.$confirm('如果下载没有自动开始，请点击\"确定\"重新下载', '下载提示', {\n            confirmButtonText: '重新下载',\n            cancelButtonText: '已在下载',\n            type: 'info'\n          }).then(() => {\n            // 用户点击了重新下载\n            this.axiosDownload(downloadUrl);\n          }).catch(() => {\n            // 用户点击了已在下载，不做处理\n          });\n        }, 3000);\n        \n        // 下载后标记为已安装\n        setTimeout(() => {\n          this.clientInstalled = true;\n          localStorage.setItem('clientInstalled', 'true');\n        }, 3000);\n      } catch (error) {\n        console.error('下载客户端出错:', error);\n        this.$message.error('下载失败，请稍后再试或联系管理员');\n      }\n    },\n    \n    // 新增：使用axios下载文件的方法\n    axiosDownload(url) {\n      axios({\n        url: url,\n        method: 'GET',\n        responseType: 'blob', // 重要，指定响应类型为blob\n      }).then(response => {\n        const blob = new Blob([response.data]);\n        const link = document.createElement('a');\n        link.href = URL.createObjectURL(blob);\n        link.download = 'GatekeeperSetup.exe';\n        link.click();\n        URL.revokeObjectURL(link.href);\n        this.$message.success('已重新触发下载，请查看浏览器下载状态');\n      }).catch(error => {\n        console.error('axios下载失败:', error);\n        this.$message.error('下载失败，请联系管理员');\n      });\n    },\n    \n    startClient() {\n      // 如果客户端已经连接，则不需要启动\n      if (this.clientConnected) {\n        this.$message.info('客户端已连接，无需重新启动');\n        this.showClientDialog = false;\n        return;\n      }\n      \n      // 显示正在尝试连接的消息\n      this.$message({\n        message: '正在尝试启动客户端...',\n        type: 'info',\n        duration: 3000\n      });\n      \n      // 关闭对话框\n      this.showClientDialog = false;\n      \n      // 使用注册的协议启动客户端\n      window.location.href = 'fort://start';\n      \n      // 设置一个短暂的延迟后再次检查客户端状态\n      setTimeout(() => {\n        console.log('启动客户端后重新检查状态');\n        this.checkClientStatus();\n      }, 3000);\n    },\n    \n    checkClientInstalled() {\n      this.clientInstalled = true;\n    },\n    \n    startStatusCheck() {\n      // 如果未登录，不启动检查\n      if (!this.isLoggedIn) {\n        return;\n      }\n      \n      // 如果已经有定时器在运行，先清除它\n      this.stopStatusCheck();\n      \n      // 更频繁地检查状态（每3秒一次）\n      this.statusCheckInterval = setInterval(() => {\n        this.checkClientStatus();\n      }, 3000); // 将检查间隔从5秒减少到3秒\n      \n      // 立即执行一次检查\n      this.checkClientStatus();\n    },\n    stopStatusCheck() {\n      if (this.statusCheckInterval) {\n        clearInterval(this.statusCheckInterval);\n        this.statusCheckInterval = null;\n      }\n      \n      // 取消进行中的请求\n      if (this.statusCheckController) {\n        this.statusCheckController.abort();\n        this.statusCheckController = null;\n      }\n    },\n    handleCommand(command) {\n      switch (command) {\n        case 'changePassword':\n          this.showChangePasswordDialog();\n          break;\n        case 'logout':\n          this.handleLogout();\n          break;\n      }\n    },\n    showChangePasswordDialog() {\n      this.passwordDialogVisible = true;\n      this.passwordForm = {\n        oldPassword: '',\n        newPassword: '',\n        confirmPassword: ''\n      };\n    },\n    async submitPasswordChange() {\n      try {\n        await this.$refs.passwordForm.validate();\n        \n        const response = await this.axios.post('/api/auth/change-password', {\n          old_password: this.passwordForm.oldPassword,\n          new_password: this.passwordForm.newPassword\n        });\n\n        if (response.data.success) {\n          this.$message.success('密码修改成功');\n          this.passwordDialogVisible = false;\n        }\n      } catch (error) {\n        if (error.response) {\n          this.$message.error(error.response.data.error || '密码修改失败');\n        } else if (error.message) {\n          // 表单验证错误\n          this.$message.error(error.message);\n        } else {\n          this.$message.error('密码修改失败');\n        }\n      }\n    }\n  },\n  watch: {\n    // 监听登录状态变化\n    isLoggedIn(newValue) {\n      if (newValue) {\n        this.startStatusCheck();\n        // 初始化不活动计时器\n        this.resetInactivityTimer();\n      } else {\n        this.stopStatusCheck();\n      }\n    }\n  },\n  mounted() {\n    // 只在登录状态下启动检查\n    if (this.isLoggedIn) {\n      this.startStatusCheck();\n      // 初始化不活动计时器\n      this.resetInactivityTimer();\n    }\n  },\n  beforeDestroy() {\n    this.stopStatusCheck();\n  }\n}\n</script>\n\n<style scoped>\n.layout {\n  height: 100vh;\n  background-color: #f0f2f5;\n}\n\n.el-aside {\n  background: linear-gradient(180deg, #F8FAFF 0%, #F0F5FF 100%);\n  height: 100vh;\n  box-shadow: 1px 0 8px rgba(0,0,0,0.05);\n  display: flex;\n  flex-direction: column;\n  width: 180px !important;\n}\n\n.el-menu {\n  border-right: none;\n  background: transparent;\n  padding-top: 12px;\n  flex: 1;\n  width: 180px;\n}\n\n.el-menu-item {\n  height: 48px;\n  line-height: 48px;\n  color: #5B6B8B !important;\n  margin: 4px 12px;\n  padding: 0 16px !important;\n  border-radius: 8px;\n  font-size: 14px;\n  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n}\n\n.el-menu-item:hover {\n  color: #4B7BE5 !important;\n  background-color: rgba(75, 123, 229, 0.08) !important;\n  transform: translateX(4px);\n}\n\n.el-menu-item.is-active {\n  color: #4B7BE5 !important;\n  background-color: rgba(75, 123, 229, 0.12) !important;\n  font-weight: 500;\n}\n\n.el-submenu /deep/ .el-submenu__title {\n  height: 48px;\n  line-height: 48px;\n  color: #5B6B8B !important;\n  margin: 4px 12px;\n  padding: 0 16px !important;\n  border-radius: 8px;\n  font-size: 14px;\n  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n}\n\n.el-submenu /deep/ .el-submenu__title:hover {\n  color: #4B7BE5 !important;\n  background-color: rgba(75, 123, 229, 0.08) !important;\n  transform: translateX(4px);\n}\n\n.el-submenu.is-active /deep/ .el-submenu__title {\n  color: #4B7BE5 !important;\n}\n\n.el-submenu /deep/ .el-menu {\n  background-color: transparent !important;\n  padding-left: 8px;\n  margin: 0 8px;\n  border-radius: 8px;\n}\n\n.el-menu-item i, .el-submenu /deep/ .el-submenu__title i {\n  margin-right: 12px;\n  width: 18px;\n  font-size: 18px;\n  color: inherit;\n  transition: all 0.3s ease;\n}\n\n.header-content {\n  display: flex;\n  align-items: center;\n  height: 100%;\n  padding: 0 24px;\n  background: linear-gradient(90deg, #5B8FF9 0%, #4B7BE5 100%);\n  position: relative;\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n}\n\n.header-title {\n  color: #fff;\n  font-size: 18px;\n  font-weight: 500;\n  letter-spacing: 0.5px;\n  opacity: 0.95;\n  margin-left: 20px;\n}\n\n.user-dropdown {\n  margin-left: auto;\n}\n\n.user-info {\n  display: flex;\n  align-items: center;\n  padding: 6px 16px;\n  cursor: pointer;\n  background: rgba(255, 255, 255, 0.1);\n  border-radius: 20px;\n  transition: all 0.3s ease;\n}\n\n.user-info:hover {\n  background: rgba(255, 255, 255, 0.2);\n}\n\n.user-info i {\n  color: #fff;\n  font-size: 16px;\n}\n\n.user-info {\n  display: flex;\n  align-items: center;\n  padding: 6px 14px; /* 调整 */\n  cursor: pointer;\n  background: rgba(255, 255, 255, 0.1);\n  border-radius: 20px;\n  transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1); /* 调整 */\n  gap: 6px; /* 新增 */\n}\n\n.el-dropdown-menu {\n  min-width: 140px; /* 新增 */\n  border-radius: 6px; /* 调整 */\n  margin-top: 4px; /* 减少间距 */\n}\n\n.el-dropdown-menu__item {\n  align-items: center; /* 新增 */\n  padding: 8px 16px; /* 调整 */\n  font-size: 13px; /* 可选：调小字号 */\n}\n\n.el-dropdown-menu__item i {\n  margin-right: 8px; /* 调整 */\n  width: 18px; /* 新增 */\n  font-size: 16px; /* 调整 */\n}\n\n.el-dropdown-menu__item.is-divided {\n  border-top: 1px solid #ebeef5;\n  margin: 4px 0;\n  padding-top: 8px; /* 调整 */\n}\n\n.el-header {\n  padding: 0;\n  height: 60px !important;\n  box-shadow: 0 1px 4px rgba(0,21,41,0.08);\n  z-index: 10;\n  position: relative;\n}\n\n.el-main {\n  padding: 20px;\n  background-color: #F8FAFF;\n}\n\n.client-status {\n  display: flex;\n  align-items: center;\n  margin-right: 24px;\n  padding: 6px 12px;\n  background: rgba(255,255,255,0.1);\n  border-radius: 20px;\n  backdrop-filter: blur(5px);\n  transition: all 0.3s ease;\n}\n\n.client-status:hover {\n  background: rgba(255,255,255,0.15);\n}\n\n.client-icon {\n  font-size: 16px;\n  color: rgba(255,255,255,0.85);\n  transition: all 0.3s ease;\n}\n\n.client-icon.el-icon-success {\n  color: #67C23A;\n  text-shadow: 0 0 8px rgba(103, 194, 58, 0.3);\n}\n\n.client-icon.el-icon-error {\n  color: #F56C6C;\n  text-shadow: 0 0 8px rgba(245, 108, 108, 0.3);\n}\n\n.client-icon.el-icon-loading {\n  color: #409EFF;\n  text-shadow: 0 0 8px rgba(64, 158, 255, 0.3);\n}\n\n/* 客户端对话框样式 */\n.client-dialog-content {\n  display: flex;\n  padding: 10px;\n}\n\n.client-dialog-icon {\n  margin-right: 15px;\n  display: flex;\n  align-items: flex-start;\n  padding-top: 5px;\n}\n\n.client-dialog-icon i {\n  font-size: 24px;\n  color: #E6A23C;\n  animation: pulse 2s infinite;\n}\n\n.client-dialog-message {\n  flex: 1;\n}\n\n.client-dialog-message p {\n  margin-top: 0;\n  margin-bottom: 10px;\n  font-weight: 500;\n  color: #303133;\n}\n\n.client-dialog-message ol {\n  margin: 0;\n  padding-left: 20px;\n  color: #606266;\n}\n\n.client-dialog-message li {\n  margin-bottom: 8px;\n  line-height: 1.5;\n}\n\n@keyframes pulse {\n  0% {\n    opacity: 1;\n  }\n  50% {\n    opacity: 0.6;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n\n/* 增加对话框中按钮的间距 */\n.dialog-footer .el-button {\n  margin-left: 10px;\n}\n</style>"],"mappings":"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","ignoreList":[]}]}