{"remainingRequest":"D:\\gatekeeper\\frontend\\node_modules\\babel-loader\\lib\\index.js!D:\\gatekeeper\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\gatekeeper\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\gatekeeper\\frontend\\src\\components\\ServerList.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\gatekeeper\\frontend\\src\\components\\ServerList.vue","mtime":1751270158081},{"path":"D:\\gatekeeper\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1747724956321},{"path":"D:\\gatekeeper\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1747724958365},{"path":"D:\\gatekeeper\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1747724956321},{"path":"D:\\gatekeeper\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1747724959585}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZXhwb3J0IGRlZmF1bHQgewogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBzZXJ2ZXJzOiBbXSwKICAgICAgZGlhbG9nVmlzaWJsZTogZmFsc2UsCiAgICAgIHNlcnZlckZvcm06IHsKICAgICAgICBuYW1lOiAnJywKICAgICAgICBpcDogJycsCiAgICAgICAgdHlwZTogJ1dpbmRvd3MnLAogICAgICAgIHBvcnQ6IDMzODksCiAgICAgICAgdXNlcm5hbWU6ICcnLAogICAgICAgIHBhc3N3b3JkOiAnJywKICAgICAgICBjcmVkZW50aWFsX2lkOiBudWxsLAogICAgICAgIGNhdGVnb3J5X2lkOiBudWxsCiAgICAgIH0sCiAgICAgIHJ1bGVzOiB7CiAgICAgICAgbmFtZTogW3sKICAgICAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgICAgICAgbWVzc2FnZTogJ+ivt+i+k+WFpeacjeWKoeWZqOWQjeensCcsCiAgICAgICAgICB0cmlnZ2VyOiAnYmx1cicKICAgICAgICB9XSwKICAgICAgICBpcDogW3sKICAgICAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgICAgICAgbWVzc2FnZTogJ+ivt+i+k+WFpUlQ5Zyw5Z2AJywKICAgICAgICAgIHRyaWdnZXI6ICdibHVyJwogICAgICAgIH1dLAogICAgICAgIHR5cGU6IFt7CiAgICAgICAgICByZXF1aXJlZDogdHJ1ZSwKICAgICAgICAgIG1lc3NhZ2U6ICfor7fpgInmi6nmnI3liqHlmajnsbvlnosnLAogICAgICAgICAgdHJpZ2dlcjogJ2NoYW5nZScKICAgICAgICB9XSwKICAgICAgICBwb3J0OiBbewogICAgICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICAgICAgICBtZXNzYWdlOiAn6K+36L6T5YWl56uv5Y+j5Y+3JywKICAgICAgICAgIHRyaWdnZXI6ICdibHVyJwogICAgICAgIH0sIHsKICAgICAgICAgIHR5cGU6ICdudW1iZXInLAogICAgICAgICAgbWVzc2FnZTogJ+err+WPo+W/hemhu+S4uuaVsOWtlycsCiAgICAgICAgICB0cmlnZ2VyOiAnYmx1cicKICAgICAgICB9LCB7CiAgICAgICAgICB2YWxpZGF0b3I6IChydWxlLCB2YWx1ZSwgY2FsbGJhY2spID0+IHsKICAgICAgICAgICAgaWYgKHZhbHVlIDwgMSB8fCB2YWx1ZSA+IDY1NTM1KSB7CiAgICAgICAgICAgICAgY2FsbGJhY2sobmV3IEVycm9yKCfnq6/lj6Plj7flv4XpobvlnKgxLTY1NTM15LmL6Ze0JykpOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgIGNhbGxiYWNrKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICB0cmlnZ2VyOiAnYmx1cicKICAgICAgICB9XSwKICAgICAgICB1c2VybmFtZTogW3sKICAgICAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgICAgICAgbWVzc2FnZTogJ+ivt+i+k+WFpeeUqOaIt+WQjScsCiAgICAgICAgICB0cmlnZ2VyOiAnYmx1cicKICAgICAgICB9XSwKICAgICAgICBwYXNzd29yZDogW3sKICAgICAgICAgIHZhbGlkYXRvcjogKHJ1bGUsIHZhbHVlLCBjYWxsYmFjaykgPT4gewogICAgICAgICAgICBpZiAoIXRoaXMuaXNFZGl0ICYmICF2YWx1ZSkgewogICAgICAgICAgICAgIGNhbGxiYWNrKG5ldyBFcnJvcign6K+36L6T5YWl5a+G56CBJykpOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgIGNhbGxiYWNrKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICB0cmlnZ2VyOiAnYmx1cicKICAgICAgICB9XQogICAgICB9LAogICAgICBhY3RpdmVDb25uZWN0aW9uczoge30sCiAgICAgIC8vIOWtmOWCqOa0u+WKqOi/nuaOpeeahCB0b2tlbgogICAgICBoZWFydGJlYXRUaW1lcjogbnVsbCwKICAgICAgcmVmcmVzaEludGVydmFsOiBudWxsLAogICAgICBjYXRlZ29yaWVzOiBbXSwKICAgICAgc2VsZWN0ZWRDYXRlZ29yeTogbnVsbCwKICAgICAgY2F0ZWdvcnlUcmVlOiBbewogICAgICAgIGlkOiAnYWxsJywKICAgICAgICBsYWJlbDogJ+WFqOmDqOacjeWKoeWZqCcKICAgICAgfV0sCiAgICAgIGRlZmF1bHRQcm9wczogewogICAgICAgIGNoaWxkcmVuOiAnY2hpbGRyZW4nLAogICAgICAgIGxhYmVsOiAnbGFiZWwnCiAgICAgIH0sCiAgICAgIGlzRWRpdDogZmFsc2UsCiAgICAgIGVkaXRpbmdTZXJ2ZXJJZDogbnVsbCwKICAgICAgLy8g5paw5aKe5YiG6aG155u45YWzCiAgICAgIGN1cnJlbnRQYWdlOiAxLAogICAgICBwYWdlU2l6ZTogOCwKICAgICAgLy8g6Ieq6YCC5bqU55u45YWzCiAgICAgIHdpbmRvd1dpZHRoOiAwLAogICAgICBpc01vYmlsZTogZmFsc2UsCiAgICAgIHNob3dTaWRlYmFyOiB0cnVlLAogICAgICB0YWJsZU1heEhlaWdodDogNTAwLAogICAgICAvLyDmjpLluo/nm7jlhbMKICAgICAgc29ydENvbHVtbjogbnVsbCwKICAgICAgc29ydE9yZGVyOiBudWxsLAogICAgICAvLyDlh63mja7nm7jlhbMKICAgICAgY3JlZGVudGlhbHM6IFtdLAogICAgICBzZWxlY3RlZENyZWRlbnRpYWxOYW1lOiAnJywKICAgICAgc2VsZWN0ZWRDcmVkZW50aWFsVXNlcm5hbWU6ICcnLAogICAgICAvLyDmkJzntKLlhbPplK7lrZcKICAgICAgc2VhcmNoS2V5d29yZDogJycKICAgIH07CiAgfSwKICBjb21wdXRlZDogewogICAgaXNBZG1pbigpIHsKICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLnN0YXRlLnVzZXIgJiYgdGhpcy4kc3RvcmUuc3RhdGUudXNlci5pc19hZG1pbjsKICAgIH0sCiAgICBpc0xvZ2dlZEluKCkgewogICAgICByZXR1cm4gdGhpcy4kc3RvcmUuc3RhdGUudXNlciAhPT0gbnVsbDsKICAgIH0sCiAgICBmaWx0ZXJlZFNlcnZlcnMoKSB7CiAgICAgIGxldCBzZXJ2ZXJzID0gW107CiAgICAgIGlmICghdGhpcy5zZWxlY3RlZENhdGVnb3J5IHx8IHRoaXMuc2VsZWN0ZWRDYXRlZ29yeS5pZCA9PT0gJ2FsbCcpIHsKICAgICAgICBzZXJ2ZXJzID0gdGhpcy5zZXJ2ZXJzOwogICAgICB9IGVsc2UgewogICAgICAgIHNlcnZlcnMgPSB0aGlzLnNlcnZlcnMuZmlsdGVyKHNlcnZlciA9PiBzZXJ2ZXIuY2F0ZWdvcnlfaWQgPT09IHRoaXMuc2VsZWN0ZWRDYXRlZ29yeS5pZCk7CiAgICAgIH0KICAgICAgaWYgKHRoaXMuc2VhcmNoS2V5d29yZCkgewogICAgICAgIGNvbnN0IGtleXdvcmQgPSB0aGlzLnNlYXJjaEtleXdvcmQudHJpbSgpLnRvTG93ZXJDYXNlKCk7CiAgICAgICAgc2VydmVycyA9IHNlcnZlcnMuZmlsdGVyKHNlcnZlciA9PiBzZXJ2ZXIubmFtZSAmJiBzZXJ2ZXIubmFtZS50b0xvd2VyQ2FzZSgpLmluY2x1ZGVzKGtleXdvcmQpIHx8IHNlcnZlci5pcCAmJiBzZXJ2ZXIuaXAudG9Mb3dlckNhc2UoKS5pbmNsdWRlcyhrZXl3b3JkKSk7CiAgICAgIH0KICAgICAgcmV0dXJuIHNlcnZlcnM7CiAgICB9LAogICAgLy8g5re75Yqg5YiG6aG16K6h566X5bGe5oCnCiAgICBwYWdpbmF0ZWRTZXJ2ZXJzKCkgewogICAgICBjb25zdCBzdGFydCA9ICh0aGlzLmN1cnJlbnRQYWdlIC0gMSkgKiB0aGlzLnBhZ2VTaXplOwogICAgICBjb25zdCBlbmQgPSBzdGFydCArIHRoaXMucGFnZVNpemU7CgogICAgICAvLyDlr7nnrZvpgInlkI7nmoTmnI3liqHlmajov5vooYzmjpLluo8KICAgICAgbGV0IHNvcnRlZFNlcnZlcnMgPSBbLi4udGhpcy5maWx0ZXJlZFNlcnZlcnNdOwogICAgICBpZiAodGhpcy5zb3J0Q29sdW1uICYmIHRoaXMuc29ydE9yZGVyKSB7CiAgICAgICAgc29ydGVkU2VydmVycy5zb3J0KChhLCBiKSA9PiB7CiAgICAgICAgICBjb25zdCBhVmFsdWUgPSBhW3RoaXMuc29ydENvbHVtbl07CiAgICAgICAgICBjb25zdCBiVmFsdWUgPSBiW3RoaXMuc29ydENvbHVtbl07CiAgICAgICAgICBpZiAodHlwZW9mIGFWYWx1ZSA9PT0gJ3N0cmluZycpIHsKICAgICAgICAgICAgaWYgKHRoaXMuc29ydE9yZGVyID09PSAnYXNjZW5kaW5nJykgewogICAgICAgICAgICAgIHJldHVybiBhVmFsdWUubG9jYWxlQ29tcGFyZShiVmFsdWUpOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgIHJldHVybiBiVmFsdWUubG9jYWxlQ29tcGFyZShhVmFsdWUpOwogICAgICAgICAgICB9CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBpZiAodGhpcy5zb3J0T3JkZXIgPT09ICdhc2NlbmRpbmcnKSB7CiAgICAgICAgICAgICAgcmV0dXJuIGFWYWx1ZSAtIGJWYWx1ZTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICByZXR1cm4gYlZhbHVlIC0gYVZhbHVlOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSk7CiAgICAgIH0KICAgICAgcmV0dXJuIHNvcnRlZFNlcnZlcnMuc2xpY2Uoc3RhcnQsIGVuZCk7CiAgICB9LAogICAgY3JlZGVudGlhbE9wdGlvbnMoKSB7CiAgICAgIHJldHVybiB0aGlzLmNyZWRlbnRpYWxzOwogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgdXBkYXRlRGVmYXVsdFBvcnQoKSB7CiAgICAgIC8vIOagueaNruacjeWKoeWZqOexu+Wei+abtOaWsOm7mOiupOerr+WPowogICAgICBpZiAodGhpcy5zZXJ2ZXJGb3JtLnR5cGUgPT09ICdXaW5kb3dzJykgewogICAgICAgIHRoaXMuc2VydmVyRm9ybS5wb3J0ID0gMzM4OTsKICAgICAgfSBlbHNlIGlmICh0aGlzLnNlcnZlckZvcm0udHlwZSA9PT0gJ0xpbnV4JykgewogICAgICAgIHRoaXMuc2VydmVyRm9ybS5wb3J0ID0gMjI7CiAgICAgIH0KICAgIH0sCiAgICBhc3luYyBsb2FkU2VydmVycygpIHsKICAgICAgLy8g5aaC5p6c5pyq55m75b2V77yM5LiN5Yqg6L295pyN5Yqh5Zmo5YiX6KGoCiAgICAgIGlmICghdGhpcy5pc0xvZ2dlZEluKSB7CiAgICAgICAgcmV0dXJuOwogICAgICB9CiAgICAgIHRyeSB7CiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCB0aGlzLmF4aW9zLmdldCgnL2FwaS9zZXJ2ZXJzJyk7CiAgICAgICAgdGhpcy5zZXJ2ZXJzID0gcmVzcG9uc2UuZGF0YTsKICAgICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgICAgICAvLyDlj6rlnKjnmbvlvZXnirbmgIHkuIvmmL7npLrplJnor6/mtojmga8KICAgICAgICBpZiAodGhpcy5pc0xvZ2dlZEluKSB7CiAgICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKCfojrflj5bmnI3liqHlmajliJfooajlpLHotKUnKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgICBzaG93QWRkRGlhbG9nKCkgewogICAgICB0aGlzLmlzRWRpdCA9IGZhbHNlOwogICAgICB0aGlzLmVkaXRpbmdTZXJ2ZXJJZCA9IG51bGw7CiAgICAgIHRoaXMuZGlhbG9nVmlzaWJsZSA9IHRydWU7CiAgICAgIHRoaXMuc2VydmVyRm9ybSA9IHsKICAgICAgICBuYW1lOiAnJywKICAgICAgICBpcDogJycsCiAgICAgICAgdHlwZTogJ1dpbmRvd3MnLAogICAgICAgIHBvcnQ6IDMzODksCiAgICAgICAgLy8g6buY6K6k5Li6V2luZG93cyBSRFDnq6/lj6MKICAgICAgICB1c2VybmFtZTogJycsCiAgICAgICAgcGFzc3dvcmQ6ICcnLAogICAgICAgIGNyZWRlbnRpYWxfaWQ6IG51bGwsCiAgICAgICAgY2F0ZWdvcnlfaWQ6IG51bGwKICAgICAgfTsKICAgICAgdGhpcy5zZWxlY3RlZENyZWRlbnRpYWxOYW1lID0gJyc7CiAgICAgIHRoaXMuc2VsZWN0ZWRDcmVkZW50aWFsVXNlcm5hbWUgPSAnJzsKICAgIH0sCiAgICBzaG93RWRpdERpYWxvZyhzZXJ2ZXIpIHsKICAgICAgdGhpcy5pc0VkaXQgPSB0cnVlOwogICAgICB0aGlzLmVkaXRpbmdTZXJ2ZXJJZCA9IHNlcnZlci5pZDsKICAgICAgdGhpcy5kaWFsb2dWaXNpYmxlID0gdHJ1ZTsKICAgICAgdGhpcy5zZXJ2ZXJGb3JtID0gewogICAgICAgIG5hbWU6IHNlcnZlci5uYW1lLAogICAgICAgIGlwOiBzZXJ2ZXIuaXAsCiAgICAgICAgdHlwZTogc2VydmVyLnR5cGUsCiAgICAgICAgcG9ydDogc2VydmVyLnBvcnQgfHwgKHNlcnZlci50eXBlID09PSAnV2luZG93cycgPyAzMzg5IDogMjIpLAogICAgICAgIC8vIOagueaNruexu+Wei+iuvue9rum7mOiupOerr+WPowogICAgICAgIHVzZXJuYW1lOiBzZXJ2ZXIudXNlcm5hbWUsCiAgICAgICAgcGFzc3dvcmQ6ICcnLAogICAgICAgIC8vIOe8lui+keaXtuWvhueggeS4uuepugogICAgICAgIGNyZWRlbnRpYWxfaWQ6IHNlcnZlci5jcmVkZW50aWFsX2lkIHx8IG51bGwsCiAgICAgICAgY2F0ZWdvcnlfaWQ6IHNlcnZlci5jYXRlZ29yeV9pZCB8fCBudWxsCiAgICAgIH07CiAgICAgIGlmIChzZXJ2ZXIuY3JlZGVudGlhbF9pZCkgewogICAgICAgIHRoaXMuaGFuZGxlQ3JlZGVudGlhbENoYW5nZShzZXJ2ZXIuY3JlZGVudGlhbF9pZCk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy5zZWxlY3RlZENyZWRlbnRpYWxOYW1lID0gJyc7CiAgICAgICAgdGhpcy5zZWxlY3RlZENyZWRlbnRpYWxVc2VybmFtZSA9ICcnOwogICAgICB9CiAgICB9LAogICAgYXN5bmMgbG9hZENhdGVnb3JpZXMoKSB7CiAgICAgIHRyeSB7CiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCB0aGlzLmF4aW9zLmdldCgnL2FwaS9jYXRlZ29yaWVzJyk7CiAgICAgICAgdGhpcy5jYXRlZ29yaWVzID0gcmVzcG9uc2UuZGF0YTsKICAgICAgICAvLyDmm7TmlrDliIbnsbvmoJEKICAgICAgICB0aGlzLmNhdGVnb3J5VHJlZSA9IFt7CiAgICAgICAgICBpZDogJ2FsbCcsCiAgICAgICAgICBsYWJlbDogJ+WFqOmDqOacjeWKoeWZqCcKICAgICAgICB9LCAuLi50aGlzLmNhdGVnb3JpZXMubWFwKGNhdGVnb3J5ID0+ICh7CiAgICAgICAgICBpZDogY2F0ZWdvcnkuaWQsCiAgICAgICAgICBsYWJlbDogY2F0ZWdvcnkubmFtZQogICAgICAgIH0pKV07CiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcign6I635Y+W5YiG57G75YiX6KGo5aSx6LSlJyk7CiAgICAgIH0KICAgIH0sCiAgICBhc3luYyBsb2FkQ3JlZGVudGlhbHMoKSB7CiAgICAgIHRyeSB7CiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCB0aGlzLmF4aW9zLmdldCgnL2FwaS9jcmVkZW50aWFscycpOwogICAgICAgIHRoaXMuY3JlZGVudGlhbHMgPSByZXNwb25zZS5kYXRhOwogICAgICB9IGNhdGNoIChlcnJvcikgewogICAgICAgIGNvbnNvbGUuZXJyb3IoJ+iOt+WPluWHreaNruWIl+ihqOWksei0pScsIGVycm9yKTsKICAgICAgfQogICAgfSwKICAgIGFzeW5jIHN1Ym1pdEZvcm0oKSB7CiAgICAgIHRyeSB7CiAgICAgICAgY29uc3QgdmFsaWQgPSBhd2FpdCB0aGlzLiRyZWZzLnNlcnZlckZvcm0udmFsaWRhdGUoKTsKICAgICAgICBpZiAodmFsaWQpIHsKICAgICAgICAgIGlmICh0aGlzLmlzRWRpdCkgewogICAgICAgICAgICAvLyDmm7TmlrDmnI3liqHlmagKICAgICAgICAgICAgdHJ5IHsKICAgICAgICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IHRoaXMuYXhpb3MucHV0KGAvYXBpL3NlcnZlcnMvJHt0aGlzLmVkaXRpbmdTZXJ2ZXJJZH1gLCB0aGlzLnNlcnZlckZvcm0pOwogICAgICAgICAgICAgIGlmIChyZXNwb25zZS5kYXRhKSB7CiAgICAgICAgICAgICAgICB0aGlzLiRtZXNzYWdlLnN1Y2Nlc3MoJ+abtOaWsOacjeWKoeWZqOaIkOWKnycpOwogICAgICAgICAgICAgICAgdGhpcy5kaWFsb2dWaXNpYmxlID0gZmFsc2U7CiAgICAgICAgICAgICAgICB0aGlzLmxvYWRTZXJ2ZXJzKCk7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgewogICAgICAgICAgICAgIGNvbnN0IGVycm9yTXNnID0gZXJyb3IucmVzcG9uc2UgJiYgZXJyb3IucmVzcG9uc2UuZGF0YSAmJiBlcnJvci5yZXNwb25zZS5kYXRhLmVycm9yID8gZXJyb3IucmVzcG9uc2UuZGF0YS5lcnJvciA6ICfmnKrnn6XplJnor68nOwogICAgICAgICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IoYOabtOaWsOacjeWKoeWZqOWksei0pTogJHtlcnJvck1zZ31gKTsKICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKCfmm7TmlrDmnI3liqHlmajplJnor686JywgZXJyb3IpOwogICAgICAgICAgICB9CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAvLyDmt7vliqDmnI3liqHlmagKICAgICAgICAgICAgdHJ5IHsKICAgICAgICAgICAgICBhd2FpdCB0aGlzLmF4aW9zLnBvc3QoJy9hcGkvc2VydmVycycsIHRoaXMuc2VydmVyRm9ybSk7CiAgICAgICAgICAgICAgdGhpcy4kbWVzc2FnZS5zdWNjZXNzKCfmt7vliqDmnI3liqHlmajmiJDlip8nKTsKICAgICAgICAgICAgICB0aGlzLmRpYWxvZ1Zpc2libGUgPSBmYWxzZTsKICAgICAgICAgICAgICB0aGlzLmxvYWRTZXJ2ZXJzKCk7CiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgICAgICAgICAgY29uc3QgZXJyb3JNc2cgPSBlcnJvci5yZXNwb25zZSAmJiBlcnJvci5yZXNwb25zZS5kYXRhICYmIGVycm9yLnJlc3BvbnNlLmRhdGEuZXJyb3IgPyBlcnJvci5yZXNwb25zZS5kYXRhLmVycm9yIDogJ+acquefpemUmeivryc7CiAgICAgICAgICAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcihg5re75Yqg5pyN5Yqh5Zmo5aSx6LSlOiAke2Vycm9yTXNnfWApOwogICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ+a3u+WKoOacjeWKoeWZqOmUmeivrzonLCBlcnJvcik7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgICAgY29uc29sZS5lcnJvcign6KGo5Y2V6aqM6K+B6ZSZ6K+vOicsIGVycm9yKTsKICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKCfooajljZXpqozor4HlpLHotKXvvIzor7fmo4Dmn6XovpPlhaUnKTsKICAgICAgfQogICAgfSwKICAgIGFzeW5jIGRlbGV0ZVNlcnZlcihzZXJ2ZXIpIHsKICAgICAgdHJ5IHsKICAgICAgICBhd2FpdCB0aGlzLiRjb25maXJtKCfnoa7orqTliKDpmaTor6XmnI3liqHlmag/JywgJ+aPkOekuicsIHsKICAgICAgICAgIHR5cGU6ICd3YXJuaW5nJwogICAgICAgIH0pOwogICAgICAgIGF3YWl0IHRoaXMuYXhpb3MuZGVsZXRlKGAvYXBpL3NlcnZlcnMvJHtzZXJ2ZXIuaWR9YCk7CiAgICAgICAgdGhpcy4kbWVzc2FnZS5zdWNjZXNzKCfliKDpmaTmiJDlip8nKTsKICAgICAgICB0aGlzLmxvYWRTZXJ2ZXJzKCk7CiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgICAgaWYgKGVycm9yICE9PSAnY2FuY2VsJykgewogICAgICAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcign5Yig6Zmk5aSx6LSlJyk7CiAgICAgICAgfQogICAgICB9CiAgICB9LAogICAgYXN5bmMgY29ubmVjdFNlcnZlcihzZXJ2ZXIpIHsKICAgICAgdHJ5IHsKICAgICAgICBpZiAoc2VydmVyLnR5cGUgPT09ICdXaW5kb3dzJykgewogICAgICAgICAgLy8g6I635Y+W5pyN5Yqh5Zmo5a+G56CB77yI5bey5Yqg5a+G77yJCiAgICAgICAgICBjb25zdCBwYXNzd29yZFJlc3BvbnNlID0gYXdhaXQgdGhpcy5heGlvcy5nZXQoYC9hcGkvc2VydmVycy8ke3NlcnZlci5pZH0vcGFzc3dvcmRgKTsKICAgICAgICAgIGNvbnN0IGVuY3J5cHRlZFBhc3N3b3JkID0gcGFzc3dvcmRSZXNwb25zZS5kYXRhLnBhc3N3b3JkOwogICAgICAgICAgY29uc3QgaXNFbmNyeXB0ZWQgPSBwYXNzd29yZFJlc3BvbnNlLmRhdGEuZW5jcnlwdGVkIHx8IGZhbHNlOwoKICAgICAgICAgIC8vIOWPkei1tyBSRFAg6L+e5o6lCiAgICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IHRoaXMuYXhpb3MucG9zdCgnL2FwaS9yZHAvY29ubmVjdCcsIHsKICAgICAgICAgICAgc2VydmVyX2lkOiBzZXJ2ZXIuaWQsCiAgICAgICAgICAgIHVzZXJuYW1lOiBzZXJ2ZXIudXNlcm5hbWUsCiAgICAgICAgICAgIHBhc3N3b3JkOiBlbmNyeXB0ZWRQYXNzd29yZCwKICAgICAgICAgICAgaXNfZW5jcnlwdGVkOiBpc0VuY3J5cHRlZAogICAgICAgICAgfSk7CiAgICAgICAgICBpZiAocmVzcG9uc2UuZGF0YS5zdWNjZXNzKSB7CiAgICAgICAgICAgIHRoaXMuJG1lc3NhZ2Uuc3VjY2VzcygnUkRQIOi/nuaOpeivt+axguW3suWPkemAgScpOwogICAgICAgICAgfQogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAvLyBMaW51eCBTU0gg6L+e5o6lCiAgICAgICAgICBhd2FpdCB0aGlzLmNvbm5lY3RTU0goc2VydmVyKTsKICAgICAgICB9CiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcign6L+e5o6l5aSx6LSl77yaJyArIChlcnJvci5yZXNwb25zZSAmJiBlcnJvci5yZXNwb25zZS5kYXRhID8gZXJyb3IucmVzcG9uc2UuZGF0YS5lcnJvciA6IGVycm9yLm1lc3NhZ2UpKTsKICAgICAgfQogICAgfSwKICAgIGFzeW5jIGNvbm5lY3RTU0goc2VydmVyKSB7CiAgICAgIHRyeSB7CiAgICAgICAgLy8g6I635Y+W5pyN5Yqh5Zmo5a+G56CB77yI5bey5Yqg5a+G77yJCiAgICAgICAgY29uc3QgcGFzc3dvcmRSZXNwb25zZSA9IGF3YWl0IHRoaXMuYXhpb3MuZ2V0KGAvYXBpL3NlcnZlcnMvJHtzZXJ2ZXIuaWR9L3Bhc3N3b3JkYCk7CiAgICAgICAgY29uc3QgZW5jcnlwdGVkUGFzc3dvcmQgPSBwYXNzd29yZFJlc3BvbnNlLmRhdGEucGFzc3dvcmQ7CiAgICAgICAgY29uc3QgaXNFbmNyeXB0ZWQgPSBwYXNzd29yZFJlc3BvbnNlLmRhdGEuZW5jcnlwdGVkIHx8IGZhbHNlOwoKICAgICAgICAvLyDpgJrov4flkI7nq69BUEnlj5HotbdTU0jov57mjqXor7fmsYIKICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IHRoaXMuYXhpb3MucG9zdCgnL2FwaS9zc2gvY29ubmVjdCcsIHsKICAgICAgICAgIHNlcnZlcl9pZDogc2VydmVyLmlkLAogICAgICAgICAgcGFzc3dvcmQ6IGVuY3J5cHRlZFBhc3N3b3JkLAogICAgICAgICAgaXNfZW5jcnlwdGVkOiBpc0VuY3J5cHRlZAogICAgICAgIH0pOwogICAgICAgIGlmIChyZXNwb25zZS5kYXRhLnN1Y2Nlc3MpIHsKICAgICAgICAgIHRoaXMuJG1lc3NhZ2Uuc3VjY2VzcygnU1NIIOi/nuaOpeivt+axguW3suWPkemAgScpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IocmVzcG9uc2UuZGF0YS5lcnJvciB8fCAn5ZCv5YqoU1NI6L+e5o6l5aSx6LSlJyk7CiAgICAgICAgfQogICAgICB9IGNhdGNoIChlcnJvcikgewogICAgICAgIGNvbnNvbGUuZXJyb3IoJ1NTSOi/nuaOpemUmeivrzonLCBlcnJvcik7CiAgICAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcignU1NI6L+e5o6l5aSx6LSl77yaJyArIChlcnJvci5yZXNwb25zZSAmJiBlcnJvci5yZXNwb25zZS5kYXRhID8gZXJyb3IucmVzcG9uc2UuZGF0YS5lcnJvciA6IGVycm9yLm1lc3NhZ2UpKTsKICAgICAgfQogICAgfSwKICAgIGhhbmRsZU5vZGVDbGljayhkYXRhKSB7CiAgICAgIHRoaXMuc2VsZWN0ZWRDYXRlZ29yeSA9IGRhdGE7CiAgICAgIC8vIOWIh+aNouWIhuexu+aXtumHjee9ruWIhumhtQogICAgICB0aGlzLmN1cnJlbnRQYWdlID0gMTsKICAgIH0sCiAgICAvLyDmlrDlop7liIbpobXmlrnms5UKICAgIGhhbmRsZVNpemVDaGFuZ2UodmFsKSB7CiAgICAgIHRoaXMucGFnZVNpemUgPSB2YWw7CiAgICAgIHRoaXMuY3VycmVudFBhZ2UgPSAxOyAvLyDph43nva7liLDnrKzkuIDpobUKICAgIH0sCiAgICBoYW5kbGVDdXJyZW50Q2hhbmdlKHZhbCkgewogICAgICB0aGlzLmN1cnJlbnRQYWdlID0gdmFsOwogICAgfSwKICAgIC8vIOaOkuW6j+aWueazlQogICAgaGFuZGxlU29ydENoYW5nZSh7CiAgICAgIGNvbHVtbiwKICAgICAgcHJvcCwKICAgICAgb3JkZXIKICAgIH0pIHsKICAgICAgdGhpcy5zb3J0Q29sdW1uID0gcHJvcDsKICAgICAgdGhpcy5zb3J0T3JkZXIgPSBvcmRlcjsKICAgIH0sCiAgICAvLyDoh6rpgILlupTnm7jlhbPmlrnms5UKICAgIGhhbmRsZVJlc2l6ZSgpIHsKICAgICAgdGhpcy53aW5kb3dXaWR0aCA9IHdpbmRvdy5pbm5lcldpZHRoOwogICAgICB0aGlzLmlzTW9iaWxlID0gdGhpcy53aW5kb3dXaWR0aCA8IDc2ODsKCiAgICAgIC8vIOWcqOenu+WKqOiuvuWkh+S4ium7mOiupOmakOiXj+S+p+i+ueagjwogICAgICBpZiAodGhpcy5pc01vYmlsZSAmJiB0aGlzLnNob3dTaWRlYmFyKSB7CiAgICAgICAgdGhpcy5zaG93U2lkZWJhciA9IGZhbHNlOwogICAgICB9CgogICAgICAvLyDosIPmlbTooajmoLzpq5jluqYKICAgICAgdGhpcy5jYWxjdWxhdGVUYWJsZUhlaWdodCgpOwogICAgfSwKICAgIHRvZ2dsZVNpZGViYXIoKSB7CiAgICAgIHRoaXMuc2hvd1NpZGViYXIgPSAhdGhpcy5zaG93U2lkZWJhcjsKICAgIH0sCiAgICBjYWxjdWxhdGVUYWJsZUhlaWdodCgpIHsKICAgICAgLy8g6K6h566X6KGo5qC85Y+v55So6auY5bqm77yM5YeP5Y675YW25LuW5YWD57Sg77yI5YiG6aG144CB5qCH6aKY562J77yJ5Y2g55So55qE56m66Ze0CiAgICAgIC8vIOi/meS4quWAvOmcgOimgeagueaNruWunumZheW4g+WxgOiwg+aVtAogICAgICBjb25zdCBvdGhlckhlaWdodCA9IHRoaXMuaXNNb2JpbGUgPyAxMzAgOiAxNTA7CiAgICAgIHRoaXMudGFibGVNYXhIZWlnaHQgPSB3aW5kb3cuaW5uZXJIZWlnaHQgLSBvdGhlckhlaWdodDsKICAgIH0sCiAgICBoYW5kbGVDcmVkZW50aWFsQ2hhbmdlKGNyZWRlbnRpYWxJZCkgewogICAgICBpZiAoY3JlZGVudGlhbElkKSB7CiAgICAgICAgY29uc3QgY3JlZGVudGlhbCA9IHRoaXMuY3JlZGVudGlhbHMuZmluZChjID0+IGMuaWQgPT09IGNyZWRlbnRpYWxJZCk7CiAgICAgICAgaWYgKGNyZWRlbnRpYWwpIHsKICAgICAgICAgIHRoaXMuc2VsZWN0ZWRDcmVkZW50aWFsTmFtZSA9IGNyZWRlbnRpYWwubmFtZTsKICAgICAgICAgIHRoaXMuc2VsZWN0ZWRDcmVkZW50aWFsVXNlcm5hbWUgPSBjcmVkZW50aWFsLnVzZXJuYW1lOwoKICAgICAgICAgIC8vIOa4heepuueUqOaIt+WQjeWSjOWvhueggeWtl+aute+8jOWboOS4uuWwhuS9v+eUqOWHreaNrgogICAgICAgICAgdGhpcy5zZXJ2ZXJGb3JtLnVzZXJuYW1lID0gJyc7CiAgICAgICAgICB0aGlzLnNlcnZlckZvcm0ucGFzc3dvcmQgPSAnJzsKICAgICAgICB9CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy5zZWxlY3RlZENyZWRlbnRpYWxOYW1lID0gJyc7CiAgICAgICAgdGhpcy5zZWxlY3RlZENyZWRlbnRpYWxVc2VybmFtZSA9ICcnOwogICAgICB9CiAgICB9LAogICAgZ2VuZXJhdGVQYXNzd29yZCgpIHsKICAgICAgLy8g55Sf5oiQOC0xMuS9jeeahOmaj+acuuWvhuegge+8jOWMheWQq+Wkp+Wwj+WGmeWtl+avjeOAgeaVsOWtl+WSjOeJueauiuWtl+espgogICAgICBjb25zdCBjaGFycyA9ICdBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWmFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6MDEyMzQ1Njc4OSFAIyQlXiYqKClfKyc7CiAgICAgIGNvbnN0IGxlbmd0aCA9IDEyOwogICAgICBsZXQgcGFzc3dvcmQgPSAnJzsKICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBsZW5ndGg7IGkrKykgewogICAgICAgIGNvbnN0IHJhbmRvbUluZGV4ID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogY2hhcnMubGVuZ3RoKTsKICAgICAgICBwYXNzd29yZCArPSBjaGFyc1tyYW5kb21JbmRleF07CiAgICAgIH0KICAgICAgdGhpcy5zZXJ2ZXJGb3JtLnBhc3N3b3JkID0gcGFzc3dvcmQ7CgogICAgICAvLyDlvLnlh7rmj5DnpLoKICAgICAgdGhpcy4kbWVzc2FnZSh7CiAgICAgICAgbWVzc2FnZTogJ+W3sueUn+aIkOmaj+acuuWvhueggScsCiAgICAgICAgdHlwZTogJ3N1Y2Nlc3MnLAogICAgICAgIGR1cmF0aW9uOiAyMDAwCiAgICAgIH0pOwogICAgfSwKICAgIGhhbmRsZUNhdGVnb3J5Q2hhbmdlKGNhdGVnb3J5SWQpIHsKICAgICAgdGhpcy5zZXJ2ZXJGb3JtLmNhdGVnb3J5X2lkID0gY2F0ZWdvcnlJZDsKICAgIH0KICB9LAogIGNyZWF0ZWQoKSB7CiAgICB0aGlzLmxvYWRDYXRlZ29yaWVzKCk7IC8vIOWKoOi9veWIhuexu+WIl+ihqAogICAgdGhpcy5sb2FkU2VydmVycygpOwogICAgdGhpcy5sb2FkQ3JlZGVudGlhbHMoKTsKICAgIC8vIOavjzMw56eS5Yi35paw5LiA5qyh5pyN5Yqh5Zmo5YiX6KGoCiAgICB0aGlzLnJlZnJlc2hJbnRlcnZhbCA9IHNldEludGVydmFsKCgpID0+IHsKICAgICAgaWYgKHRoaXMuaXNMb2dnZWRJbikgewogICAgICAgIHRoaXMubG9hZFNlcnZlcnMoKTsKICAgICAgICB0aGlzLmxvYWRDYXRlZ29yaWVzKCk7IC8vIOWQjOaXtuWIt+aWsOWIhuexu+WIl+ihqAogICAgICB9CiAgICB9LCAzMDAwMCk7CiAgfSwKICBtb3VudGVkKCkgewogICAgLy8g55uR5ZCs56qX5Y+j5aSn5bCP5Y+Y5YyWCiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigncmVzaXplJywgdGhpcy5oYW5kbGVSZXNpemUpOwogICAgLy8g5Yid5aeL5YyW56qX5Y+j5aSn5bCPCiAgICB0aGlzLmhhbmRsZVJlc2l6ZSgpOwogIH0sCiAgYmVmb3JlRGVzdHJveSgpIHsKICAgIGlmICh0aGlzLnJlZnJlc2hJbnRlcnZhbCkgewogICAgICBjbGVhckludGVydmFsKHRoaXMucmVmcmVzaEludGVydmFsKTsKICAgIH0KICAgIGlmICh0aGlzLmhlYXJ0YmVhdFRpbWVyKSB7CiAgICAgIGNsZWFySW50ZXJ2YWwodGhpcy5oZWFydGJlYXRUaW1lcik7CiAgICB9CiAgICAvLyDnp7vpmaTnqpflj6PlpKflsI/nm5HlkKwKICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdyZXNpemUnLCB0aGlzLmhhbmRsZVJlc2l6ZSk7CiAgfQp9Ow=="},{"version":3,"names":["data","servers","dialogVisible","serverForm","name","ip","type","port","username","password","credential_id","category_id","rules","required","message","trigger","validator","rule","value","callback","Error","isEdit","activeConnections","heartbeatTimer","refreshInterval","categories","selectedCategory","categoryTree","id","label","defaultProps","children","editingServerId","currentPage","pageSize","windowWidth","isMobile","showSidebar","tableMaxHeight","sortColumn","sortOrder","credentials","selectedCredentialName","selectedCredentialUsername","searchKeyword","computed","isAdmin","$store","state","user","is_admin","isLoggedIn","filteredServers","filter","server","keyword","trim","toLowerCase","includes","paginatedServers","start","end","sortedServers","sort","a","b","aValue","bValue","localeCompare","slice","credentialOptions","methods","updateDefaultPort","loadServers","response","axios","get","error","$message","showAddDialog","showEditDialog","handleCredentialChange","loadCategories","map","category","loadCredentials","console","submitForm","valid","$refs","validate","put","success","errorMsg","post","deleteServer","$confirm","delete","connectServer","passwordResponse","encryptedPassword","isEncrypted","encrypted","server_id","is_encrypted","connectSSH","handleNodeClick","handleSizeChange","val","handleCurrentChange","handleSortChange","column","prop","order","handleResize","window","innerWidth","calculateTableHeight","toggleSidebar","otherHeight","innerHeight","credentialId","credential","find","c","generatePassword","chars","length","i","randomIndex","Math","floor","random","duration","handleCategoryChange","categoryId","created","setInterval","mounted","addEventListener","beforeDestroy","clearInterval","removeEventListener"],"sources":["src/components/ServerList.vue"],"sourcesContent":["<template>\n  <div class=\"server-list-container\">\n    <!-- 左侧分类树 -->\n    <div class=\"category-tree\" :class=\"{ 'category-tree-collapsed': isMobile && !showSidebar }\">\n      <div class=\"sidebar-toggle\" v-if=\"isMobile\" @click=\"toggleSidebar\">\n        <i :class=\"showSidebar ? 'el-icon-arrow-left' : 'el-icon-arrow-right'\"></i>\n      </div>\n      <el-tree\n        v-show=\"!isMobile || showSidebar\"\n        :data=\"categoryTree\"\n        :props=\"defaultProps\"\n        @node-click=\"handleNodeClick\"\n        default-expand-all\n        highlight-current>\n      </el-tree>\n    </div>\n\n    <!-- 右侧服务器列表 -->\n    <div class=\"server-list\">\n      <!-- 只有管理员才能看到添加服务器按钮 -->\n      <div class=\"toolbar\" v-if=\"isAdmin\">\n        <el-input\n          v-model=\"searchKeyword\"\n          placeholder=\"搜索服务器名称或IP\"\n          clearable\n          style=\"width: 260px; margin-right: 16px;\"\n          @input=\"currentPage = 1\"\n        >\n          <i slot=\"prefix\" class=\"el-icon-search\"></i>\n        </el-input>\n        <el-button type=\"primary\" @click=\"showAddDialog\">\n          <i class=\"el-icon-plus\"></i> 添加服务器\n        </el-button>\n      </div>\n\n      <el-table \n        :data=\"paginatedServers\" \n        style=\"width: 100%\"\n        :max-height=\"tableMaxHeight\"\n        @sort-change=\"handleSortChange\">\n        <el-table-column prop=\"name\" label=\"名称\" min-width=\"120\" sortable=\"custom\" />\n        <el-table-column prop=\"ip\" label=\"IP地址\" min-width=\"140\" sortable=\"custom\" />\n        <el-table-column prop=\"type\" label=\"类型\" min-width=\"100\" align=\"center\" sortable=\"custom\">\n          <template slot-scope=\"scope\">\n            <el-tag \n              :type=\"scope.row.type === 'Windows' ? 'primary' : 'success'\"\n              size=\"medium\"\n              effect=\"plain\">\n              {{ scope.row.type }}\n            </el-tag>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"状态\" min-width=\"150\" align=\"center\">\n          <template slot-scope=\"scope\">\n            <el-tag \n              v-if=\"scope.row.in_use\"\n              :type=\"scope.row.in_use_by_me ? 'warning' : 'danger'\"\n              size=\"medium\"\n              effect=\"plain\">\n              {{ scope.row.in_use_by_me ? '我正在使用中' : `${scope.row.in_use_by_username} 正在使用中` }}\n            </el-tag>\n            <el-tag \n              v-else \n              type=\"success\"\n              size=\"medium\"\n              effect=\"plain\">\n              空闲\n            </el-tag>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"操作\" min-width=\"280\" align=\"center\">\n          <template slot-scope=\"scope\">\n            <div class=\"action-buttons\">\n              <el-button \n                type=\"primary\" \n                size=\"mini\" \n                @click=\"connectServer(scope.row)\"\n                :disabled=\"scope.row.in_use && !scope.row.in_use_by_me\"\n                :type=\"scope.row.type === 'Windows' ? 'primary' : 'success'\"\n                plain>\n                <i :class=\"scope.row.type === 'Windows' ? 'el-icon-monitor' : 'el-icon-terminal'\"></i>\n                {{ scope.row.type === 'Windows' ? 'RDP连接' : 'SSH连接' }}\n              </el-button>\n              <el-button\n                v-if=\"isAdmin\"\n                type=\"warning\"\n                size=\"mini\"\n                @click=\"showEditDialog(scope.row)\"\n                plain>\n                <i class=\"el-icon-edit\"></i>\n                编辑\n              </el-button>\n              <el-button\n                v-if=\"isAdmin\"\n                type=\"danger\"\n                size=\"mini\"\n                @click=\"deleteServer(scope.row)\"\n                plain>\n                <i class=\"el-icon-delete\"></i>\n                删除\n              </el-button>\n            </div>\n          </template>\n        </el-table-column>\n      </el-table>\n\n      <!-- 分页组件 -->\n      <div class=\"pagination-container\">\n        <el-pagination\n          @size-change=\"handleSizeChange\"\n          @current-change=\"handleCurrentChange\"\n          :current-page=\"currentPage\"\n          :page-sizes=\"[8, 10, 20, 50, 100]\"\n          :page-size=\"pageSize\"\n          layout=\"total, sizes, prev, pager, next, jumper\"\n          :total=\"filteredServers.length\">\n        </el-pagination>\n      </div>\n\n      <!-- 添加/编辑服务器对话框 -->\n      <el-dialog \n        :title=\"isEdit ? '编辑服务器' : '添加服务器'\" \n        :visible.sync=\"dialogVisible\" \n        :width=\"isMobile ? '95%' : '600px'\"\n        custom-class=\"server-dialog\"\n        :close-on-click-modal=\"false\">\n        <el-form \n          :model=\"serverForm\" \n          ref=\"serverForm\" \n          :rules=\"rules\"\n          :label-width=\"isMobile ? '70px' : '80px'\"\n          class=\"server-form\">\n          <div class=\"form-row\" :class=\"{ 'form-row-mobile': isMobile }\">\n            <el-form-item label=\"名称\" prop=\"name\" class=\"form-item\">\n              <el-input v-model=\"serverForm.name\" placeholder=\"请输入服务器名称\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"IP地址\" prop=\"ip\" class=\"form-item\">\n              <el-input v-model=\"serverForm.ip\" placeholder=\"请输入IP地址\"></el-input>\n            </el-form-item>\n          </div>\n          <div class=\"form-row\" :class=\"{ 'form-row-mobile': isMobile }\">\n            <el-form-item label=\"类型\" prop=\"type\" class=\"form-item\">\n              <el-select v-model=\"serverForm.type\" placeholder=\"请选择服务器类型\" style=\"width: 100%\" @change=\"updateDefaultPort\">\n                <el-option label=\"Windows\" value=\"Windows\"></el-option>\n                <el-option label=\"Linux\" value=\"Linux\"></el-option>\n              </el-select>\n            </el-form-item>\n            <el-form-item label=\"端口\" prop=\"port\" class=\"form-item\">\n              <el-input v-model.number=\"serverForm.port\" type=\"number\" placeholder=\"请输入端口号\"></el-input>\n            </el-form-item>\n          </div>\n          <el-form-item label=\"凭据\" prop=\"credential_id\">\n            <el-select \n              v-model=\"serverForm.credential_id\" \n              placeholder=\"选择预设凭据\" \n              style=\"width: 100%\"\n              @change=\"handleCredentialChange\"\n              clearable>\n              <el-option \n                v-for=\"item in credentialOptions\" \n                :key=\"item.id\" \n                :label=\"item.name\" \n                :value=\"item.id\">\n                <span style=\"float: left\">{{ item.name }}</span>\n                <span style=\"float: right; color: #8492a6; font-size: 13px\">{{ item.username }}</span>\n              </el-option>\n            </el-select>\n            <div class=\"form-tip\">选择预设凭据后，用户名和密码将自动填充</div>\n          </el-form-item>\n          \n          <div class=\"form-credentials\" v-if=\"!serverForm.credential_id\">\n            <div class=\"form-row\" :class=\"{ 'form-row-mobile': isMobile }\">\n              <el-form-item label=\"用户名\" prop=\"username\" class=\"form-item\">\n                <el-input v-model=\"serverForm.username\" placeholder=\"请输入用户名\"></el-input>\n              </el-form-item>\n              <el-form-item :label=\"isEdit ? '新密码' : '密码'\" prop=\"password\" class=\"form-item\">\n                <el-input \n                  type=\"password\" \n                  v-model=\"serverForm.password\" \n                  placeholder=\"请输入密码\"\n                  show-password>\n                  <template slot=\"append\">\n                    <el-button @click=\"generatePassword\" type=\"text\">生成</el-button>\n                  </template>\n                </el-input>\n                <div class=\"form-tip\" v-if=\"isEdit\">留空表示不修改密码</div>\n              </el-form-item>\n            </div>\n          </div>\n          <div class=\"form-credentials\" v-else>\n            <div class=\"credential-info\">\n              <el-alert\n                title=\"使用预设凭据\"\n                type=\"info\"\n                :closable=\"false\">\n                <div>当前选择的预设凭据：<b>{{ selectedCredentialName }}</b></div>\n                <div>用户名：{{ selectedCredentialUsername }}</div>\n              </el-alert>\n            </div>\n          </div>\n\n          <el-form-item label=\"分类\" prop=\"category_id\">\n            <el-select \n              v-model=\"serverForm.category_id\" \n              placeholder=\"选择分类\" \n              style=\"width: 100%\"\n              @change=\"handleCategoryChange\">\n              <el-option \n                v-for=\"item in categories\" \n                :key=\"item.id\" \n                :label=\"item.name\" \n                :value=\"item.id\">\n              </el-option>\n            </el-select>\n          </el-form-item>\n        </el-form>\n        <div slot=\"footer\" class=\"dialog-footer\">\n          <el-button @click=\"dialogVisible = false\">取 消</el-button>\n          <el-button type=\"primary\" @click=\"submitForm\">确 定</el-button>\n        </div>\n      </el-dialog>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      servers: [],\n      dialogVisible: false,\n      serverForm: {\n        name: '',\n        ip: '',\n        type: 'Windows',\n        port: 3389,\n        username: '',\n        password: '',\n        credential_id: null,\n        category_id: null\n      },\n      rules: {\n        name: [{ required: true, message: '请输入服务器名称', trigger: 'blur' }],\n        ip: [{ required: true, message: '请输入IP地址', trigger: 'blur' }],\n        type: [{ required: true, message: '请选择服务器类型', trigger: 'change' }],\n        port: [\n          { required: true, message: '请输入端口号', trigger: 'blur' },\n          { type: 'number', message: '端口必须为数字', trigger: 'blur' },\n          { validator: (rule, value, callback) => {\n              if (value < 1 || value > 65535) {\n                callback(new Error('端口号必须在1-65535之间'));\n              } else {\n                callback();\n              }\n            }, \n            trigger: 'blur' \n          }\n        ],\n        username: [{ required: true, message: '请输入用户名', trigger: 'blur' }],\n        password: [{ \n          validator: (rule, value, callback) => {\n            if (!this.isEdit && !value) {\n              callback(new Error('请输入密码'));\n            } else {\n              callback();\n            }\n          },\n          trigger: 'blur' \n        }]\n      },\n      activeConnections: {},  // 存储活动连接的 token\n      heartbeatTimer: null,\n      refreshInterval: null,\n      categories: [],\n      selectedCategory: null,\n      categoryTree: [{\n        id: 'all',\n        label: '全部服务器'\n      }],\n      defaultProps: {\n        children: 'children',\n        label: 'label'\n      },\n      isEdit: false,\n      editingServerId: null,\n      // 新增分页相关\n      currentPage: 1,\n      pageSize: 8,\n      // 自适应相关\n      windowWidth: 0,\n      isMobile: false,\n      showSidebar: true,\n      tableMaxHeight: 500,\n      // 排序相关\n      sortColumn: null,\n      sortOrder: null,\n      // 凭据相关\n      credentials: [],\n      selectedCredentialName: '',\n      selectedCredentialUsername: '',\n      // 搜索关键字\n      searchKeyword: ''\n    }\n  },\n\n  computed: {\n    isAdmin() {\n      return this.$store.state.user && this.$store.state.user.is_admin;\n    },\n    isLoggedIn() {\n      return this.$store.state.user !== null;\n    },\n    filteredServers() {\n      let servers = [];\n      if (!this.selectedCategory || this.selectedCategory.id === 'all') {\n        servers = this.servers;\n      } else {\n        servers = this.servers.filter(server => server.category_id === this.selectedCategory.id);\n      }\n      if (this.searchKeyword) {\n        const keyword = this.searchKeyword.trim().toLowerCase();\n        servers = servers.filter(server =>\n          (server.name && server.name.toLowerCase().includes(keyword)) ||\n          (server.ip && server.ip.toLowerCase().includes(keyword))\n        );\n      }\n      return servers;\n    },\n    // 添加分页计算属性\n    paginatedServers() {\n      const start = (this.currentPage - 1) * this.pageSize;\n      const end = start + this.pageSize;\n      \n      // 对筛选后的服务器进行排序\n      let sortedServers = [...this.filteredServers];\n      if (this.sortColumn && this.sortOrder) {\n        sortedServers.sort((a, b) => {\n          const aValue = a[this.sortColumn];\n          const bValue = b[this.sortColumn];\n          \n          if (typeof aValue === 'string') {\n            if (this.sortOrder === 'ascending') {\n              return aValue.localeCompare(bValue);\n            } else {\n              return bValue.localeCompare(aValue);\n            }\n          } else {\n            if (this.sortOrder === 'ascending') {\n              return aValue - bValue;\n            } else {\n              return bValue - aValue;\n            }\n          }\n        });\n      }\n      \n      return sortedServers.slice(start, end);\n    },\n    credentialOptions() {\n      return this.credentials;\n    }\n  },\n\n  methods: {\n    updateDefaultPort() {\n      // 根据服务器类型更新默认端口\n      if (this.serverForm.type === 'Windows') {\n        this.serverForm.port = 3389;\n      } else if (this.serverForm.type === 'Linux') {\n        this.serverForm.port = 22;\n      }\n    },\n    \n    async loadServers() {\n      // 如果未登录，不加载服务器列表\n      if (!this.isLoggedIn) {\n        return;\n      }\n      \n      try {\n        const response = await this.axios.get('/api/servers');\n        this.servers = response.data;\n      } catch (error) {\n        // 只在登录状态下显示错误消息\n        if (this.isLoggedIn) {\n          this.$message.error('获取服务器列表失败');\n        }\n      }\n    },\n\n    showAddDialog() {\n      this.isEdit = false;\n      this.editingServerId = null;\n      this.dialogVisible = true;\n      this.serverForm = {\n        name: '',\n        ip: '',\n        type: 'Windows',\n        port: 3389, // 默认为Windows RDP端口\n        username: '',\n        password: '',\n        credential_id: null,\n        category_id: null\n      };\n      this.selectedCredentialName = '';\n      this.selectedCredentialUsername = '';\n    },\n\n    showEditDialog(server) {\n      this.isEdit = true;\n      this.editingServerId = server.id;\n      this.dialogVisible = true;\n      this.serverForm = {\n        name: server.name,\n        ip: server.ip,\n        type: server.type,\n        port: server.port || (server.type === 'Windows' ? 3389 : 22), // 根据类型设置默认端口\n        username: server.username,\n        password: '', // 编辑时密码为空\n        credential_id: server.credential_id || null,\n        category_id: server.category_id || null\n      };\n      \n      if (server.credential_id) {\n        this.handleCredentialChange(server.credential_id);\n      } else {\n        this.selectedCredentialName = '';\n        this.selectedCredentialUsername = '';\n      }\n    },\n\n    async loadCategories() {\n      try {\n        const response = await this.axios.get('/api/categories');\n        this.categories = response.data;\n        // 更新分类树\n        this.categoryTree = [{\n          id: 'all',\n          label: '全部服务器'\n        }, ...this.categories.map(category => ({\n          id: category.id,\n          label: category.name\n        }))];\n      } catch (error) {\n        this.$message.error('获取分类列表失败');\n      }\n    },\n\n    async loadCredentials() {\n      try {\n        const response = await this.axios.get('/api/credentials');\n        this.credentials = response.data;\n      } catch (error) {\n        console.error('获取凭据列表失败', error);\n      }\n    },\n\n    async submitForm() {\n      try {\n        const valid = await this.$refs.serverForm.validate();\n        if (valid) {\n          if (this.isEdit) {\n            // 更新服务器\n            try {\n              const response = await this.axios.put(`/api/servers/${this.editingServerId}`, this.serverForm);\n              if (response.data) {\n                this.$message.success('更新服务器成功');\n                this.dialogVisible = false;\n                this.loadServers();\n              }\n            } catch (error) {\n              const errorMsg = error.response && error.response.data && error.response.data.error \n                ? error.response.data.error \n                : '未知错误';\n              this.$message.error(`更新服务器失败: ${errorMsg}`);\n              console.error('更新服务器错误:', error);\n            }\n          } else {\n            // 添加服务器\n            try {\n              await this.axios.post('/api/servers', this.serverForm);\n              this.$message.success('添加服务器成功');\n              this.dialogVisible = false;\n              this.loadServers();\n            } catch (error) {\n              const errorMsg = error.response && error.response.data && error.response.data.error \n                ? error.response.data.error \n                : '未知错误';\n              this.$message.error(`添加服务器失败: ${errorMsg}`);\n              console.error('添加服务器错误:', error);\n            }\n          }\n        }\n      } catch (error) {\n        console.error('表单验证错误:', error);\n        this.$message.error('表单验证失败，请检查输入');\n      }\n    },\n\n    async deleteServer(server) {\n      try {\n        await this.$confirm('确认删除该服务器?', '提示', {\n          type: 'warning'\n        });\n        await this.axios.delete(`/api/servers/${server.id}`);\n        this.$message.success('删除成功');\n        this.loadServers();\n      } catch (error) {\n        if (error !== 'cancel') {\n          this.$message.error('删除失败');\n        }\n      }\n    },\n\n    async connectServer(server) {\n      try {\n        if (server.type === 'Windows') {\n          // 获取服务器密码（已加密）\n          const passwordResponse = await this.axios.get(`/api/servers/${server.id}/password`);\n          const encryptedPassword = passwordResponse.data.password;\n          const isEncrypted = passwordResponse.data.encrypted || false;\n\n          // 发起 RDP 连接\n          const response = await this.axios.post('/api/rdp/connect', {\n            server_id: server.id,\n            username: server.username,\n            password: encryptedPassword,\n            is_encrypted: isEncrypted\n          });\n\n          if (response.data.success) {\n            this.$message.success('RDP 连接请求已发送');\n          }\n        } else {\n          // Linux SSH 连接\n          await this.connectSSH(server);\n        }\n      } catch (error) {\n        this.$message.error('连接失败：' + (error.response && error.response.data ? error.response.data.error : error.message));\n      }\n    },\n\n    async connectSSH(server) {\n      try {\n        // 获取服务器密码（已加密）\n        const passwordResponse = await this.axios.get(`/api/servers/${server.id}/password`);\n        const encryptedPassword = passwordResponse.data.password;\n        const isEncrypted = passwordResponse.data.encrypted || false;\n        \n        // 通过后端API发起SSH连接请求\n        const response = await this.axios.post('/api/ssh/connect', {\n          server_id: server.id,\n          password: encryptedPassword,\n          is_encrypted: isEncrypted\n        });\n        \n        if (response.data.success) {\n          this.$message.success('SSH 连接请求已发送');\n        } else {\n          throw new Error(response.data.error || '启动SSH连接失败');\n        }\n      } catch (error) {\n        console.error('SSH连接错误:', error);\n        this.$message.error('SSH连接失败：' + (error.response && error.response.data ? error.response.data.error : error.message));\n      }\n    },\n\n    handleNodeClick(data) {\n      this.selectedCategory = data;\n      // 切换分类时重置分页\n      this.currentPage = 1;\n    },\n\n    // 新增分页方法\n    handleSizeChange(val) {\n      this.pageSize = val;\n      this.currentPage = 1; // 重置到第一页\n    },\n\n    handleCurrentChange(val) {\n      this.currentPage = val;\n    },\n    \n    // 排序方法\n    handleSortChange({ column, prop, order }) {\n      this.sortColumn = prop;\n      this.sortOrder = order;\n    },\n\n    // 自适应相关方法\n    handleResize() {\n      this.windowWidth = window.innerWidth;\n      this.isMobile = this.windowWidth < 768;\n      \n      // 在移动设备上默认隐藏侧边栏\n      if (this.isMobile && this.showSidebar) {\n        this.showSidebar = false;\n      }\n      \n      // 调整表格高度\n      this.calculateTableHeight();\n    },\n\n    toggleSidebar() {\n      this.showSidebar = !this.showSidebar;\n    },\n    \n    calculateTableHeight() {\n      // 计算表格可用高度，减去其他元素（分页、标题等）占用的空间\n      // 这个值需要根据实际布局调整\n      const otherHeight = this.isMobile ? 130 : 150;\n      this.tableMaxHeight = window.innerHeight - otherHeight;\n    },\n\n    handleCredentialChange(credentialId) {\n      if (credentialId) {\n        const credential = this.credentials.find(c => c.id === credentialId);\n        if (credential) {\n          this.selectedCredentialName = credential.name;\n          this.selectedCredentialUsername = credential.username;\n          \n          // 清空用户名和密码字段，因为将使用凭据\n          this.serverForm.username = '';\n          this.serverForm.password = '';\n        }\n      } else {\n        this.selectedCredentialName = '';\n        this.selectedCredentialUsername = '';\n      }\n    },\n    \n    generatePassword() {\n      // 生成8-12位的随机密码，包含大小写字母、数字和特殊字符\n      const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*()_+';\n      const length = 12;\n      let password = '';\n      \n      for (let i = 0; i < length; i++) {\n        const randomIndex = Math.floor(Math.random() * chars.length);\n        password += chars[randomIndex];\n      }\n      \n      this.serverForm.password = password;\n      \n      // 弹出提示\n      this.$message({\n        message: '已生成随机密码',\n        type: 'success',\n        duration: 2000\n      });\n    },\n\n    handleCategoryChange(categoryId) {\n      this.serverForm.category_id = categoryId;\n    }\n  },\n\n  created() {\n    this.loadCategories();  // 加载分类列表\n    this.loadServers();\n    this.loadCredentials();\n    // 每30秒刷新一次服务器列表\n    this.refreshInterval = setInterval(() => {\n      if (this.isLoggedIn) {\n        this.loadServers();\n        this.loadCategories();  // 同时刷新分类列表\n      }\n    }, 30000);\n  },\n\n  mounted() {\n    // 监听窗口大小变化\n    window.addEventListener('resize', this.handleResize);\n    // 初始化窗口大小\n    this.handleResize();\n  },\n\n  beforeDestroy() {\n    if (this.refreshInterval) {\n      clearInterval(this.refreshInterval);\n    }\n    if (this.heartbeatTimer) {\n      clearInterval(this.heartbeatTimer);\n    }\n    // 移除窗口大小监听\n    window.removeEventListener('resize', this.handleResize);\n  }\n}\n</script>\n\n<style scoped>\n.server-list-container {\n  display: flex;\n  height: 100%;\n  padding: 20px;\n  gap: 20px;\n}\n\n.category-tree {\n  width: 250px;\n  background-color: #fff;\n  border-radius: 4px;\n  padding: 20px;\n  box-shadow: 0 2px 12px 0 rgba(0,0,0,0.1);\n  transition: all 0.3s;\n  position: relative;\n}\n\n.category-tree-collapsed {\n  width: 50px;\n  padding: 20px 10px;\n}\n\n.sidebar-toggle {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  width: 30px;\n  height: 30px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  background-color: #f5f7fa;\n  border-radius: 50%;\n  z-index: 2;\n}\n\n.server-list {\n  flex: 1;\n  background-color: #fff;\n  border-radius: 4px;\n  padding: 20px;\n  box-shadow: 0 2px 12px 0 rgba(0,0,0,0.1);\n  overflow: auto;\n}\n\n.toolbar {\n  margin-bottom: 20px;\n}\n\n.terminal {\n  height: 100%;\n  background: #000;\n}\n\n/* 添加服务器对话框样式 */\n.server-dialog {\n  border-radius: 8px;\n}\n\n.server-form {\n  padding: 20px 20px 0;\n}\n\n.form-row {\n  display: flex;\n  justify-content: space-between;\n  gap: 20px;\n  margin-bottom: 22px;\n}\n\n/* 移动端表单样式 */\n.form-row-mobile {\n  flex-direction: column;\n  gap: 0;\n}\n\n.form-item {\n  flex: 1;\n  margin-bottom: 0;\n}\n\n.dialog-footer {\n  text-align: right;\n  padding: 10px 20px;\n  border-top: 1px solid #eee;\n}\n\n/* 分页容器样式 */\n.pagination-container {\n  margin-top: 20px;\n  display: flex;\n  justify-content: flex-end;\n}\n\n/* 操作按钮容器 */\n.action-buttons {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 5px;\n}\n\n:deep(.el-dialog__body) {\n  padding: 0;\n}\n\n:deep(.el-dialog__header) {\n  padding: 20px;\n  border-bottom: 1px solid #eee;\n}\n\n:deep(.el-dialog__title) {\n  font-size: 18px;\n  font-weight: 500;\n}\n\n:deep(.el-form-item__label) {\n  font-weight: 500;\n}\n\n:deep(.el-input__inner) {\n  border-radius: 4px;\n}\n\n/* 表格样式优化 */\n:deep(.el-table) {\n  border-radius: 8px;\n  overflow: hidden;\n}\n\n:deep(.el-table th) {\n  background-color: #f5f7fa !important;\n  color: #606266;\n  font-weight: 600;\n  height: 50px;\n  padding: 8px 0;\n}\n\n:deep(.el-table td) {\n  padding: 12px 0;\n}\n\n:deep(.el-table--enable-row-hover .el-table__body tr:hover > td) {\n  background-color: #f5f7fa;\n}\n\n/* 标签样式优化 */\n:deep(.el-tag) {\n  border-radius: 4px;\n  padding: 0 12px;\n  height: 28px;\n  line-height: 26px;\n  font-size: 13px;\n}\n\n/* 按钮样式优化 */\n:deep(.el-button--mini) {\n  padding: 7px 12px;\n  font-size: 12px;\n  border-radius: 4px;\n}\n\n:deep(.el-button--mini i) {\n  margin-right: 4px;\n  font-size: 14px;\n}\n\n/* 分类树样式优化 */\n:deep(.el-tree) {\n  background: none;\n  color: #606266;\n}\n\n:deep(.el-tree-node__content) {\n  height: 40px;\n  border-radius: 4px;\n}\n\n:deep(.el-tree-node__content:hover) {\n  background-color: #f5f7fa;\n}\n\n:deep(.el-tree-node.is-current > .el-tree-node__content) {\n  background-color: #ecf5ff;\n  color: #409EFF;\n}\n\n/* 工具栏样式 */\n.toolbar {\n  margin-bottom: 20px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.toolbar .el-button {\n  padding: 10px 20px;\n  font-size: 14px;\n  border-radius: 4px;\n  display: flex;\n  align-items: center;\n}\n\n.toolbar .el-button i {\n  margin-right: 6px;\n  font-size: 16px;\n}\n\n/* 移动端响应式样式 */\n@media screen and (max-width: 768px) {\n  .server-list-container {\n    flex-direction: column;\n    padding: 10px;\n  }\n  \n  .category-tree {\n    width: 100%;\n    max-height: 300px;\n    overflow-y: auto;\n    margin-bottom: 10px;\n  }\n  \n  .server-list {\n    padding: 15px;\n  }\n  \n  .toolbar {\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 10px;\n  }\n  \n  .form-row {\n    flex-direction: column;\n    gap: 0;\n  }\n  \n  .el-form-item {\n    margin-bottom: 18px;\n  }\n  \n  :deep(.el-pagination) {\n    padding: 0;\n    justify-content: center;\n    flex-wrap: wrap;\n    gap: 5px;\n  }\n}\n\n.form-tip {\n  font-size: 12px;\n  color: #909399;\n  margin-top: 5px;\n}\n\n.credential-info {\n  margin-bottom: 15px;\n}\n</style>"],"mappings":"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","ignoreList":[]}]}