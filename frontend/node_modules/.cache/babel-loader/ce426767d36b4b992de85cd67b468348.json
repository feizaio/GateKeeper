{"remainingRequest":"D:\\gatekeeper\\frontend\\node_modules\\babel-loader\\lib\\index.js!D:\\gatekeeper\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\gatekeeper\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\gatekeeper\\frontend\\src\\components\\TaskManager.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\gatekeeper\\frontend\\src\\components\\TaskManager.vue","mtime":1753341336500},{"path":"D:\\gatekeeper\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1747724956321},{"path":"D:\\gatekeeper\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1747724958365},{"path":"D:\\gatekeeper\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1747724956321},{"path":"D:\\gatekeeper\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1747724959585}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["axios","name","data","tasks","loading","searchQuery","currentPage","pageSize","totalTasks","totalFilteredTasks","taskViews","viewFilter","dialogVisible","dialogTitle","isEdit","taskForm","task_type","description","is_enabled","view_id","jenkins_url","jenkins_job_name","jenkins_username","jenkins_api_token","jenkins_parameters","script_type","script_content","command","formRules","required","message","trigger","min","max","saveLoading","jenkinsJobs","loadingJenkinsJobs","loadingJobParameters","deleteDialogVisible","taskToDelete","deleteLoading","jenkinsParams","paramsDialogVisible","executionParams","jobParameters","currentTask","executeLoading","statusFilter","taskPermissions","watch","taskForm.jenkins_job_name","newVal","oldVal","onJenkinsJobSelected","computed","filteredTasks","start","end","slice","filtered","filter","task","query","toLowerCase","includes","getTaskTypeLabel","length","totalTasksCount","currentUser","$store","state","user","created","loadTasks","loadTaskPermissions","loadTaskViews","$route","parseInt","methods","response","get","error","$message","addParam","push","value","removeParam","index","splice","paramsToObject","result","forEach","param","trim","paramsToArray","paramsObj","Object","keys","key","showAddDialog","editTask","id","saveTask","$refs","validate","valid","put","findIndex","t","$set","success","post","resetForm","resetFields","confirmDelete","deleteTask","delete","executeTask","params","url","username","api_token","job_name","Array","isArray","defaultParams","default_value","type","choices","confirmExecute","console","cancelExecute","parameters","undefined","headers","$router","execution_id","loadJenkinsJobs","warning","map","job","folder","jobName","handleStatusChange","handleSizeChange","val","handleCurrentChange","formatDate","dateString","date","Date","utcTime","getTime","beijingTime","toLocaleString","year","month","day","hour","minute","second","hour12","types","getTaskTypeTag","permissions","perm","task_id","can_view","can_execute","can_terminate","can_delete","getViewName","viewId","view","find","v","canView","is_admin","user_id","canEdit","canExecute","canDelete","tableRowClassName","row","rowIndex","handleFilterChange","log"],"sources":["src/components/TaskManager.vue"],"sourcesContent":["<template>\n  <div class=\"task-manager\">\n    <div class=\"page-header\">\n      <div class=\"header-left\">\n        <h2 class=\"page-title\">任务管理</h2>\n        <div class=\"page-description\">管理和执行自动化任务，包括Jenkins任务</div>\n      </div>\n      <div class=\"header-right\" v-if=\"currentUser.is_admin\">\n        <el-button type=\"primary\" icon=\"el-icon-plus\" @click=\"showAddDialog\">添加任务</el-button>\n      </div>\n    </div>\n\n    <!-- 工具栏 -->\n    <div class=\"actions-toolbar\">\n      <div class=\"toolbar-left\">\n        <el-radio-group v-model=\"statusFilter\" size=\"small\" @change=\"handleFilterChange\">\n          <el-radio-button label=\"all\">全部</el-radio-button>\n          <el-radio-button label=\"enabled\">已启用</el-radio-button>\n          <el-radio-button label=\"disabled\">已禁用</el-radio-button>\n        </el-radio-group>\n        \n        <el-select \n          v-model=\"viewFilter\" \n          placeholder=\"选择视图\" \n          size=\"small\" \n          @change=\"handleFilterChange\"\n          clearable\n          class=\"view-filter\"\n        >\n          <el-option label=\"全部视图\" value=\"all\"></el-option>\n          <el-option label=\"未分类\" value=\"none\"></el-option>\n          <el-option\n            v-for=\"view in taskViews\"\n            :key=\"view.id\"\n            :label=\"view.name\"\n            :value=\"view.id\"\n          ></el-option>\n        </el-select>\n        \n        <el-button \n          type=\"text\" \n          icon=\"el-icon-s-operation\" \n          @click=\"$router.push('/system/task-views')\"\n          class=\"manage-views-btn\"\n        >\n          管理视图\n        </el-button>\n      </div>\n      <div class=\"toolbar-right\">\n        <el-input\n          placeholder=\"搜索任务\"\n          v-model=\"searchQuery\"\n          class=\"search-input\"\n          prefix-icon=\"el-icon-search\"\n          clearable\n          size=\"small\"\n        ></el-input>\n      </div>\n    </div>\n    \n    <!-- 任务列表 -->\n    <el-table\n      :data=\"filteredTasks\"\n      style=\"width: 100%\"\n      v-loading=\"loading\"\n      border\n      stripe\n      :default-sort=\"{prop: 'updated_at', order: 'descending'}\"\n      :row-class-name=\"tableRowClassName\"\n      highlight-current-row\n    >\n      <el-table-column prop=\"name\" label=\"任务名称\" min-width=\"110\">\n        <template slot-scope=\"scope\">\n          <router-link :to=\"`/system/task-detail/${scope.row.id}`\" class=\"task-name-link\">\n            {{ scope.row.name }}\n          </router-link>\n        </template>\n      </el-table-column>\n      <el-table-column prop=\"view_id\" label=\"所属视图\" width=\"180\" align=\"center\">\n        <template slot-scope=\"scope\">\n          <el-tag v-if=\"scope.row.view_id\" type=\"success\" size=\"medium\">\n            {{ getViewName(scope.row.view_id) }}\n          </el-tag>\n          <span v-else class=\"no-data-text\">未分类</span>\n        </template>\n      </el-table-column>\n      <el-table-column prop=\"task_type\" label=\"类型\" width=\"120\" align=\"center\">\n        <template slot-scope=\"scope\">\n          <el-tag :type=\"getTaskTypeTag(scope.row.task_type)\" size=\"medium\">\n            {{ getTaskTypeLabel(scope.row.task_type) }}\n          </el-tag>\n        </template>\n      </el-table-column>\n      <el-table-column prop=\"description\" label=\"描述\" min-width=\"180\">\n        <template slot-scope=\"scope\">\n          <span class=\"description-text\">{{ scope.row.description || '无描述' }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"状态\" width=\"80\" align=\"center\">\n        <template slot-scope=\"scope\">\n          <el-switch\n            v-model=\"scope.row.is_enabled\"\n            active-color=\"#13ce66\"\n            inactive-color=\"#ff4949\"\n            :disabled=\"!canEdit(scope.row)\"\n            @change=\"handleStatusChange(scope.row)\"\n          ></el-switch>\n        </template>\n      </el-table-column>\n      <el-table-column prop=\"updated_at\" label=\"更新时间\" width=\"160\" sortable align=\"center\">\n        <template slot-scope=\"scope\">\n          {{ formatDate(scope.row.updated_at) }}\n        </template>\n      </el-table-column>\n      <el-table-column prop=\"last_success_time\" label=\"上次成功时间\" width=\"160\" sortable align=\"center\">\n        <template slot-scope=\"scope\">\n          <span v-if=\"scope.row.last_success_time\">{{ formatDate(scope.row.last_success_time) }}</span>\n          <span v-else class=\"no-data-text\">暂无成功记录</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"操作\" width=\"180\" fixed=\"right\" align=\"center\">\n        <template slot-scope=\"scope\">\n          <div class=\"action-buttons\">\n            <!-- 查看详情按钮 - 所有人可见 -->\n            <el-tooltip content=\"查看详情\" placement=\"top\">\n              <el-button\n                size=\"mini\"\n                type=\"info\"\n                icon=\"el-icon-view\"\n                circle\n                @click=\"$router.push(`/system/task-detail/${scope.row.id}`)\"\n              ></el-button>\n            </el-tooltip>\n            \n            <!-- 执行任务按钮 - 需要执行权限 -->\n            <el-tooltip content=\"执行任务\" placement=\"top\" :disabled=\"!canExecute(scope.row) || !scope.row.is_enabled\">\n              <el-button\n                size=\"mini\"\n                type=\"primary\"\n                icon=\"el-icon-video-play\"\n                circle\n                @click=\"executeTask(scope.row)\"\n                :disabled=\"!canExecute(scope.row) || !scope.row.is_enabled\"\n                v-if=\"canExecute(scope.row)\"\n              ></el-button>\n            </el-tooltip>\n            \n            <!-- 编辑任务按钮 - 需要编辑权限 -->\n            <el-tooltip content=\"编辑任务\" placement=\"top\" v-if=\"canEdit(scope.row)\">\n              <el-button\n                size=\"mini\"\n                type=\"warning\"\n                icon=\"el-icon-edit\"\n                circle\n                @click=\"editTask(scope.row)\"\n              ></el-button>\n            </el-tooltip>\n            \n            <!-- 删除任务按钮 - 需要删除权限 -->\n            <el-tooltip content=\"删除任务\" placement=\"top\" v-if=\"canDelete(scope.row)\">\n              <el-button\n                size=\"mini\"\n                type=\"danger\"\n                icon=\"el-icon-delete\"\n                circle\n                @click=\"confirmDelete(scope.row)\"\n              ></el-button>\n            </el-tooltip>\n          </div>\n        </template>\n      </el-table-column>\n    </el-table>\n    \n    <!-- 分页 -->\n    <div class=\"pagination-container\">\n      <el-pagination\n        @size-change=\"handleSizeChange\"\n        @current-change=\"handleCurrentChange\"\n        :current-page=\"currentPage\"\n        :page-sizes=\"[10, 20, 50, 100]\"\n        :page-size=\"pageSize\"\n        layout=\"total, sizes, prev, pager, next, jumper\"\n        :total=\"totalTasksCount\"\n        background\n      ></el-pagination>\n    </div>\n    \n    <!-- 添加/编辑任务对话框 -->\n    <el-dialog\n      :title=\"dialogTitle\"\n      :visible.sync=\"dialogVisible\"\n      width=\"50%\"\n      @closed=\"resetForm\"\n    >\n      <el-form :model=\"taskForm\" :rules=\"formRules\" ref=\"taskForm\" label-width=\"100px\">\n        <el-form-item label=\"任务名称\" prop=\"name\">\n          <el-input v-model=\"taskForm.name\" placeholder=\"请输入任务名称\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"任务类型\" prop=\"task_type\">\n          <el-select v-model=\"taskForm.task_type\" placeholder=\"请选择任务类型\" style=\"width: 100%\">\n            <el-option label=\"Jenkins任务\" value=\"jenkins\"></el-option>\n            <el-option label=\"脚本任务\" value=\"script\"></el-option>\n            <el-option label=\"命令任务\" value=\"command\"></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"描述\">\n          <el-input type=\"textarea\" v-model=\"taskForm.description\" placeholder=\"请输入任务描述\"></el-input>\n        </el-form-item>\n        \n        <el-form-item label=\"所属视图\">\n          <el-select v-model=\"taskForm.view_id\" placeholder=\"选择视图\" clearable style=\"width: 100%\">\n            <el-option label=\"无视图\" :value=\"null\"></el-option>\n            <el-option\n              v-for=\"view in taskViews\"\n              :key=\"view.id\"\n              :label=\"view.name\"\n              :value=\"view.id\"\n            ></el-option>\n          </el-select>\n        </el-form-item>\n        \n        <!-- Jenkins任务特有字段 -->\n        <template v-if=\"taskForm.task_type === 'jenkins'\">\n          <el-form-item label=\"Jenkins URL\" prop=\"jenkins_url\">\n            <el-input v-model=\"taskForm.jenkins_url\" placeholder=\"例如: http://jenkins.example.com:8080\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"任务名称\" prop=\"jenkins_job_name\">\n            <el-input v-model=\"taskForm.jenkins_job_name\" placeholder=\"Jenkins任务名称\">\n              <el-button slot=\"append\" @click=\"loadJenkinsJobs\" :loading=\"loadingJenkinsJobs\">\n                <i class=\"el-icon-refresh\"></i> 获取任务\n              </el-button>\n            </el-input>\n            <el-select \n              v-if=\"jenkinsJobs.length > 0\" \n              v-model=\"taskForm.jenkins_job_name\" \n              placeholder=\"选择Jenkins任务\" \n              style=\"width: 100%; margin-top: 5px;\"\n              filterable\n              @change=\"onJenkinsJobSelected\"\n            >\n              <el-option \n                v-for=\"job in jenkinsJobs\" \n                :key=\"job.name\" \n                :label=\"job.name\" \n                :value=\"job.name\"\n              >\n                <!-- 显示嵌套文件夹结构 -->\n                <div v-if=\"job.folder\" class=\"nested-job\">\n                  <span class=\"folder-name\">{{ job.folder }}</span>\n                  <i class=\"el-icon-arrow-right folder-separator\"></i>\n                  <span class=\"job-name\">{{ job.name.split('/').pop() }}</span>\n                </div>\n                <span v-else>{{ job.name }}</span>\n              </el-option>\n            </el-select>\n          </el-form-item>\n          <el-form-item label=\"用户名\" prop=\"jenkins_username\">\n            <el-input v-model=\"taskForm.jenkins_username\" placeholder=\"Jenkins用户名\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"API Token\" prop=\"jenkins_api_token\">\n            <el-input v-model=\"taskForm.jenkins_api_token\" placeholder=\"Jenkins API Token\" show-password></el-input>\n          </el-form-item>\n          \n          <!-- Jenkins参数设置 -->\n          <el-form-item label=\"任务参数\">\n            <div class=\"jenkins-params\">\n              <div v-for=\"(param, index) in jenkinsParams\" :key=\"index\" class=\"param-item\">\n                <el-input v-model=\"param.name\" placeholder=\"参数名\" class=\"param-name\"></el-input>\n                <el-input v-model=\"param.value\" placeholder=\"参数值\" class=\"param-value\"></el-input>\n                <el-button type=\"danger\" icon=\"el-icon-delete\" circle @click=\"removeParam(index)\" size=\"mini\"></el-button>\n              </div>\n              <el-button type=\"primary\" icon=\"el-icon-plus\" size=\"small\" @click=\"addParam\">添加参数</el-button>\n            </div>\n          </el-form-item>\n        </template>\n        \n        <!-- 脚本任务特有字段 -->\n        <template v-if=\"taskForm.task_type === 'script'\">\n          <el-form-item label=\"脚本类型\" prop=\"script_type\">\n            <el-select v-model=\"taskForm.script_type\" placeholder=\"请选择脚本类型\" style=\"width: 100%\">\n              <el-option label=\"Python\" value=\"python\"></el-option>\n              <el-option label=\"Bash\" value=\"bash\"></el-option>\n              <el-option label=\"PowerShell\" value=\"powershell\"></el-option>\n            </el-select>\n          </el-form-item>\n          <el-form-item label=\"脚本内容\" prop=\"script_content\">\n            <el-input\n              type=\"textarea\"\n              v-model=\"taskForm.script_content\"\n              :rows=\"10\"\n              placeholder=\"请输入脚本内容\"\n            ></el-input>\n          </el-form-item>\n        </template>\n        \n        <!-- 命令任务特有字段 -->\n        <template v-if=\"taskForm.task_type === 'command'\">\n          <el-form-item label=\"命令内容\" prop=\"command\">\n            <el-input\n              type=\"textarea\"\n              v-model=\"taskForm.command\"\n              :rows=\"5\"\n              placeholder=\"请输入命令内容\"\n            ></el-input>\n          </el-form-item>\n        </template>\n        \n        <el-form-item label=\"启用状态\">\n          <el-switch v-model=\"taskForm.is_enabled\"></el-switch>\n        </el-form-item>\n      </el-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"dialogVisible = false\">取消</el-button>\n        <el-button type=\"primary\" @click=\"saveTask\" :loading=\"saveLoading\">保存</el-button>\n      </span>\n    </el-dialog>\n    \n    <!-- 删除确认对话框 -->\n    <el-dialog\n      title=\"确认删除\"\n      :visible.sync=\"deleteDialogVisible\"\n      width=\"30%\">\n      <p>确定要删除任务 \"{{ taskToDelete ? taskToDelete.name : '' }}\" 吗？</p>\n      <p class=\"warning-text\">此操作将永久删除该任务及其所有执行记录，且不可恢复！</p>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"deleteDialogVisible = false\">取消</el-button>\n        <el-button type=\"danger\" @click=\"deleteTask\" :loading=\"deleteLoading\">确定删除</el-button>\n      </span>\n    </el-dialog>\n    \n    <!-- 参数编辑对话框 -->\n    <el-dialog\n      title=\"编辑任务参数\"\n      :visible.sync=\"paramsDialogVisible\"\n      width=\"750px\"\n      @close=\"cancelExecute\"\n    >\n      <div v-if=\"currentTask && currentTask.task_type === 'jenkins'\">\n        <div class=\"params-editor\">\n          <div v-for=\"(param, index) in executionParams\" :key=\"index\" class=\"param-item\">\n            <el-form :inline=\"false\" class=\"param-form\">\n              <el-form-item :label=\"param.name\">\n                <!-- 选择类型参数 -->\n                <el-select \n                  v-if=\"param.type === 'ChoiceParameterDefinition'\" \n                  v-model=\"param.value\" \n                  :placeholder=\"`选择${param.name}参数值`\"\n                  style=\"width: 100%\"\n                >\n                  <el-option \n                    v-for=\"choice in param.choices\" \n                    :key=\"choice\" \n                    :label=\"choice\" \n                    :value=\"choice\"\n                  ></el-option>\n                </el-select>\n                <!-- 布尔类型参数 -->\n                <el-switch \n                  v-else-if=\"param.type === 'BooleanParameterDefinition'\"\n                  v-model=\"param.value\"\n                  active-text=\"是\"\n                  inactive-text=\"否\"\n                ></el-switch>\n                <!-- 默认文本类型参数 -->\n                <el-input \n                  v-else\n                  v-model=\"param.value\" \n                  type=\"textarea\" \n                  :rows=\"5\"\n                  :placeholder=\"`输入${param.name}参数值`\"\n                  class=\"param-textarea\"\n                ></el-input>\n              </el-form-item>\n              <el-form-item v-if=\"param.description\" label=\"描述\">\n                <el-tooltip :content=\"param.description\" placement=\"top\">\n                  <span class=\"param-description\">{{ param.description }}</span>\n                </el-tooltip>\n              </el-form-item>\n            </el-form>\n          </div>\n          <div v-if=\"executionParams.length === 0\" class=\"no-params\">\n            <i class=\"el-icon-info\"></i>\n            <p>该任务没有定义参数</p>\n          </div>\n        </div>\n      </div>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"cancelExecute\">取消</el-button>\n        <el-button type=\"primary\" @click=\"confirmExecute\" :loading=\"executeLoading\">确认执行</el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'TaskManager',\n  data() {\n    return {\n      tasks: [],\n      loading: false,\n      searchQuery: '',\n      currentPage: 1,\n      pageSize: 10,\n      totalTasks: 0,\n      totalFilteredTasks: 0,\n      taskViews: [],\n      viewFilter: 'all',\n      \n      // 对话框相关\n      dialogVisible: false,\n      dialogTitle: '添加任务',\n      isEdit: false,\n      taskForm: {\n        name: '',\n        task_type: 'jenkins',\n        description: '',\n        is_enabled: true,\n        view_id: null,\n        jenkins_url: '',\n        jenkins_job_name: '',\n        jenkins_username: '',\n        jenkins_api_token: '',\n        jenkins_parameters: {},\n        script_type: '',\n        script_content: '',\n        command: ''\n      },\n      formRules: {\n        name: [\n          { required: true, message: '请输入任务名称', trigger: 'blur' },\n          { min: 2, max: 50, message: '长度在 2 到 50 个字符', trigger: 'blur' }\n        ],\n        task_type: [\n          { required: true, message: '请选择任务类型', trigger: 'change' }\n        ],\n        jenkins_url: [\n          { required: true, message: 'Jenkins URL不能为空', trigger: 'blur' }\n        ],\n        jenkins_job_name: [\n          { required: true, message: 'Jenkins任务名称不能为空', trigger: 'blur' }\n        ],\n        script_type: [\n          { required: true, message: '请选择脚本类型', trigger: 'change' }\n        ],\n        script_content: [\n          { required: true, message: '脚本内容不能为空', trigger: 'blur' }\n        ],\n        command: [\n          { required: true, message: '命令内容不能为空', trigger: 'blur' }\n        ]\n      },\n      saveLoading: false,\n      \n      // Jenkins相关\n      jenkinsJobs: [],\n      loadingJenkinsJobs: false,\n      loadingJobParameters: false,\n      \n      // 删除相关\n      deleteDialogVisible: false,\n      taskToDelete: null,\n      deleteLoading: false,\n\n      // Jenkins参数相关\n      jenkinsParams: [], // 用于UI展示的Jenkins参数数组\n      \n      // 参数对话框相关\n      paramsDialogVisible: false,\n      executionParams: [],\n      jobParameters: [],\n      currentTask: null,\n      executeLoading: false,\n\n      // 添加状态过滤\n      statusFilter: 'all',\n\n      // 任务权限\n      taskPermissions: {},\n    };\n  },\n  watch: {\n    'taskForm.jenkins_job_name': function(newVal, oldVal) {\n      if (newVal && newVal !== oldVal) {\n        this.onJenkinsJobSelected(newVal);\n      }\n    }\n  },\n  computed: {\n    filteredTasks() {\n      if (!this.searchQuery && this.statusFilter === 'all' && this.viewFilter === 'all') {\n        // 应用分页\n        const start = (this.currentPage - 1) * this.pageSize;\n        const end = start + this.pageSize;\n        return this.tasks.slice(start, end);\n      }\n      \n      let filtered = this.tasks;\n      \n      // 先按状态过滤\n      if (this.statusFilter === 'enabled') {\n        filtered = filtered.filter(task => task.is_enabled);\n      } else if (this.statusFilter === 'disabled') {\n        filtered = filtered.filter(task => !task.is_enabled);\n      }\n      \n      // 按视图过滤\n      if (this.viewFilter !== 'all') {\n        if (this.viewFilter === 'none') {\n          // 过滤没有视图的任务\n          filtered = filtered.filter(task => !task.view_id);\n        } else {\n          // 过滤特定视图的任务\n          filtered = filtered.filter(task => task.view_id === this.viewFilter);\n        }\n      }\n      \n      // 再按搜索条件过滤\n      if (this.searchQuery) {\n        const query = this.searchQuery.toLowerCase();\n        filtered = filtered.filter(task => \n          task.name.toLowerCase().includes(query) || \n          (task.description && task.description.toLowerCase().includes(query)) ||\n          this.getTaskTypeLabel(task.task_type).toLowerCase().includes(query)\n        );\n      }\n      \n      // 保存过滤后的总数量\n      this.totalFilteredTasks = filtered.length;\n      \n      // 应用分页\n      const start = (this.currentPage - 1) * this.pageSize;\n      const end = start + this.pageSize;\n      return filtered.slice(start, end);\n    },\n    \n    // 获取过滤后的总任务数\n    totalTasksCount() {\n      return this.totalFilteredTasks || this.tasks.length;\n    },\n    currentUser() {\n      return this.$store.state.user || {};\n    }\n  },\n  created() {\n    this.loadTasks();\n    this.loadTaskPermissions();\n    this.loadTaskViews();\n    \n    // 检查是否有视图ID参数\n    if (this.$route.query.view_id) {\n      this.viewFilter = parseInt(this.$route.query.view_id);\n    }\n  },\n  methods: {\n    // 加载任务列表\n    async loadTasks() {\n      this.loading = true;\n      try {\n        const response = await axios.get('/api/tasks');\n        this.tasks = response.data;\n        this.totalTasks = this.tasks.length;\n        this.loading = false;\n      } catch (error) {\n        this.$message.error('加载任务列表失败: ' + (error.response && error.response.data && error.response.data.error || error.message));\n        this.loading = false;\n      }\n    },\n    \n    // 添加参数\n    addParam() {\n      this.jenkinsParams.push({ name: '', value: '' });\n    },\n    \n    // 移除参数\n    removeParam(index) {\n      this.jenkinsParams.splice(index, 1);\n    },\n    \n    // 将参数数组转换为对象\n    paramsToObject() {\n      const result = {};\n      this.jenkinsParams.forEach(param => {\n        if (param.name && param.name.trim()) {\n          result[param.name.trim()] = param.value;\n        }\n      });\n      return result;\n    },\n    \n    // 将参数对象转换为数组\n    paramsToArray(paramsObj) {\n      const result = [];\n      if (paramsObj && typeof paramsObj === 'object') {\n        Object.keys(paramsObj).forEach(key => {\n          result.push({\n            name: key,\n            value: paramsObj[key]\n          });\n        });\n      }\n      return result;\n    },\n    \n    // 显示添加对话框\n    showAddDialog() {\n      this.isEdit = false;\n      this.dialogTitle = '添加任务';\n      this.jenkinsParams = []; // 清空参数\n      this.dialogVisible = true;\n    },\n    \n    // 编辑任务\n    editTask(task) {\n      this.isEdit = true;\n      this.dialogTitle = '编辑任务';\n      \n      // 复制任务数据到表单\n      this.taskForm = {\n        id: task.id,\n        name: task.name,\n        task_type: task.task_type,\n        description: task.description || '',\n        is_enabled: task.is_enabled,\n        view_id: task.view_id,\n        jenkins_url: task.jenkins_url || '',\n        jenkins_job_name: task.jenkins_job_name || '',\n        jenkins_username: task.jenkins_username || '',\n        jenkins_api_token: task.jenkins_api_token || '',\n        jenkins_parameters: task.jenkins_parameters || {},\n        script_type: task.script_type || '',\n        script_content: task.script_content || '',\n        command: task.command || ''\n      };\n      \n      // 将参数对象转换为数组，用于UI展示\n      this.jenkinsParams = this.paramsToArray(task.jenkins_parameters);\n      \n      this.dialogVisible = true;\n    },\n    \n    // 保存任务\n    saveTask() {\n      this.$refs.taskForm.validate(async valid => {\n        if (!valid) return;\n        \n        // 处理Jenkins参数\n        if (this.taskForm.task_type === 'jenkins') {\n          this.taskForm.jenkins_parameters = this.paramsToObject();\n        }\n        \n        this.saveLoading = true;\n        \n        try {\n          let response;\n          \n          if (this.isEdit) {\n            // 更新任务\n            response = await axios.put(`/api/tasks/${this.taskForm.id}`, this.taskForm);\n            \n            // 更新本地数据\n            const index = this.tasks.findIndex(t => t.id === this.taskForm.id);\n            if (index !== -1) {\n              this.$set(this.tasks, index, response.data);\n            }\n            \n            this.$message.success('任务更新成功');\n          } else {\n            // 创建任务\n            response = await axios.post('/api/tasks', this.taskForm);\n            \n            // 添加到本地数据\n            this.tasks.push(response.data);\n            this.totalTasks = this.tasks.length;\n            \n            this.$message.success('任务创建成功');\n          }\n          \n          this.dialogVisible = false;\n          this.saveLoading = false;\n        } catch (error) {\n          this.$message.error('保存任务失败: ' + (error.response && error.response.data && error.response.data.error || error.message));\n          this.saveLoading = false;\n        }\n      });\n    },\n    \n    // 重置表单\n    resetForm() {\n      if (this.$refs.taskForm) {\n        this.$refs.taskForm.resetFields();\n      }\n      \n      this.taskForm = {\n        name: '',\n        task_type: 'jenkins',\n        description: '',\n        is_enabled: true,\n        view_id: null,\n        jenkins_url: '',\n        jenkins_job_name: '',\n        jenkins_username: '',\n        jenkins_api_token: '',\n        jenkins_parameters: {},\n        script_type: '',\n        script_content: '',\n        command: ''\n      };\n      \n      this.jenkinsParams = [];\n      this.jenkinsJobs = [];\n    },\n    \n    // 确认删除\n    confirmDelete(task) {\n      this.taskToDelete = task;\n      this.deleteDialogVisible = true;\n    },\n    \n    // 删除任务\n    async deleteTask() {\n      if (!this.taskToDelete) return;\n      \n      this.deleteLoading = true;\n      \n      try {\n        await axios.delete(`/api/tasks/${this.taskToDelete.id}`);\n        \n        // 从本地数据中移除\n        const index = this.tasks.findIndex(t => t.id === this.taskToDelete.id);\n        if (index !== -1) {\n          this.tasks.splice(index, 1);\n          this.totalTasks = this.tasks.length;\n        }\n        \n        this.$message.success('任务删除成功');\n        this.deleteDialogVisible = false;\n        this.deleteLoading = false;\n      } catch (error) {\n        this.$message.error('删除任务失败: ' + (error.response && error.response.data && error.response.data.error || error.message));\n        this.deleteLoading = false;\n      }\n    },\n    \n    // 执行任务\n    async executeTask(task) {\n      this.currentTask = task;\n      \n      if (task.task_type === 'jenkins') {\n        // 获取任务参数\n        try {\n          this.executeLoading = true;\n          \n          // 获取Jenkins任务参数\n          const params = {\n            url: task.jenkins_url,\n            username: task.jenkins_username || '',\n            api_token: task.jenkins_api_token || '',\n            job_name: task.jenkins_job_name\n          };\n          \n          const response = await axios.get('/api/jenkins/job/parameters', { params });\n          \n          // 处理响应\n          if (response.data && Array.isArray(response.data)) {\n            this.jobParameters = response.data;\n            \n            // 准备执行参数，使用任务默认参数\n            this.executionParams = [];\n            const defaultParams = task.jenkins_parameters || {};\n            \n            // 将任务参数与默认值合并\n            response.data.forEach(param => {\n              this.executionParams.push({\n                name: param.name,\n                value: defaultParams[param.name] || param.default_value || '',\n                description: param.description || '',\n                type: param.type || 'string',\n                choices: param.choices || [] // 添加选项数组\n              });\n            });\n            \n            // 显示参数对话框\n            this.paramsDialogVisible = true;\n            this.executeLoading = false; // 重要：在显示对话框时重置loading状态\n          } else {\n            // 没有参数，直接执行\n            this.confirmExecute();\n          }\n        } catch (error) {\n          console.error('获取任务参数失败:', error);\n          this.$message.error('获取任务参数失败: ' + (error.response && error.response.data && error.response.data.error || error.message));\n          this.executeLoading = false;\n        }\n      } else {\n        // 非Jenkins任务，直接执行\n        this.confirmExecute();\n      }\n    },\n    \n    // 取消执行\n    cancelExecute() {\n      this.paramsDialogVisible = false;\n      this.executeLoading = false;\n      this.executionParams = [];\n      this.currentTask = null;\n    },\n    \n    // 确认执行\n    async confirmExecute() {\n      if (!this.currentTask) return;\n      \n      try {\n        this.executeLoading = true;\n        \n        // 构建参数\n        const parameters = {};\n        if (this.executionParams.length > 0) {\n          this.executionParams.forEach(param => {\n            parameters[param.name] = param.value;\n          });\n        }\n        \n        // 发送执行请求\n        const response = await axios.post(`/api/tasks/${this.currentTask.id}/execute`, \n          { parameters: Object.keys(parameters).length > 0 ? parameters : undefined }, \n          {\n            headers: {\n              'Content-Type': 'application/json'\n            }\n          }\n        );\n        \n        this.$message.success('任务已提交执行');\n        \n        // 关闭对话框\n        this.paramsDialogVisible = false;\n        \n        // 跳转到执行详情页\n        this.$router.push(`/system/task-execution/${response.data.execution_id}`);\n      } catch (error) {\n        this.$message.error('执行任务失败: ' + (error.response && error.response.data && error.response.data.error || error.message));\n      } finally {\n        this.executeLoading = false;\n        this.currentTask = null;\n      }\n    },\n    \n    // 加载Jenkins任务\n    async loadJenkinsJobs() {\n      if (!this.taskForm.jenkins_url) {\n        this.$message.warning('请先输入Jenkins URL');\n        return;\n      }\n      \n      try {\n        this.loadingJenkinsJobs = true;\n        \n        // 构建请求参数\n        const params = {\n          url: this.taskForm.jenkins_url,\n          username: this.taskForm.jenkins_username || '',\n          api_token: this.taskForm.jenkins_api_token || ''\n        };\n        \n        // 发送请求\n        const response = await axios.get('/api/jenkins/jobs', { params });\n        \n        // 处理响应\n        if (response.data && Array.isArray(response.data)) {\n          this.jenkinsJobs = response.data.map(job => ({\n            name: job.name,\n            url: job.url,\n            folder: job.folder // 添加folder属性\n          }));\n          \n          if (this.jenkinsJobs.length === 0) {\n            this.$message.warning('未找到任何Jenkins任务');\n          }\n        } else {\n          this.$message.warning('获取Jenkins任务列表格式不正确');\n          this.jenkinsJobs = [];\n        }\n      } catch (error) {\n        console.error('加载Jenkins任务失败:', error);\n        this.$message.error('加载Jenkins任务失败: ' + (error.response && error.response.data && error.response.data.error || error.message));\n        this.jenkinsJobs = [];\n      } finally {\n        this.loadingJenkinsJobs = false;\n      }\n    },\n    \n    // 当选择Jenkins任务后加载任务参数\n    async onJenkinsJobSelected(jobName) {\n      if (!jobName) return;\n      \n      try {\n        this.loadingJobParameters = true;\n        \n        // 构建请求参数\n        const params = {\n          url: this.taskForm.jenkins_url,\n          username: this.taskForm.jenkins_username || '',\n          api_token: this.taskForm.jenkins_api_token || '',\n          job_name: jobName\n        };\n        \n        // 发送请求\n        const response = await axios.get('/api/jenkins/job/parameters', { params });\n        \n        // 处理响应\n        if (response.data && Array.isArray(response.data)) {\n          // 清空现有参数\n          this.jenkinsParams = [];\n          \n          // 如果有参数，添加到参数列表\n          if (response.data.length > 0) {\n            response.data.forEach(param => {\n              this.jenkinsParams.push({\n                name: param.name,\n                value: param.default_value || ''\n              });\n            });\n            \n            this.$message.success(`成功获取到 ${response.data.length} 个任务参数`);\n          }\n        }\n      } catch (error) {\n        console.error('加载Jenkins任务参数失败:', error);\n        this.$message.error('加载任务参数失败: ' + (error.response && error.response.data && error.response.data.error || error.message));\n      } finally {\n        this.loadingJobParameters = false;\n      }\n    },\n    \n    // 处理任务状态变更\n    async handleStatusChange(task) {\n      try {\n        await axios.put(`/api/tasks/${task.id}`, {\n          is_enabled: task.is_enabled\n        });\n        \n        this.$message.success(`任务已${task.is_enabled ? '启用' : '禁用'}`);\n      } catch (error) {\n        // 恢复原状态\n        task.is_enabled = !task.is_enabled;\n        this.$message.error('更新任务状态失败: ' + (error.response && error.response.data && error.response.data.error || error.message));\n      }\n    },\n    \n    // 分页相关方法\n    handleSizeChange(val) {\n      this.pageSize = val;\n      // 重置为第一页\n      this.currentPage = 1;\n    },\n    handleCurrentChange(val) {\n      this.currentPage = val;\n    },\n    \n    // 格式化日期\n    formatDate(dateString) {\n      if (!dateString) return '';\n      \n      // 创建日期对象\n      const date = new Date(dateString);\n      \n      // 获取UTC时间并添加8小时（东八区）\n      const utcTime = date.getTime();\n      const beijingTime = new Date(utcTime + 8 * 60 * 60 * 1000);\n      \n      // 格式化为本地时间字符串\n      return beijingTime.toLocaleString('zh-CN', {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit',\n        hour: '2-digit',\n        minute: '2-digit',\n        second: '2-digit',\n        hour12: false\n      });\n    },\n    \n    // 获取任务类型标签\n    getTaskTypeLabel(type) {\n      const types = {\n        'jenkins': 'Jenkins任务',\n        'script': '脚本任务',\n        'command': '命令任务'\n      };\n      return types[type] || type;\n    },\n    \n    // 获取任务类型标签样式\n    getTaskTypeTag(type) {\n      const types = {\n        'jenkins': 'primary',\n        'script': 'success',\n        'command': 'warning'\n      };\n      return types[type] || '';\n    },\n    \n    // 加载任务权限\n    async loadTaskPermissions() {\n      try {\n        const response = await axios.get('/api/tasks/permissions');\n        \n        // 将权限数据转换为以任务ID为键的对象\n        const permissions = {};\n        if (response.data && Array.isArray(response.data)) {\n          response.data.forEach(perm => {\n            permissions[perm.task_id] = {\n              can_view: perm.can_view,\n              can_execute: perm.can_execute,\n              can_terminate: perm.can_terminate,\n              can_delete: perm.can_delete\n            };\n          });\n        }\n        \n        this.taskPermissions = permissions;\n      } catch (error) {\n        console.error('加载任务权限失败:', error);\n      }\n    },\n    \n    // 加载任务视图\n    async loadTaskViews() {\n      try {\n        const response = await axios.get('/api/task-views');\n        this.taskViews = response.data;\n      } catch (error) {\n        console.error('加载任务视图失败:', error);\n        this.$message.error('加载任务视图失败');\n      }\n    },\n    \n    // 根据视图ID获取视图名称\n    getViewName(viewId) {\n      const view = this.taskViews.find(v => v.id === viewId);\n      return view ? view.name : '未知视图';\n    },\n    \n    // 判断是否可以查看任务\n    canView(task) {\n      // 管理员或任务创建者可以查看\n      if (this.currentUser.is_admin || task.user_id === this.currentUser.id) {\n        return true;\n      }\n      \n      // 检查是否有查看权限\n      const perm = this.taskPermissions[task.id];\n      return perm && perm.can_view;\n    },\n    \n    // 判断是否可以编辑任务\n    canEdit(task) {\n      // 只有管理员或任务创建者可以编辑\n      return this.currentUser.is_admin || task.user_id === this.currentUser.id;\n    },\n    \n    // 判断是否可以执行任务\n    canExecute(task) {\n      // 管理员或任务创建者可以执行\n      if (this.currentUser.is_admin || task.user_id === this.currentUser.id) {\n        return true;\n      }\n      \n      // 检查是否有执行权限\n      const perm = this.taskPermissions[task.id];\n      return perm && perm.can_execute;\n    },\n    \n    // 判断是否可以删除任务\n    canDelete(task) {\n      // 管理员可以删除任何任务\n      if (this.currentUser.is_admin) {\n        return true;\n      }\n      \n      // 任务创建者可以删除自己的任务\n      if (task.user_id === this.currentUser.id) {\n        return true;\n      }\n      \n      // 检查是否有删除权限\n      const perm = this.taskPermissions[task.id];\n      return perm && perm.can_delete;\n    },\n    \n    // 表格行样式\n    tableRowClassName({ row, rowIndex }) {\n      if (row.is_enabled) {\n        return 'enabled-row';\n      } else {\n        return 'disabled-row';\n      }\n    },\n\n    // 处理过滤器变化\n    handleFilterChange() {\n      // 重置为第一页\n      this.currentPage = 1;\n      console.log('过滤条件变更');\n    }\n  }\n};\n</script>\n\n<style scoped>\n.task-manager {\n  padding: 20px;\n}\n\n.page-header {\n  margin-bottom: 20px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.header-left {\n  flex: 1;\n  margin-right: 20px;\n}\n\n.header-right {\n  flex-shrink: 0;\n}\n\n.page-title {\n  font-size: 24px;\n  margin-bottom: 8px;\n}\n\n.page-description {\n  color: #606266;\n  font-size: 14px;\n}\n\n.actions-toolbar {\n  margin-bottom: 20px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.toolbar-left {\n  flex: 1;\n  margin-right: 20px;\n  display: flex;\n  align-items: center;\n  gap: 15px;\n}\n\n.toolbar-right {\n  flex-shrink: 0;\n}\n\n.search-input {\n  width: 300px;\n}\n\n.view-filter {\n  width: 150px;\n  margin-left: 15px;\n}\n\n.manage-views-btn {\n  margin-left: 5px;\n  font-size: 13px;\n}\n\n.pagination-container {\n  margin-top: 20px;\n  display: flex;\n  justify-content: flex-end;\n  padding: 10px 0;\n  background-color: #f5f7fa;\n  border-radius: 4px;\n}\n\n.task-name-link {\n  color: #409EFF;\n  text-decoration: none;\n  font-weight: bold;\n}\n\n.task-name-link:hover {\n  text-decoration: underline;\n}\n\n.description-text {\n  color: #606266;\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.warning-text {\n  color: #F56C6C;\n  font-weight: bold;\n}\n\n.jenkins-params {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n  margin-top: 10px;\n}\n\n.param-item {\n  display: flex;\n  align-items: center;\n  gap: 5px;\n}\n\n.param-name, .param-value {\n  width: 150px; /* Adjust as needed */\n}\n\n.params-editor {\n  max-height: 400px;\n  overflow-y: auto;\n}\n\n.param-item {\n  margin-bottom: 10px;\n  padding: 10px;\n  border-bottom: 1px solid #eee;\n}\n\n.param-item:last-child {\n  border-bottom: none;\n}\n\n.param-form {\n  display: flex;\n  align-items: center;\n}\n\n.param-form .el-form-item {\n  margin-bottom: 0;\n}\n\n.no-params {\n  text-align: center;\n  padding: 20px;\n  color: #909399;\n}\n\n.no-params i {\n  font-size: 30px;\n  margin-bottom: 10px;\n}\n\n.param-description {\n  color: #606266;\n  font-size: 13px;\n  line-height: 1.4;\n  display: block;\n  word-break: break-word;\n}\n\n.param-textarea {\n  width: 100%;\n  font-family: Consolas, Monaco, monospace;\n  font-size: 14px;\n  line-height: 1.5;\n}\n\n.param-textarea >>> .el-textarea__inner {\n  border-radius: 4px;\n  border-color: #dcdfe6;\n  padding: 10px;\n  min-height: 120px !important;\n  width: 500px !important;\n  transition: border-color 0.2s ease;\n}\n\n.param-textarea >>> .el-textarea__inner:focus {\n  border-color: #409EFF;\n}\n\n.param-textarea >>> .el-textarea__inner:hover {\n  border-color: #c0c4cc;\n}\n\n/* 新增样式 */\n.nested-job {\n  display: flex;\n  align-items: center;\n  font-size: 14px;\n  color: #606266;\n}\n\n.folder-name {\n  margin-right: 5px;\n}\n\n.folder-separator {\n  margin: 0 5px;\n  font-size: 12px;\n}\n\n.job-name {\n  font-weight: bold;\n  color: #303133;\n}\n\n.action-buttons {\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  flex-wrap: nowrap;\n  gap: 8px;\n}\n\n.action-buttons .el-button {\n  margin: 0;\n  padding: 7px;\n}\n\n.action-buttons .el-button + .el-button {\n  margin-left: 0;\n}\n\n/* 新增行样式 */\n.el-table .enabled-row {\n  background-color: #f5fbf8; /* 更柔和的浅绿色背景 */\n}\n\n.el-table .disabled-row {\n  background-color: #fbf5f5; /* 更柔和的浅红色背景 */\n}\n\n/* 鼠标悬停效果 */\n.el-table .el-table__row:hover {\n  background-color: #eef5ff !important;\n  transition: background-color 0.3s;\n}\n\n/* 表格样式 */\n.el-table {\n  margin-top: 15px;\n  border-radius: 4px;\n  overflow: hidden;\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.05);\n}\n\n.el-table >>> th {\n  background-color: #f5f7fa !important;\n  color: #606266;\n  font-weight: bold;\n  font-size: 14px;\n  padding: 12px 0;\n}\n\n.el-table >>> .el-table__header-wrapper {\n  border-bottom: 1px solid #EBEEF5;\n}\n\n.no-data-text {\n  color: #909399;\n  font-size: 13px;\n  font-style: italic;\n}\n</style> "],"mappings":"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","ignoreList":[]}]}