{"remainingRequest":"E:\\yunwei\\1.0\\frontend\\node_modules\\babel-loader\\lib\\index.js!E:\\yunwei\\1.0\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!E:\\yunwei\\1.0\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\yunwei\\1.0\\frontend\\src\\components\\ServerList.vue?vue&type=script&lang=js","dependencies":[{"path":"E:\\yunwei\\1.0\\frontend\\src\\components\\ServerList.vue","mtime":1742462135604},{"path":"E:\\yunwei\\1.0\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1740710845061},{"path":"E:\\yunwei\\1.0\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1740710847398},{"path":"E:\\yunwei\\1.0\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1740710845061},{"path":"E:\\yunwei\\1.0\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1740710848685}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["Terminal","FitAddon","io","data","servers","dialogVisible","sshVisible","terminal","serverForm","name","ip","type","username","password","rules","required","message","trigger","activeConnections","heartbeatTimer","refreshInterval","categories","selectedCategory","categoryTree","id","label","defaultProps","children","editDialogVisible","editForm","category_id","computed","isAdmin","$store","state","user","is_admin","isLoggedIn","filteredServers","filter","server","methods","loadServers","response","axios","get","error","$message","showAddDialog","loadCategories","map","category","submitForm","valid","$refs","validate","post","success","deleteServer","$confirm","delete","connectServer","passwordResponse","server_id","connectSSH","$nextTick","fitAddon","loadAddon","open","document","getElementById","fit","then","socket","emit","host","on","write","onData","catch","handleNodeClick","showEditDialog","submitEditForm","updateData","put","created","setInterval","beforeDestroy","clearInterval","dispose"],"sources":["src/components/ServerList.vue"],"sourcesContent":["<template>\r\n  <div class=\"server-list-container\">\r\n    <!-- 左侧分类树 -->\r\n    <div class=\"category-tree\">\r\n      <el-tree\r\n        :data=\"categoryTree\"\r\n        :props=\"defaultProps\"\r\n        @node-click=\"handleNodeClick\"\r\n        default-expand-all\r\n        highlight-current>\r\n      </el-tree>\r\n    </div>\r\n\r\n    <!-- 右侧服务器列表 -->\r\n    <div class=\"server-list\">\r\n      <!-- 只有管理员才能看到添加服务器按钮 -->\r\n      <div class=\"toolbar\" v-if=\"isAdmin\">\r\n        <el-button type=\"primary\" @click=\"showAddDialog\">\r\n          <i class=\"el-icon-plus\"></i> 添加服务器\r\n        </el-button>\r\n      </div>\r\n\r\n      <el-table :data=\"filteredServers\" style=\"width: 100%\">\r\n        <el-table-column prop=\"name\" label=\"名称\" min-width=\"120\" />\r\n        <el-table-column prop=\"ip\" label=\"IP地址\" min-width=\"140\" />\r\n        <el-table-column prop=\"type\" label=\"类型\" width=\"100\" align=\"center\">\r\n          <template slot-scope=\"scope\">\r\n            <el-tag \r\n              :type=\"scope.row.type === 'Windows' ? 'primary' : 'success'\"\r\n              size=\"medium\"\r\n              effect=\"plain\">\r\n              {{ scope.row.type }}\r\n            </el-tag>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"状态\" width=\"150\" align=\"center\">\r\n          <template slot-scope=\"scope\">\r\n            <el-tag \r\n              v-if=\"scope.row.in_use\"\r\n              :type=\"scope.row.in_use_by_me ? 'warning' : 'danger'\"\r\n              size=\"medium\"\r\n              effect=\"plain\">\r\n              {{ scope.row.in_use_by_me ? '我正在使用中' : `${scope.row.in_use_by_username} 正在使用中` }}\r\n            </el-tag>\r\n            <el-tag \r\n              v-else \r\n              type=\"success\"\r\n              size=\"medium\"\r\n              effect=\"plain\">\r\n              空闲\r\n            </el-tag>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"操作\" width=\"200\" align=\"center\">\r\n          <template slot-scope=\"scope\">\r\n            <el-button \r\n              type=\"primary\" \r\n              size=\"mini\" \r\n              @click=\"connectServer(scope.row)\"\r\n              :disabled=\"scope.row.in_use && !scope.row.in_use_by_me\"\r\n              :type=\"scope.row.type === 'Windows' ? 'primary' : 'success'\"\r\n              plain>\r\n              <i :class=\"scope.row.type === 'Windows' ? 'el-icon-monitor' : 'el-icon-terminal'\"></i>\r\n              {{ scope.row.type === 'Windows' ? 'RDP连接' : 'SSH连接' }}\r\n            </el-button>\r\n            <el-button\r\n              v-if=\"isAdmin\"\r\n              type=\"warning\"\r\n              size=\"mini\"\r\n              @click=\"showEditDialog(scope.row)\"\r\n              plain>\r\n              <i class=\"el-icon-edit\"></i>\r\n              编辑\r\n            </el-button>\r\n            <el-button\r\n              v-if=\"isAdmin\"\r\n              type=\"danger\"\r\n              size=\"mini\"\r\n              @click=\"deleteServer(scope.row)\"\r\n              plain>\r\n              <i class=\"el-icon-delete\"></i>\r\n              删除\r\n            </el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n\r\n      <!-- 添加服务器对话框 -->\r\n      <el-dialog \r\n        title=\"添加服务器\" \r\n        :visible.sync=\"dialogVisible\" \r\n        width=\"600px\"\r\n        custom-class=\"server-dialog\"\r\n        :close-on-click-modal=\"false\">\r\n        <el-form \r\n          :model=\"serverForm\" \r\n          ref=\"serverForm\" \r\n          :rules=\"rules\"\r\n          label-width=\"80px\"\r\n          class=\"server-form\">\r\n          <div class=\"form-row\">\r\n            <el-form-item label=\"名称\" prop=\"name\" class=\"form-item\">\r\n              <el-input v-model=\"serverForm.name\" placeholder=\"请输入服务器名称\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"IP地址\" prop=\"ip\" class=\"form-item\">\r\n              <el-input v-model=\"serverForm.ip\" placeholder=\"请输入IP地址\"></el-input>\r\n            </el-form-item>\r\n          </div>\r\n          <div class=\"form-row\">\r\n            <el-form-item label=\"类型\" prop=\"type\" class=\"form-item\">\r\n              <el-select v-model=\"serverForm.type\" placeholder=\"请选择服务器类型\" style=\"width: 100%\">\r\n                <el-option label=\"Windows\" value=\"Windows\"></el-option>\r\n                <el-option label=\"Linux\" value=\"Linux\"></el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n          </div>\r\n          <div class=\"form-row\">\r\n            <el-form-item label=\"用户名\" prop=\"username\" class=\"form-item\">\r\n              <el-input v-model=\"serverForm.username\" placeholder=\"请输入用户名\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"密码\" prop=\"password\" class=\"form-item\">\r\n              <el-input type=\"password\" v-model=\"serverForm.password\" placeholder=\"请输入密码\" show-password></el-input>\r\n            </el-form-item>\r\n          </div>\r\n        </el-form>\r\n        <div slot=\"footer\" class=\"dialog-footer\">\r\n          <el-button @click=\"dialogVisible = false\">取 消</el-button>\r\n          <el-button type=\"primary\" @click=\"submitForm\">确 定</el-button>\r\n        </div>\r\n      </el-dialog>\r\n\r\n      <!-- 编辑服务器对话框 -->\r\n      <el-dialog \r\n        title=\"编辑服务器\" \r\n        :visible.sync=\"editDialogVisible\" \r\n        width=\"600px\"\r\n        custom-class=\"server-dialog\"\r\n        :close-on-click-modal=\"false\">\r\n        <el-form \r\n          :model=\"editForm\" \r\n          ref=\"editForm\" \r\n          :rules=\"rules\"\r\n          label-width=\"80px\"\r\n          class=\"server-form\">\r\n          <div class=\"form-row\">\r\n            <el-form-item label=\"名称\" prop=\"name\" class=\"form-item\">\r\n              <el-input v-model=\"editForm.name\" placeholder=\"请输入服务器名称\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"IP地址\" prop=\"ip\" class=\"form-item\">\r\n              <el-input v-model=\"editForm.ip\" placeholder=\"请输入IP地址\"></el-input>\r\n            </el-form-item>\r\n          </div>\r\n          <div class=\"form-row\">\r\n            <el-form-item label=\"类型\" prop=\"type\" class=\"form-item\">\r\n              <el-select v-model=\"editForm.type\" placeholder=\"请选择服务器类型\" style=\"width: 100%\">\r\n                <el-option label=\"Windows\" value=\"Windows\"></el-option>\r\n                <el-option label=\"Linux\" value=\"Linux\"></el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n            <el-form-item label=\"分类\" prop=\"category_id\" class=\"form-item\">\r\n              <el-select v-model=\"editForm.category_id\" placeholder=\"请选择分类\" style=\"width: 100%\">\r\n                <el-option \r\n                  v-for=\"category in categories\" \r\n                  :key=\"category.id\" \r\n                  :label=\"category.name\" \r\n                  :value=\"category.id\">\r\n                </el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n          </div>\r\n          <div class=\"form-row\">\r\n            <el-form-item label=\"用户名\" prop=\"username\" class=\"form-item\">\r\n              <el-input v-model=\"editForm.username\" placeholder=\"请输入用户名\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"密码\" prop=\"password\" class=\"form-item\">\r\n              <el-input type=\"password\" v-model=\"editForm.password\" placeholder=\"不修改请留空\" show-password></el-input>\r\n            </el-form-item>\r\n          </div>\r\n        </el-form>\r\n        <div slot=\"footer\" class=\"dialog-footer\">\r\n          <el-button @click=\"editDialogVisible = false\">取 消</el-button>\r\n          <el-button type=\"primary\" @click=\"submitEditForm\">确 定</el-button>\r\n        </div>\r\n      </el-dialog>\r\n\r\n      <!-- SSH终端窗口 -->\r\n      <el-dialog title=\"SSH终端\" :visible.sync=\"sshVisible\" fullscreen>\r\n        <div id=\"terminal\" class=\"terminal\"></div>\r\n      </el-dialog>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { Terminal } from 'xterm';\r\nimport { FitAddon } from 'xterm-addon-fit';\r\nimport io from 'socket.io-client';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      servers: [],\r\n      dialogVisible: false,\r\n      sshVisible: false,\r\n      terminal: null,\r\n      serverForm: {\r\n        name: '',\r\n        ip: '',\r\n        type: 'Windows',\r\n        username: '',\r\n        password: ''\r\n      },\r\n      rules: {\r\n        name: [{ required: true, message: '请输入服务器名称', trigger: 'blur' }],\r\n        ip: [{ required: true, message: '请输入IP地址', trigger: 'blur' }],\r\n        type: [{ required: true, message: '请选择服务器类型', trigger: 'change' }],\r\n        username: [{ required: true, message: '请输入用户名', trigger: 'blur' }],\r\n        password: [{ required: true, message: '请输入密码', trigger: 'blur' }]\r\n      },\r\n      activeConnections: {},  // 存储活动连接的 token\r\n      heartbeatTimer: null,\r\n      refreshInterval: null,\r\n      categories: [],\r\n      selectedCategory: null,\r\n      categoryTree: [{\r\n        id: 'all',\r\n        label: '全部服务器'\r\n      }],\r\n      defaultProps: {\r\n        children: 'children',\r\n        label: 'label'\r\n      },\r\n      editDialogVisible: false,\r\n      editForm: {\r\n        id: null,\r\n        name: '',\r\n        ip: '',\r\n        type: '',\r\n        username: '',\r\n        password: '',\r\n        category_id: null\r\n      }\r\n    }\r\n  },\r\n\r\n  computed: {\r\n    isAdmin() {\r\n      return this.$store.state.user && this.$store.state.user.is_admin;\r\n    },\r\n    isLoggedIn() {\r\n      return this.$store.state.user !== null;\r\n    },\r\n    filteredServers() {\r\n      if (!this.selectedCategory || this.selectedCategory.id === 'all') {\r\n        return this.servers;\r\n      }\r\n      \r\n      // 根据选中的分类筛选服务器\r\n      return this.servers.filter(server => {\r\n        return server.category_id === this.selectedCategory.id;\r\n      });\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    async loadServers() {\r\n      // 如果未登录，不加载服务器列表\r\n      if (!this.isLoggedIn) {\r\n        return;\r\n      }\r\n      \r\n      try {\r\n        const response = await this.axios.get('/api/servers');\r\n        this.servers = response.data;\r\n      } catch (error) {\r\n        // 只在登录状态下显示错误消息\r\n        if (this.isLoggedIn) {\r\n          this.$message.error('获取服务器列表失败');\r\n        }\r\n      }\r\n    },\r\n\r\n    showAddDialog() {\r\n      this.dialogVisible = true;\r\n      this.serverForm = {\r\n        name: '',\r\n        ip: '',\r\n        type: 'Windows',\r\n        username: '',\r\n        password: ''\r\n      };\r\n    },\r\n\r\n    async loadCategories() {\r\n      try {\r\n        const response = await this.axios.get('/api/categories');\r\n        this.categories = response.data;\r\n        // 更新分类树\r\n        this.categoryTree = [{\r\n          id: 'all',\r\n          label: '全部服务器'\r\n        }, ...this.categories.map(category => ({\r\n          id: category.id,\r\n          label: category.name\r\n        }))];\r\n      } catch (error) {\r\n        this.$message.error('获取分类列表失败');\r\n      }\r\n    },\r\n\r\n    async submitForm() {\r\n      try {\r\n        const valid = await this.$refs.serverForm.validate();\r\n        if (valid) {\r\n          await this.axios.post('/api/servers', this.serverForm);\r\n          this.$message.success('添加服务器成功');\r\n          this.dialogVisible = false;\r\n          this.loadServers();\r\n        }\r\n      } catch (error) {\r\n        this.$message.error('添加服务器失败');\r\n      }\r\n    },\r\n\r\n    async deleteServer(server) {\r\n      try {\r\n        await this.$confirm('确认删除该服务器?', '提示', {\r\n          type: 'warning'\r\n        });\r\n        await this.axios.delete(`/api/servers/${server.id}`);\r\n        this.$message.success('删除成功');\r\n        this.loadServers();\r\n      } catch (error) {\r\n        if (error !== 'cancel') {\r\n          this.$message.error('删除失败');\r\n        }\r\n      }\r\n    },\r\n\r\n    async connectServer(server) {\r\n      try {\r\n        if (server.type === 'Windows') {\r\n          // 获取服务器密码\r\n          const passwordResponse = await this.axios.get(`/api/servers/${server.id}/password`);\r\n          const password = passwordResponse.data.password;\r\n\r\n          // 发起 RDP 连接\r\n          const response = await this.axios.post('/api/rdp/connect', {\r\n            server_id: server.id,\r\n            username: server.username,\r\n            password: password\r\n          });\r\n\r\n          if (response.data.success) {\r\n            this.$message.success('RDP 连接请求已发送');\r\n          }\r\n        } else {\r\n          // Linux SSH 连接\r\n          await this.connectSSH(server);\r\n        }\r\n      } catch (error) {\r\n        this.$message.error('连接失败：' + (error.response && error.response.data ? error.response.data.error : error.message));\r\n\r\n      }\r\n    },\r\n\r\n    async connectSSH(server) {\r\n      this.sshVisible = true;\r\n      this.$nextTick(() => {\r\n        if (!this.terminal) {\r\n          this.terminal = new Terminal();\r\n          const fitAddon = new FitAddon();\r\n          this.terminal.loadAddon(fitAddon);\r\n          this.terminal.open(document.getElementById('terminal'));\r\n          fitAddon.fit();\r\n\r\n          // 获取服务器密码\r\n          this.axios.get(`/api/servers/${server.id}/password`).then(passwordResponse => {\r\n            const password = passwordResponse.data.password;\r\n\r\n            // 使用 Socket.IO 连接 SSH\r\n            const socket = io('http://localhost:5000');\r\n            socket.emit('connect_ssh', {\r\n              host: server.ip,\r\n              username: server.username,\r\n              password: password\r\n            });\r\n\r\n            socket.on('ssh_output', (data) => {\r\n              this.terminal.write(data.data);\r\n            });\r\n\r\n            socket.on('ssh_error', (data) => {\r\n              this.$message.error(data.error);\r\n              this.sshVisible = false;\r\n            });\r\n\r\n            socket.on('disconnect', () => {\r\n              this.sshVisible = false;\r\n            });\r\n\r\n            this.terminal.onData(data => {\r\n              socket.emit('ssh_input', data);\r\n            });\r\n          }).catch(error => {\r\n            this.$message.error('获取服务器密码失败');\r\n            this.sshVisible = false;\r\n          });\r\n        }\r\n      });\r\n    },\r\n\r\n    handleNodeClick(data) {\r\n      this.selectedCategory = data;\r\n    },\r\n\r\n    showEditDialog(server) {\r\n      this.editForm = {\r\n        id: server.id,\r\n        name: server.name,\r\n        ip: server.ip,\r\n        type: server.type,\r\n        username: server.username,\r\n        password: '', // 密码留空，只有在修改时才填写\r\n        category_id: server.category_id\r\n      };\r\n      this.editDialogVisible = true;\r\n    },\r\n\r\n    async submitEditForm() {\r\n      try {\r\n        const valid = await this.$refs.editForm.validate();\r\n        if (valid) {\r\n          // 创建要提交的数据对象\r\n          const updateData = {\r\n            name: this.editForm.name,\r\n            ip: this.editForm.ip,\r\n            type: this.editForm.type,\r\n            username: this.editForm.username,\r\n            category_id: this.editForm.category_id\r\n          };\r\n          \r\n          // 只有当密码字段不为空时才包含密码\r\n          if (this.editForm.password) {\r\n            updateData.password = this.editForm.password;\r\n          }\r\n          \r\n          // 发送更新请求\r\n          await this.axios.put(`/api/servers/${this.editForm.id}`, updateData);\r\n          \r\n          this.$message.success('更新服务器成功');\r\n          this.editDialogVisible = false;\r\n          this.loadServers(); // 重新加载服务器列表\r\n        }\r\n      } catch (error) {\r\n        this.$message.error('更新服务器失败：' + (error.response?.data?.error || error.message));\r\n      }\r\n    }\r\n  },\r\n\r\n  created() {\r\n    this.loadCategories();  // 加载分类列表\r\n    this.loadServers();\r\n    // 每30秒刷新一次服务器列表\r\n    this.refreshInterval = setInterval(() => {\r\n      if (this.isLoggedIn) {\r\n        this.loadServers();\r\n        this.loadCategories();  // 同时刷新分类列表\r\n      }\r\n    }, 30000);\r\n  },\r\n\r\n  beforeDestroy() {\r\n    if (this.refreshInterval) {\r\n      clearInterval(this.refreshInterval);\r\n    }\r\n    if (this.heartbeatTimer) {\r\n      clearInterval(this.heartbeatTimer);\r\n    }\r\n    if (this.terminal) {\r\n      this.terminal.dispose();\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.server-list-container {\r\n  display: flex;\r\n  height: 100%;\r\n  padding: 20px;\r\n  gap: 20px;\r\n}\r\n\r\n.category-tree {\r\n  width: 250px;\r\n  background-color: #fff;\r\n  border-radius: 4px;\r\n  padding: 20px;\r\n  box-shadow: 0 2px 12px 0 rgba(0,0,0,0.1);\r\n}\r\n\r\n.server-list {\r\n  flex: 1;\r\n  background-color: #fff;\r\n  border-radius: 4px;\r\n  padding: 20px;\r\n  box-shadow: 0 2px 12px 0 rgba(0,0,0,0.1);\r\n}\r\n\r\n.toolbar {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.terminal {\r\n  height: 100%;\r\n  background: #000;\r\n}\r\n\r\n/* 添加服务器对话框样式 */\r\n.server-dialog {\r\n  border-radius: 8px;\r\n}\r\n\r\n.server-form {\r\n  padding: 20px 20px 0;\r\n}\r\n\r\n.form-row {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  gap: 20px;\r\n  margin-bottom: 22px;\r\n}\r\n\r\n.form-item {\r\n  flex: 1;\r\n  margin-bottom: 0;\r\n}\r\n\r\n.dialog-footer {\r\n  text-align: right;\r\n  padding: 10px 20px;\r\n  border-top: 1px solid #eee;\r\n}\r\n\r\n:deep(.el-dialog__body) {\r\n  padding: 0;\r\n}\r\n\r\n:deep(.el-dialog__header) {\r\n  padding: 20px;\r\n  border-bottom: 1px solid #eee;\r\n}\r\n\r\n:deep(.el-dialog__title) {\r\n  font-size: 18px;\r\n  font-weight: 500;\r\n}\r\n\r\n:deep(.el-form-item__label) {\r\n  font-weight: 500;\r\n}\r\n\r\n:deep(.el-input__inner) {\r\n  border-radius: 4px;\r\n}\r\n\r\n/* 表格样式优化 */\r\n:deep(.el-table) {\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n}\r\n\r\n:deep(.el-table th) {\r\n  background-color: #f5f7fa !important;\r\n  color: #606266;\r\n  font-weight: 600;\r\n  height: 50px;\r\n  padding: 8px 0;\r\n}\r\n\r\n:deep(.el-table td) {\r\n  padding: 12px 0;\r\n}\r\n\r\n:deep(.el-table--enable-row-hover .el-table__body tr:hover > td) {\r\n  background-color: #f5f7fa;\r\n}\r\n\r\n/* 标签样式优化 */\r\n:deep(.el-tag) {\r\n  border-radius: 4px;\r\n  padding: 0 12px;\r\n  height: 28px;\r\n  line-height: 26px;\r\n  font-size: 13px;\r\n}\r\n\r\n/* 按钮样式优化 */\r\n:deep(.el-button--mini) {\r\n  padding: 7px 12px;\r\n  font-size: 12px;\r\n  border-radius: 4px;\r\n}\r\n\r\n:deep(.el-button--mini i) {\r\n  margin-right: 4px;\r\n  font-size: 14px;\r\n}\r\n\r\n/* 分类树样式优化 */\r\n:deep(.el-tree) {\r\n  background: none;\r\n  color: #606266;\r\n}\r\n\r\n:deep(.el-tree-node__content) {\r\n  height: 40px;\r\n  border-radius: 4px;\r\n}\r\n\r\n:deep(.el-tree-node__content:hover) {\r\n  background-color: #f5f7fa;\r\n}\r\n\r\n:deep(.el-tree-node.is-current > .el-tree-node__content) {\r\n  background-color: #ecf5ff;\r\n  color: #409EFF;\r\n}\r\n\r\n/* 工具栏样式 */\r\n.toolbar {\r\n  margin-bottom: 20px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.toolbar .el-button {\r\n  padding: 10px 20px;\r\n  font-size: 14px;\r\n  border-radius: 4px;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.toolbar .el-button i {\r\n  margin-right: 6px;\r\n  font-size: 16px;\r\n}\r\n\r\n/* 编辑对话框样式优化 */\r\n.server-dialog {\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n}\r\n\r\n.server-dialog :deep(.el-dialog__body) {\r\n  padding: 20px 20px 0;\r\n}\r\n\r\n.server-dialog :deep(.el-dialog__header) {\r\n  padding: 20px;\r\n  background: #f8f9fa;\r\n  border-bottom: 1px solid #ebeef5;\r\n}\r\n\r\n.server-dialog :deep(.el-dialog__title) {\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n  color: #303133;\r\n}\r\n\r\n.server-dialog :deep(.el-dialog__footer) {\r\n  padding: 15px 20px;\r\n  border-top: 1px solid #ebeef5;\r\n}\r\n\r\n.form-row {\r\n  display: flex;\r\n  gap: 20px;\r\n  margin-bottom: 22px;\r\n}\r\n\r\n.form-item {\r\n  flex: 1;\r\n  margin-bottom: 0;\r\n}\r\n\r\n:deep(.el-form-item__label) {\r\n  font-weight: 500;\r\n  color: #606266;\r\n}\r\n\r\n:deep(.el-input__inner) {\r\n  border-radius: 4px;\r\n}\r\n\r\n:deep(.el-select .el-input__inner) {\r\n  border-radius: 4px;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]}]}