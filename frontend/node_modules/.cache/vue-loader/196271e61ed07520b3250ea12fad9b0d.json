{"remainingRequest":"D:\\test\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\test\\frontend\\src\\components\\CredentialManagement.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\test\\frontend\\src\\components\\CredentialManagement.vue","mtime":1747723632442},{"path":"D:\\test\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1747724956321},{"path":"D:\\test\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1747724958365},{"path":"D:\\test\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1747724956321},{"path":"D:\\test\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1747724959585}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQppbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnOw0KDQpleHBvcnQgZGVmYXVsdCB7DQogIGRhdGEoKSB7DQogICAgcmV0dXJuIHsNCiAgICAgIGNyZWRlbnRpYWxzOiBbXSwNCiAgICAgIGRpYWxvZ1Zpc2libGU6IGZhbHNlLA0KICAgICAgdmlld0RpYWxvZ1Zpc2libGU6IGZhbHNlLA0KICAgICAgaXNFZGl0OiBmYWxzZSwNCiAgICAgIGN1cnJlbnRDcmVkZW50aWFsOiBudWxsLA0KICAgICAgY3JlZGVudGlhbEZvcm06IHsNCiAgICAgICAgbmFtZTogJycsDQogICAgICAgIHVzZXJuYW1lOiAnJywNCiAgICAgICAgcGFzc3dvcmQ6ICcnLA0KICAgICAgICBkZXNjcmlwdGlvbjogJycNCiAgICAgIH0sDQogICAgICBydWxlczogew0KICAgICAgICBuYW1lOiBbDQogICAgICAgICAgeyByZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogJ+ivt+i+k+WFpeWHreaNruWQjeensCcsIHRyaWdnZXI6ICdibHVyJyB9LA0KICAgICAgICAgIHsgbWluOiAyLCBtYXg6IDUwLCBtZXNzYWdlOiAn6ZW/5bqm5ZyoIDIg5YiwIDUwIOS4quWtl+espicsIHRyaWdnZXI6ICdibHVyJyB9DQogICAgICAgIF0sDQogICAgICAgIHVzZXJuYW1lOiBbDQogICAgICAgICAgeyByZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogJ+ivt+i+k+WFpeeUqOaIt+WQjScsIHRyaWdnZXI6ICdibHVyJyB9DQogICAgICAgIF0sDQogICAgICAgIHBhc3N3b3JkOiBbDQogICAgICAgICAgeyANCiAgICAgICAgICAgIHZhbGlkYXRvcjogKHJ1bGUsIHZhbHVlLCBjYWxsYmFjaykgPT4gew0KICAgICAgICAgICAgICBpZiAoIXRoaXMuaXNFZGl0ICYmICF2YWx1ZSkgew0KICAgICAgICAgICAgICAgIGNhbGxiYWNrKG5ldyBFcnJvcign6K+36L6T5YWl5a+G56CBJykpOw0KICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgIGNhbGxiYWNrKCk7DQogICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0sDQogICAgICAgICAgICB0cmlnZ2VyOiAnYmx1cicgDQogICAgICAgICAgfQ0KICAgICAgICBdDQogICAgICB9DQogICAgfQ0KICB9LA0KICBjb21wdXRlZDogew0KICAgIGRpYWxvZ1RpdGxlKCkgew0KICAgICAgcmV0dXJuIHRoaXMuaXNFZGl0ID8gJ+e8lui+keWHreaNricgOiAn5re75Yqg5Yet5o2uJzsNCiAgICB9DQogIH0sDQogIG1ldGhvZHM6IHsNCiAgICBhc3luYyBsb2FkQ3JlZGVudGlhbHMoKSB7DQogICAgICB0cnkgew0KICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGF4aW9zLmdldCgnL2FwaS9jcmVkZW50aWFscycpOw0KICAgICAgICB0aGlzLmNyZWRlbnRpYWxzID0gcmVzcG9uc2UuZGF0YTsNCiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IoJ+iOt+WPluWHreaNruWIl+ihqOWksei0pScpOw0KICAgICAgICBjb25zb2xlLmVycm9yKGVycm9yKTsNCiAgICAgIH0NCiAgICB9LA0KICAgIA0KICAgIHNob3dBZGREaWFsb2coKSB7DQogICAgICB0aGlzLmlzRWRpdCA9IGZhbHNlOw0KICAgICAgdGhpcy5jcmVkZW50aWFsRm9ybSA9IHsNCiAgICAgICAgbmFtZTogJycsDQogICAgICAgIHVzZXJuYW1lOiAnJywNCiAgICAgICAgcGFzc3dvcmQ6ICcnLA0KICAgICAgICBkZXNjcmlwdGlvbjogJycNCiAgICAgIH07DQogICAgICB0aGlzLmRpYWxvZ1Zpc2libGUgPSB0cnVlOw0KICAgIH0sDQogICAgDQogICAgc2hvd0VkaXREaWFsb2coY3JlZGVudGlhbCkgew0KICAgICAgdGhpcy5pc0VkaXQgPSB0cnVlOw0KICAgICAgdGhpcy5jcmVkZW50aWFsRm9ybSA9IHsNCiAgICAgICAgaWQ6IGNyZWRlbnRpYWwuaWQsDQogICAgICAgIG5hbWU6IGNyZWRlbnRpYWwubmFtZSwNCiAgICAgICAgdXNlcm5hbWU6IGNyZWRlbnRpYWwudXNlcm5hbWUsDQogICAgICAgIHBhc3N3b3JkOiAnJywgIC8vIOe8lui+keaXtuS4jeaYvuekuuWvhueggQ0KICAgICAgICBkZXNjcmlwdGlvbjogY3JlZGVudGlhbC5kZXNjcmlwdGlvbiB8fCAnJw0KICAgICAgfTsNCiAgICAgIHRoaXMuZGlhbG9nVmlzaWJsZSA9IHRydWU7DQogICAgfSwNCiAgICANCiAgICBhc3luYyBzaG93Vmlld0RpYWxvZyhjcmVkZW50aWFsKSB7DQogICAgICB0cnkgew0KICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGF4aW9zLmdldChgL2FwaS9jcmVkZW50aWFscy8ke2NyZWRlbnRpYWwuaWR9YCk7DQogICAgICAgIHRoaXMuY3VycmVudENyZWRlbnRpYWwgPSByZXNwb25zZS5kYXRhOw0KICAgICAgICB0aGlzLnZpZXdEaWFsb2dWaXNpYmxlID0gdHJ1ZTsNCiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IoJ+iOt+WPluWHreaNruivpuaDheWksei0pScpOw0KICAgICAgICBjb25zb2xlLmVycm9yKGVycm9yKTsNCiAgICAgIH0NCiAgICB9LA0KICAgIA0KICAgIGdlbmVyYXRlUGFzc3dvcmQoKSB7DQogICAgICAvLyDnlJ/miJA4LTEy5L2N55qE6ZqP5py65a+G56CB77yM5YyF5ZCr5aSn5bCP5YaZ5a2X5q+N44CB5pWw5a2X5ZKM54m55q6K5a2X56ymDQogICAgICBjb25zdCBjaGFycyA9ICdBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWmFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6MDEyMzQ1Njc4OSFAIyQlXiYqKClfKyc7DQogICAgICBjb25zdCBsZW5ndGggPSAxMjsNCiAgICAgIGxldCBwYXNzd29yZCA9ICcnOw0KICAgICAgDQogICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGxlbmd0aDsgaSsrKSB7DQogICAgICAgIGNvbnN0IHJhbmRvbUluZGV4ID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogY2hhcnMubGVuZ3RoKTsNCiAgICAgICAgcGFzc3dvcmQgKz0gY2hhcnNbcmFuZG9tSW5kZXhdOw0KICAgICAgfQ0KICAgICAgDQogICAgICB0aGlzLmNyZWRlbnRpYWxGb3JtLnBhc3N3b3JkID0gcGFzc3dvcmQ7DQogICAgICANCiAgICAgIC8vIOW8ueWHuuaPkOekug0KICAgICAgdGhpcy4kbWVzc2FnZSh7DQogICAgICAgIG1lc3NhZ2U6ICflt7LnlJ/miJDpmo/mnLrlr4bnoIEnLA0KICAgICAgICB0eXBlOiAnc3VjY2VzcycsDQogICAgICAgIGR1cmF0aW9uOiAyMDAwDQogICAgICB9KTsNCiAgICB9LA0KICAgIA0KICAgIGFzeW5jIGhhbmRsZVN1Ym1pdCgpIHsNCiAgICAgIHRyeSB7DQogICAgICAgIGF3YWl0IHRoaXMuJHJlZnMuY3JlZGVudGlhbEZvcm0udmFsaWRhdGUoKTsNCiAgICAgICAgDQogICAgICAgIGlmICh0aGlzLmlzRWRpdCkgew0KICAgICAgICAgIC8vIOe8lui+keWHreaNrg0KICAgICAgICAgIGNvbnN0IGRhdGEgPSB7DQogICAgICAgICAgICBuYW1lOiB0aGlzLmNyZWRlbnRpYWxGb3JtLm5hbWUsDQogICAgICAgICAgICB1c2VybmFtZTogdGhpcy5jcmVkZW50aWFsRm9ybS51c2VybmFtZSwNCiAgICAgICAgICAgIGRlc2NyaXB0aW9uOiB0aGlzLmNyZWRlbnRpYWxGb3JtLmRlc2NyaXB0aW9uDQogICAgICAgICAgfTsNCiAgICAgICAgICANCiAgICAgICAgICAvLyDlj6rmnInlvZPlr4bnoIHlrZfmrrXmnInlgLzml7bmiY3lj5HpgIENCiAgICAgICAgICBpZiAodGhpcy5jcmVkZW50aWFsRm9ybS5wYXNzd29yZCkgew0KICAgICAgICAgICAgZGF0YS5wYXNzd29yZCA9IHRoaXMuY3JlZGVudGlhbEZvcm0ucGFzc3dvcmQ7DQogICAgICAgICAgfQ0KICAgICAgICAgIA0KICAgICAgICAgIGF3YWl0IGF4aW9zLnB1dChgL2FwaS9jcmVkZW50aWFscy8ke3RoaXMuY3JlZGVudGlhbEZvcm0uaWR9YCwgZGF0YSk7DQogICAgICAgICAgdGhpcy4kbWVzc2FnZS5zdWNjZXNzKCflh63mja7mm7TmlrDmiJDlip8nKTsNCiAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAvLyDmt7vliqDlh63mja4NCiAgICAgICAgICBhd2FpdCBheGlvcy5wb3N0KCcvYXBpL2NyZWRlbnRpYWxzJywgdGhpcy5jcmVkZW50aWFsRm9ybSk7DQogICAgICAgICAgdGhpcy4kbWVzc2FnZS5zdWNjZXNzKCflh63mja7mt7vliqDmiJDlip8nKTsNCiAgICAgICAgfQ0KICAgICAgICANCiAgICAgICAgdGhpcy5kaWFsb2dWaXNpYmxlID0gZmFsc2U7DQogICAgICAgIHRoaXMubG9hZENyZWRlbnRpYWxzKCk7DQogICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAvLyDooajljZXpqozor4HlpLHotKXkuI3pnIDopoHnibnmrorlpITnkIYNCiAgICAgICAgaWYgKGVycm9yLmNvbnN0cnVjdG9yICYmIGVycm9yLmNvbnN0cnVjdG9yLm5hbWUgPT09ICdFcnJvcicpIHsNCiAgICAgICAgICByZXR1cm47DQogICAgICAgIH0NCiAgICAgICAgDQogICAgICAgIGxldCBlcnJvck1lc3NhZ2UgPSAn5pON5L2c5aSx6LSlJzsNCiAgICAgICAgaWYgKGVycm9yLnJlc3BvbnNlICYmIGVycm9yLnJlc3BvbnNlLmRhdGEgJiYgZXJyb3IucmVzcG9uc2UuZGF0YS5lcnJvcikgew0KICAgICAgICAgIGVycm9yTWVzc2FnZSA9IGVycm9yLnJlc3BvbnNlLmRhdGEuZXJyb3I7DQogICAgICAgIH0NCiAgICAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcihlcnJvck1lc3NhZ2UpOw0KICAgICAgfQ0KICAgIH0sDQogICAgDQogICAgYXN5bmMgZGVsZXRlQ3JlZGVudGlhbChjcmVkZW50aWFsKSB7DQogICAgICB0cnkgew0KICAgICAgICBhd2FpdCB0aGlzLiRjb25maXJtKGDnoa7orqTliKDpmaTlh63mja4gIiR7Y3JlZGVudGlhbC5uYW1lfSI/YCwgJ+aPkOekuicsIHsNCiAgICAgICAgICB0eXBlOiAnd2FybmluZycNCiAgICAgICAgfSk7DQogICAgICAgIA0KICAgICAgICBhd2FpdCBheGlvcy5kZWxldGUoYC9hcGkvY3JlZGVudGlhbHMvJHtjcmVkZW50aWFsLmlkfWApOw0KICAgICAgICB0aGlzLiRtZXNzYWdlLnN1Y2Nlc3MoJ+WIoOmZpOaIkOWKnycpOw0KICAgICAgICB0aGlzLmxvYWRDcmVkZW50aWFscygpOw0KICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgaWYgKGVycm9yICE9PSAnY2FuY2VsJykgew0KICAgICAgICAgIGxldCBlcnJvck1lc3NhZ2UgPSAn5Yig6Zmk5aSx6LSlJzsNCiAgICAgICAgICBpZiAoZXJyb3IucmVzcG9uc2UgJiYgZXJyb3IucmVzcG9uc2UuZGF0YSAmJiBlcnJvci5yZXNwb25zZS5kYXRhLmVycm9yKSB7DQogICAgICAgICAgICBlcnJvck1lc3NhZ2UgPSBlcnJvci5yZXNwb25zZS5kYXRhLmVycm9yOw0KICAgICAgICAgIH0NCiAgICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKGVycm9yTWVzc2FnZSk7DQogICAgICAgIH0NCiAgICAgIH0NCiAgICB9DQogIH0sDQogIGNyZWF0ZWQoKSB7DQogICAgdGhpcy5sb2FkQ3JlZGVudGlhbHMoKTsNCiAgfQ0KfQ0K"},{"version":3,"sources":["CredentialManagement.vue"],"names":[],"mappings":";AAwfile":"CredentialManagement.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div class=\"credential-management\">\r\n    <div class=\"toolbar\">\r\n      <el-button type=\"primary\" @click=\"showAddDialog\">\r\n        <i class=\"el-icon-plus\"></i> 添加凭据\r\n      </el-button>\r\n    </div>\r\n\r\n    <el-table :data=\"credentials\" style=\"width: 100%\">\r\n      <el-table-column prop=\"name\" label=\"凭据名称\"></el-table-column>\r\n      <el-table-column prop=\"username\" label=\"用户名\"></el-table-column>\r\n      <el-table-column prop=\"server_count\" label=\"使用此凭据的服务器数\">\r\n        <template slot-scope=\"scope\">\r\n          <el-tag type=\"info\">{{ scope.row.server_count }}</el-tag>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column prop=\"description\" label=\"描述\" show-overflow-tooltip></el-table-column>\r\n      <el-table-column label=\"操作\" width=\"220\">\r\n        <template slot-scope=\"scope\">\r\n          <el-button \r\n            size=\"mini\" \r\n            type=\"primary\"\r\n            @click=\"showViewDialog(scope.row)\">\r\n            查看\r\n          </el-button>\r\n          <el-button \r\n            size=\"mini\" \r\n            type=\"warning\"\r\n            @click=\"showEditDialog(scope.row)\">\r\n            编辑\r\n          </el-button>\r\n          <el-button \r\n            size=\"mini\" \r\n            type=\"danger\" \r\n            @click=\"deleteCredential(scope.row)\"\r\n            :disabled=\"scope.row.server_count > 0\">\r\n            删除\r\n          </el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <!-- 添加/编辑凭据对话框 -->\r\n    <el-dialog :title=\"dialogTitle\" :visible.sync=\"dialogVisible\" width=\"500px\">\r\n      <el-form :model=\"credentialForm\" :rules=\"rules\" ref=\"credentialForm\" label-width=\"80px\">\r\n        <el-form-item label=\"名称\" prop=\"name\">\r\n          <el-input v-model=\"credentialForm.name\" placeholder=\"请输入凭据名称\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"用户名\" prop=\"username\">\r\n          <el-input v-model=\"credentialForm.username\" placeholder=\"请输入用户名\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item :label=\"isEdit ? '新密码' : '密码'\" prop=\"password\">\r\n          <el-input \r\n            type=\"password\" \r\n            v-model=\"credentialForm.password\" \r\n            placeholder=\"请输入密码\"\r\n            show-password>\r\n            <template slot=\"append\">\r\n              <el-button type=\"text\" @click=\"generatePassword\">生成</el-button>\r\n            </template>\r\n          </el-input>\r\n          <div class=\"form-tip\" v-if=\"isEdit\">留空表示不修改密码</div>\r\n        </el-form-item>\r\n        <el-form-item label=\"描述\" prop=\"description\">\r\n          <el-input \r\n            type=\"textarea\" \r\n            v-model=\"credentialForm.description\" \r\n            placeholder=\"请输入描述信息\"\r\n            :rows=\"3\">\r\n          </el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <div slot=\"footer\">\r\n        <el-button @click=\"dialogVisible = false\">取消</el-button>\r\n        <el-button type=\"primary\" @click=\"handleSubmit\">确定</el-button>\r\n      </div>\r\n    </el-dialog>\r\n\r\n    <!-- 查看凭据详情对话框 -->\r\n    <el-dialog title=\"凭据详情\" :visible.sync=\"viewDialogVisible\" width=\"700px\">\r\n      <template v-if=\"currentCredential\">\r\n        <div class=\"credential-detail\">\r\n          <div class=\"detail-item\">\r\n            <span class=\"item-label\">凭据名称：</span>\r\n            <span class=\"item-value\">{{ currentCredential.name }}</span>\r\n          </div>\r\n          <div class=\"detail-item\">\r\n            <span class=\"item-label\">用户名：</span>\r\n            <span class=\"item-value\">{{ currentCredential.username }}</span>\r\n          </div>\r\n          <div class=\"detail-item\">\r\n            <span class=\"item-label\">描述：</span>\r\n            <span class=\"item-value\">{{ currentCredential.description || '无' }}</span>\r\n          </div>\r\n        </div>\r\n        \r\n        <el-divider content-position=\"left\">使用此凭据的服务器</el-divider>\r\n        \r\n        <div v-if=\"currentCredential.servers && currentCredential.servers.length > 0\">\r\n          <el-table :data=\"currentCredential.servers\" style=\"width: 100%\">\r\n            <el-table-column prop=\"name\" label=\"服务器名称\"></el-table-column>\r\n            <el-table-column prop=\"ip\" label=\"IP地址\"></el-table-column>\r\n            <el-table-column prop=\"type\" label=\"类型\">\r\n              <template slot-scope=\"scope\">\r\n                <el-tag :type=\"scope.row.type === 'Windows' ? 'primary' : 'success'\">\r\n                  {{ scope.row.type }}\r\n                </el-tag>\r\n              </template>\r\n            </el-table-column>\r\n          </el-table>\r\n        </div>\r\n        <div v-else class=\"empty-list\">\r\n          暂无服务器使用此凭据\r\n        </div>\r\n      </template>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      credentials: [],\r\n      dialogVisible: false,\r\n      viewDialogVisible: false,\r\n      isEdit: false,\r\n      currentCredential: null,\r\n      credentialForm: {\r\n        name: '',\r\n        username: '',\r\n        password: '',\r\n        description: ''\r\n      },\r\n      rules: {\r\n        name: [\r\n          { required: true, message: '请输入凭据名称', trigger: 'blur' },\r\n          { min: 2, max: 50, message: '长度在 2 到 50 个字符', trigger: 'blur' }\r\n        ],\r\n        username: [\r\n          { required: true, message: '请输入用户名', trigger: 'blur' }\r\n        ],\r\n        password: [\r\n          { \r\n            validator: (rule, value, callback) => {\r\n              if (!this.isEdit && !value) {\r\n                callback(new Error('请输入密码'));\r\n              } else {\r\n                callback();\r\n              }\r\n            },\r\n            trigger: 'blur' \r\n          }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    dialogTitle() {\r\n      return this.isEdit ? '编辑凭据' : '添加凭据';\r\n    }\r\n  },\r\n  methods: {\r\n    async loadCredentials() {\r\n      try {\r\n        const response = await axios.get('/api/credentials');\r\n        this.credentials = response.data;\r\n      } catch (error) {\r\n        this.$message.error('获取凭据列表失败');\r\n        console.error(error);\r\n      }\r\n    },\r\n    \r\n    showAddDialog() {\r\n      this.isEdit = false;\r\n      this.credentialForm = {\r\n        name: '',\r\n        username: '',\r\n        password: '',\r\n        description: ''\r\n      };\r\n      this.dialogVisible = true;\r\n    },\r\n    \r\n    showEditDialog(credential) {\r\n      this.isEdit = true;\r\n      this.credentialForm = {\r\n        id: credential.id,\r\n        name: credential.name,\r\n        username: credential.username,\r\n        password: '',  // 编辑时不显示密码\r\n        description: credential.description || ''\r\n      };\r\n      this.dialogVisible = true;\r\n    },\r\n    \r\n    async showViewDialog(credential) {\r\n      try {\r\n        const response = await axios.get(`/api/credentials/${credential.id}`);\r\n        this.currentCredential = response.data;\r\n        this.viewDialogVisible = true;\r\n      } catch (error) {\r\n        this.$message.error('获取凭据详情失败');\r\n        console.error(error);\r\n      }\r\n    },\r\n    \r\n    generatePassword() {\r\n      // 生成8-12位的随机密码，包含大小写字母、数字和特殊字符\r\n      const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*()_+';\r\n      const length = 12;\r\n      let password = '';\r\n      \r\n      for (let i = 0; i < length; i++) {\r\n        const randomIndex = Math.floor(Math.random() * chars.length);\r\n        password += chars[randomIndex];\r\n      }\r\n      \r\n      this.credentialForm.password = password;\r\n      \r\n      // 弹出提示\r\n      this.$message({\r\n        message: '已生成随机密码',\r\n        type: 'success',\r\n        duration: 2000\r\n      });\r\n    },\r\n    \r\n    async handleSubmit() {\r\n      try {\r\n        await this.$refs.credentialForm.validate();\r\n        \r\n        if (this.isEdit) {\r\n          // 编辑凭据\r\n          const data = {\r\n            name: this.credentialForm.name,\r\n            username: this.credentialForm.username,\r\n            description: this.credentialForm.description\r\n          };\r\n          \r\n          // 只有当密码字段有值时才发送\r\n          if (this.credentialForm.password) {\r\n            data.password = this.credentialForm.password;\r\n          }\r\n          \r\n          await axios.put(`/api/credentials/${this.credentialForm.id}`, data);\r\n          this.$message.success('凭据更新成功');\r\n        } else {\r\n          // 添加凭据\r\n          await axios.post('/api/credentials', this.credentialForm);\r\n          this.$message.success('凭据添加成功');\r\n        }\r\n        \r\n        this.dialogVisible = false;\r\n        this.loadCredentials();\r\n      } catch (error) {\r\n        // 表单验证失败不需要特殊处理\r\n        if (error.constructor && error.constructor.name === 'Error') {\r\n          return;\r\n        }\r\n        \r\n        let errorMessage = '操作失败';\r\n        if (error.response && error.response.data && error.response.data.error) {\r\n          errorMessage = error.response.data.error;\r\n        }\r\n        this.$message.error(errorMessage);\r\n      }\r\n    },\r\n    \r\n    async deleteCredential(credential) {\r\n      try {\r\n        await this.$confirm(`确认删除凭据 \"${credential.name}\"?`, '提示', {\r\n          type: 'warning'\r\n        });\r\n        \r\n        await axios.delete(`/api/credentials/${credential.id}`);\r\n        this.$message.success('删除成功');\r\n        this.loadCredentials();\r\n      } catch (error) {\r\n        if (error !== 'cancel') {\r\n          let errorMessage = '删除失败';\r\n          if (error.response && error.response.data && error.response.data.error) {\r\n            errorMessage = error.response.data.error;\r\n          }\r\n          this.$message.error(errorMessage);\r\n        }\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    this.loadCredentials();\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.credential-management {\r\n  padding: 20px;\r\n}\r\n\r\n.toolbar {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.form-tip {\r\n  font-size: 12px;\r\n  color: #909399;\r\n  margin-top: 5px;\r\n}\r\n\r\n.credential-detail {\r\n  padding: 10px;\r\n  background-color: #f8f8f8;\r\n  border-radius: 4px;\r\n}\r\n\r\n.detail-item {\r\n  margin: 10px 0;\r\n  line-height: 20px;\r\n}\r\n\r\n.item-label {\r\n  font-weight: bold;\r\n  margin-right: 10px;\r\n  color: #606266;\r\n}\r\n\r\n.empty-list {\r\n  color: #909399;\r\n  text-align: center;\r\n  padding: 20px 0;\r\n}\r\n</style> "]}]}