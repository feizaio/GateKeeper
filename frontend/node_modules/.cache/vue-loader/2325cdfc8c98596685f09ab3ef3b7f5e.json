{"remainingRequest":"D:\\gatekeeper\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\gatekeeper\\frontend\\src\\components\\ServiceManager.vue?vue&type=style&index=0&id=8dc5e530&scoped=true&lang=css","dependencies":[{"path":"D:\\gatekeeper\\frontend\\src\\components\\ServiceManager.vue","mtime":1752645802056},{"path":"D:\\gatekeeper\\frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":1747724957296},{"path":"D:\\gatekeeper\\frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1747724961113},{"path":"D:\\gatekeeper\\frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":1747724958346},{"path":"D:\\gatekeeper\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1747724956321},{"path":"D:\\gatekeeper\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1747724959585}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5zZXJ2aWNlLW1hbmFnZXIgewogIHBhZGRpbmc6IDIwcHg7Cn0KCi5wYWdlLWhlYWRlciB7CiAgbWFyZ2luLWJvdHRvbTogMjRweDsKfQoKLnBhZ2UtdGl0bGUgewogIGZvbnQtc2l6ZTogMjRweDsKICBjb2xvcjogIzMwMzEzMzsKICBtYXJnaW46IDAgMCA4cHggMDsKICBmb250LXdlaWdodDogNTAwOwp9CgoucGFnZS1kZXNjcmlwdGlvbiB7CiAgY29sb3I6ICM2MDYyNjY7CiAgZm9udC1zaXplOiAxNHB4Owp9CgouYWN0aW9ucy10b29sYmFyIHsKICBkaXNwbGF5OiBmbGV4OwogIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDsKICBtYXJnaW4tYm90dG9tOiAyMHB4Owp9Cgouc2VjdGlvbi10aXRsZSB7CiAgbWFyZ2luOiAyNXB4IDAgMTVweCAwOwogIGZvbnQtc2l6ZTogMTZweDsKICBmb250LXdlaWdodDogNTAwOwogIGNvbG9yOiAjNUI2QjhCOwogIGRpc3BsYXk6IGZsZXg7CiAgYWxpZ24taXRlbXM6IGNlbnRlcjsKfQoKLnNlY3Rpb24tdGl0bGUgaSB7CiAgbWFyZ2luLXJpZ2h0OiA4cHg7CiAgZm9udC1zaXplOiAxOHB4Owp9CgouY2FyZC1jb250YWluZXIgewogIG1hcmdpbi1ib3R0b206IDIwcHg7CiAgbWluLWhlaWdodDogMTIwcHg7Cn0KCi5pZnJhbWUtY2FyZCB7CiAgbWFyZ2luLWJvdHRvbTogMTVweDsKICBjdXJzb3I6IHBvaW50ZXI7CiAgdHJhbnNpdGlvbjogYWxsIDAuM3M7CiAgYm9yZGVyLXJhZGl1czogOHB4OwogIG92ZXJmbG93OiBoaWRkZW47CiAgaGVpZ2h0OiAxNTBweDsKICBkaXNwbGF5OiBmbGV4OwogIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47Cn0KCi5pZnJhbWUtY2FyZC5pcy1hY3RpdmUgewogIGJvcmRlcjogMnB4IHNvbGlkICM0QjdCRTU7CiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0ycHgpOwp9CgouaWZyYW1lLWNhcmQ6aG92ZXIgewogIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMnB4KTsKICBib3gtc2hhZG93OiAwIDZweCAxNnB4IHJnYmEoMCwgMCwgMCwgMC4xKTsKfQoKLmNhcmQtaGVhZGVyIHsKICBkaXNwbGF5OiBmbGV4OwogIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsKICBhbGlnbi1pdGVtczogY2VudGVyOwogIHBhZGRpbmc6IDEycHggMTVweDsKICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQodG8gcmlnaHQsICM0QjdCRTUsICM1QjhGRjkpOwogIGNvbG9yOiB3aGl0ZTsKfQoKLmlmcmFtZS10aXRsZSB7CiAgZmxleDogMTsKICB3aGl0ZS1zcGFjZTogbm93cmFwOwogIG92ZXJmbG93OiBoaWRkZW47CiAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7CiAgZm9udC13ZWlnaHQ6IDUwMDsKICBmb250LXNpemU6IDE0cHg7Cn0KCi5jYXJkLW1lbnUgewogIGNvbG9yOiB3aGl0ZTsKfQoKLmVsLWRyb3Bkb3duLWxpbmsgewogIGN1cnNvcjogcG9pbnRlcjsKICBmb250LXNpemU6IDE2cHg7Cn0KCi5jYXJkLWNvbnRlbnQgewogIHBhZGRpbmc6IDE1cHg7CiAgZmxleDogMTsKICBkaXNwbGF5OiBmbGV4OwogIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47Cn0KCi51cmwtcHJldmlldyB7CiAgY29sb3I6ICM5MDkzOTk7CiAgZm9udC1zaXplOiAxM3B4OwogIG1hcmdpbi1ib3R0b206IDEwcHg7Cn0KCi5jYXJkLWZvb3RlciB7CiAgbWFyZ2luLXRvcDogYXV0bzsKICBmb250LXNpemU6IDEycHg7CiAgY29sb3I6ICM5MDkzOTk7CiAgZGlzcGxheTogZmxleDsKICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47Cn0KCi5lbXB0eS10aXAgewogIGRpc3BsYXk6IGZsZXg7CiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsKICBhbGlnbi1pdGVtczogY2VudGVyOwogIGp1c3RpZnktY29udGVudDogY2VudGVyOwogIGNvbG9yOiAjOTA5Mzk5OwogIGhlaWdodDogMjAwcHg7CiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjsKICBib3JkZXItcmFkaXVzOiA4cHg7CiAgYm94LXNoYWRvdzogMCAycHggMTJweCAwIHJnYmEoMCwwLDAsMC4wNSk7CiAgcGFkZGluZzogMjBweDsKfQoKLmlmcmFtZS1jb250ZW50IHsKICB3aWR0aDogMTAwJTsKICBoZWlnaHQ6IGNhbGMoMTAwdmggLSAyMDBweCk7CiAgYm9yZGVyOiBub25lOwp9CgouaWZyYW1lLWRpYWxvZyAuZWwtZGlhbG9nX19ib2R5IHsKICBwYWRkaW5nOiAwOwp9CgouZm9ybS10aXAgewogIGNvbG9yOiAjOTA5Mzk5OwogIGZvbnQtc2l6ZTogMTJweDsKICBtYXJnaW4tdG9wOiA0cHg7Cn0KCi5zZWN0aW9uLWRpdmlkZXIgewogIGRpc3BsYXk6IGZsZXg7CiAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICBtYXJnaW46IDI0cHggMDsKICBjb2xvcjogIzkwOTM5OTsKICBmb250LXNpemU6IDE0cHg7Cn0KCi5zZWN0aW9uLWRpdmlkZXI6OmJlZm9yZSwKLnNlY3Rpb24tZGl2aWRlcjo6YWZ0ZXIgewogIGNvbnRlbnQ6ICcnOwogIGZsZXg6IDE7CiAgaGVpZ2h0OiAxcHg7CiAgYmFja2dyb3VuZDogI0VCRUVGNTsKfQoKLnNlY3Rpb24tZGl2aWRlcjo6YmVmb3JlIHsKICBtYXJnaW4tcmlnaHQ6IDEycHg7Cn0KCi5zZWN0aW9uLWRpdmlkZXI6OmFmdGVyIHsKICBtYXJnaW4tbGVmdDogMTJweDsKfQoKLnVzZXItcGVybWlzc2lvbnMgewogIG1hcmdpbi1ib3R0b206IDIwcHg7Cn0KCi51c2VyLXBlcm1pc3Npb25zLWhlYWRlciB7CiAgZGlzcGxheTogZmxleDsKICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47CiAgbWFyZ2luLWJvdHRvbTogMTJweDsKfQo="},{"version":3,"sources":["ServiceManager.vue"],"names":[],"mappings":";AAukfile":"ServiceManager.vue","sourceRoot":"src/components","sourcesContent":["\n<template>\n  <div class=\"service-manager\">\n    <div class=\"page-header\">\n      <h2 class=\"page-title\">服务管理</h2>\n      <div class=\"page-description\">添加和管理外部服务页面，方便快速访问</div>\n    </div>\n\n    <!-- 工具栏 -->\n    <div class=\"actions-toolbar\">\n      <el-button type=\"primary\" icon=\"el-icon-plus\" @click=\"showAddDialog\" v-if=\"isAdmin\">添加页面</el-button>\n    </div>\n    \n    <!-- 服务列表区域 -->\n    <div class=\"section-title\">\n      <i class=\"el-icon-menu\"></i> 服务列表\n    </div>\n    \n    <!-- 卡片区 -->\n    <div class=\"card-container\">\n      <el-row :gutter=\"20\">\n        <el-col :xs=\"24\" :sm=\"12\" :md=\"8\" :xl=\"6\" v-for=\"(item, idx) in iframes\" :key=\"item.id || idx\">\n          <el-card \n            class=\"iframe-card\" \n            :class=\"{ 'is-active': selectedIdx === idx }\"\n            shadow=\"hover\" \n            @click.native=\"selectIframe(idx)\">\n            <div class=\"card-header\">\n              <div class=\"iframe-title\">{{ item.title || item.url }}</div>\n              <el-dropdown trigger=\"click\" @command=\"handleCommand($event, idx)\" class=\"card-menu\" @click.stop>\n                <span class=\"el-dropdown-link\" @click.stop>\n                  <i class=\"el-icon-more\"></i>\n                </span>\n                <el-dropdown-menu slot=\"dropdown\">\n                  <el-dropdown-item command=\"view\">\n                    <i class=\"el-icon-view\"></i> 查看\n                  </el-dropdown-item>\n                  <el-dropdown-item command=\"share\" v-if=\"canManagePermissions(item)\">\n                    <i class=\"el-icon-share\"></i> 权限设置\n                  </el-dropdown-item>\n                  <el-dropdown-item command=\"delete\" divided v-if=\"canDelete(item)\">\n                    <i class=\"el-icon-delete\"></i> 删除\n                  </el-dropdown-item>\n                </el-dropdown-menu>\n              </el-dropdown>\n            </div>\n            <div class=\"card-content\">\n              <div class=\"url-preview\">{{ formatUrl(item.url) }}</div>\n              <div class=\"card-footer\">\n                <span class=\"time-info\" v-if=\"item.created_at\">创建于 {{ formatDate(item.created_at) }}</span>\n                <el-tag size=\"mini\" type=\"success\" v-if=\"item.is_public\">公共</el-tag>\n                <el-tag size=\"mini\" type=\"info\" v-if=\"item.user_id === currentUser.id\">我的</el-tag>\n              </div>\n            </div>\n          </el-card>\n        </el-col>\n        \n        <!-- 空状态提示 -->\n        <el-col :span=\"24\" v-if=\"iframes.length === 0\">\n          <div class=\"empty-tip\">\n            <i class=\"el-icon-info\" style=\"font-size: 48px; margin-bottom: 16px;\"></i>\n            <span>暂无服务页面，点击\"添加页面\"按钮添加新的服务</span>\n          </div>\n        </el-col>\n      </el-row>\n    </div>\n\n    <!-- 添加服务对话框 -->\n    <el-dialog title=\"添加服务页面\" :visible.sync=\"addDialogVisible\" width=\"30%\" @closed=\"resetForm\">\n      <el-form :model=\"addForm\" :rules=\"formRules\" ref=\"addForm\" label-width=\"80px\">\n        <el-form-item label=\"标题\" prop=\"title\">\n          <el-input v-model=\"addForm.title\" placeholder=\"请输入服务标题\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"地址\" prop=\"url\">\n          <el-input v-model=\"addForm.url\" placeholder=\"请输入服务地址，例如: http://example.com\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"公共页面\">\n          <el-switch v-model=\"addForm.is_public\"></el-switch>\n          <div class=\"form-tip\">开启后，所有用户都可以访问此服务页面</div>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"addDialogVisible = false\">取消</el-button>\n        <el-button type=\"primary\" @click=\"addIframe\" :loading=\"loading\">确定</el-button>\n      </div>\n    </el-dialog>\n\n    <!-- 服务内容对话框 -->\n    <el-dialog \n      :title=\"(iframes[selectedIdx] && iframes[selectedIdx].title) || (iframes[selectedIdx] && iframes[selectedIdx].url)\" \n      :visible.sync=\"dialogVisible\" \n      width=\"90%\" \n      :before-close=\"closeIframeContent\"\n      class=\"iframe-dialog\"\n      fullscreen>\n      <iframe v-if=\"selectedIdx !== null && iframes[selectedIdx]\" :src=\"iframes[selectedIdx].url\" class=\"iframe-content\"></iframe>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"closeIframeContent\">关闭</el-button>\n      </span>\n    </el-dialog>\n\n    <!-- 删除确认对话框 -->\n    <el-dialog\n      title=\"确认删除\"\n      :visible.sync=\"deleteConfirmVisible\"\n      width=\"30%\">\n      <span>确定要删除此服务页面吗？</span>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"deleteConfirmVisible = false\">取消</el-button>\n        <el-button type=\"danger\" @click=\"confirmDelete\" :loading=\"deleteLoading\">删除</el-button>\n      </span>\n    </el-dialog>\n\n    <!-- 权限设置对话框 -->\n    <el-dialog\n      title=\"权限设置\"\n      :visible.sync=\"permissionDialogVisible\"\n      width=\"50%\">\n      <div v-if=\"selectedService\">\n        <el-form label-width=\"120px\">\n          <el-form-item label=\"公共页面\">\n            <el-switch v-model=\"permissionForm.is_public\"></el-switch>\n            <div class=\"form-tip\">开启后，所有用户都可以访问此服务页面</div>\n          </el-form-item>\n        </el-form>\n        \n        <div class=\"section-divider\">\n          <span>用户权限</span>\n        </div>\n        \n        <div class=\"user-permissions\">\n          <div class=\"user-permissions-header\">\n            <el-button size=\"small\" type=\"primary\" @click=\"showAddUserPermission\">\n              <i class=\"el-icon-plus\"></i> 添加用户\n            </el-button>\n          </div>\n          \n          <el-table :data=\"permissionForm.permissions\" style=\"width: 100%\">\n            <el-table-column prop=\"username\" label=\"用户名\"></el-table-column>\n            <el-table-column label=\"查看权限\">\n              <template slot-scope=\"scope\">\n                <el-switch v-model=\"scope.row.can_view\" disabled></el-switch>\n              </template>\n            </el-table-column>\n            <el-table-column label=\"编辑权限\">\n              <template slot-scope=\"scope\">\n                <el-switch v-model=\"scope.row.can_edit\"></el-switch>\n              </template>\n            </el-table-column>\n            <el-table-column label=\"删除权限\">\n              <template slot-scope=\"scope\">\n                <el-switch v-model=\"scope.row.can_delete\"></el-switch>\n              </template>\n            </el-table-column>\n            <el-table-column label=\"操作\" width=\"80\">\n              <template slot-scope=\"scope\">\n                <el-button \n                  size=\"mini\" \n                  type=\"danger\" \n                  icon=\"el-icon-delete\"\n                  @click=\"removeUserPermission(scope.$index)\">\n                </el-button>\n              </template>\n            </el-table-column>\n          </el-table>\n          \n          <div class=\"empty-tip\" v-if=\"permissionForm.permissions.length === 0\">\n            <span>暂无用户权限，点击\"添加用户\"按钮设置用户权限</span>\n          </div>\n        </div>\n      </div>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"permissionDialogVisible = false\">取消</el-button>\n        <el-button type=\"primary\" @click=\"savePermissions\" :loading=\"permissionLoading\">保存</el-button>\n      </span>\n    </el-dialog>\n\n    <!-- 添加用户权限对话框 -->\n    <el-dialog\n      title=\"添加用户权限\"\n      :visible.sync=\"addUserPermissionDialogVisible\"\n      width=\"30%\">\n      <el-form :model=\"newUserPermission\" label-width=\"80px\">\n        <el-form-item label=\"用户\">\n          <el-select v-model=\"newUserPermission.user_id\" placeholder=\"请选择用户\" style=\"width: 100%\">\n            <el-option\n              v-for=\"user in availableUsers\"\n              :key=\"user.id\"\n              :label=\"user.username\"\n              :value=\"user.id\">\n            </el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"编辑权限\">\n          <el-switch v-model=\"newUserPermission.can_edit\"></el-switch>\n        </el-form-item>\n        <el-form-item label=\"删除权限\">\n          <el-switch v-model=\"newUserPermission.can_delete\"></el-switch>\n        </el-form-item>\n      </el-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"addUserPermissionDialogVisible = false\">取消</el-button>\n        <el-button type=\"primary\" @click=\"addUserPermission\">确定</el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'ServiceManager',\n  data() {\n    return {\n      addForm: {\n        url: '',\n        title: '',\n        is_public: false\n      },\n      formRules: {\n        url: [\n          { required: true, message: '请输入页面地址', trigger: 'blur' },\n          { type: 'string', pattern: /^(https?:\\/\\/)?([\\da-z.-]+)\\.([a-z.]{2,6})([/\\w .-]*)*\\/?$/, \n            message: '请输入有效的URL地址', trigger: 'blur' }\n        ]\n      },\n      iframes: [],\n      selectedIdx: null,\n      loading: false,\n      error: null,\n      dialogVisible: false,\n      addDialogVisible: false,\n      deleteConfirmVisible: false,\n      deleteLoading: false,\n      indexToDelete: null,\n      \n      // 权限管理相关\n      permissionDialogVisible: false,\n      permissionLoading: false,\n      selectedService: null,\n      permissionForm: {\n        is_public: false,\n        permissions: []\n      },\n      \n      // 添加用户权限\n      addUserPermissionDialogVisible: false,\n      newUserPermission: {\n        user_id: null,\n        username: '',\n        can_view: true,\n        can_edit: false,\n        can_delete: false\n      },\n      availableUsers: []\n    }\n  },\n  computed: {\n    currentUser() {\n      return this.$store.state.user || {};\n    },\n    isAdmin() {\n      return this.currentUser && this.currentUser.is_admin;\n    }\n  },\n  mounted() {\n    this.loadServices();\n  },\n  methods: {\n    // 显示添加对话框\n    showAddDialog() {\n      this.addDialogVisible = true;\n      // 延迟聚焦到URL输入框\n      this.$nextTick(() => {\n        const inputEl = this.$refs.addForm.querySelector('input');\n        if (inputEl) {\n          inputEl.focus();\n        }\n      });\n    },\n    \n    // 重置表单\n    resetForm() {\n      this.addForm = {\n        url: '',\n        title: '',\n        is_public: false\n      };\n      if (this.$refs.addForm) {\n        this.$refs.addForm.resetFields();\n      }\n    },\n    \n    // 加载服务列表\n    async loadServices() {\n      try {\n        this.loading = true;\n        const response = await axios.get('/api/services');\n        this.iframes = response.data;\n        this.loading = false;\n      } catch (error) {\n        this.error = error.response && error.response.data && error.response.data.error ? error.response.data.error : '加载服务失败';\n        this.$message.error(this.error);\n        this.loading = false;\n      }\n    },\n    \n    // 添加服务\n    async addIframe() {\n      // 表单验证\n      this.$refs.addForm.validate(async (valid) => {\n        if (!valid) {\n          return false;\n        }\n        \n        try {\n          this.loading = true;\n          \n          // 如果URL不包含http或https，添加http://前缀\n          let url = this.addForm.url.trim();\n          if (!/^https?:\\/\\//i.test(url)) {\n            url = 'http://' + url;\n          }\n          \n          const response = await axios.post('/api/services', {\n            url: url,\n            title: this.addForm.title.trim(),\n            is_public: this.addForm.is_public\n          });\n          \n          this.iframes.push(response.data);\n          this.$message.success('添加成功');\n          this.addDialogVisible = false;\n          this.loading = false;\n        } catch (error) {\n          this.error = error.response && error.response.data && error.response.data.error ? error.response.data.error : '添加服务失败';\n          this.$message.error(this.error);\n          this.loading = false;\n        }\n      });\n    },\n    \n    // 处理卡片菜单命令\n    handleCommand(command, idx) {\n      if (command === 'view') {\n        this.selectIframe(idx);\n      } else if (command === 'delete') {\n        this.indexToDelete = idx;\n        this.deleteConfirmVisible = true;\n      } else if (command === 'share') {\n        this.showPermissionDialog(idx);\n      }\n    },\n    \n    // 确认删除\n    async confirmDelete() {\n      if (this.indexToDelete === null) return;\n      \n      this.deleteLoading = true;\n      await this.removeIframe(this.indexToDelete);\n      this.deleteLoading = false;\n      this.deleteConfirmVisible = false;\n      this.indexToDelete = null;\n    },\n    \n    // 删除服务\n    async removeIframe(idxToRemove) {\n      const serviceToRemove = this.iframes[idxToRemove];\n      \n      // 如果没有ID，说明是本地添加的未保存的服务\n      if (!serviceToRemove.id) {\n        this.iframes.splice(idxToRemove, 1);\n        if (this.selectedIdx === idxToRemove) {\n          this.closeIframeContent();\n        } else if (this.selectedIdx > idxToRemove) {\n          this.selectedIdx--;\n        }\n        this.$message.success('删除成功');\n        return;\n      }\n      \n      try {\n        // 设置删除中状态\n        this.$set(this.iframes[idxToRemove], 'deleting', true);\n        \n        await axios.delete(`/api/services/${serviceToRemove.id}`);\n        \n        this.iframes.splice(idxToRemove, 1);\n        if (this.selectedIdx === idxToRemove) {\n          this.closeIframeContent();\n        } else if (this.selectedIdx > idxToRemove) {\n          this.selectedIdx--;\n        }\n        this.$message.success('删除成功');\n      } catch (error) {\n        this.error = error.response && error.response.data && error.response.data.error ? error.response.data.error : '删除服务失败';\n        this.$message.error(this.error);\n        // 取消删除中状态\n        if (this.iframes[idxToRemove]) {\n          this.$set(this.iframes[idxToRemove], 'deleting', false);\n        }\n      }\n    },\n    \n    selectIframe(idx) {\n      this.selectedIdx = idx;\n      this.dialogVisible = true;\n    },\n    \n    closeIframeContent() {\n      this.dialogVisible = false;\n      this.selectedIdx = null;\n    },\n    \n    // 格式化URL显示\n    formatUrl(url) {\n      if (!url) return '';\n      try {\n        const urlObj = new URL(url);\n        return urlObj.hostname;\n      } catch (e) {\n        return url;\n      }\n    },\n    \n    // 格式化日期显示\n    formatDate(dateStr) {\n      if (!dateStr) return '';\n      const date = new Date(dateStr);\n      return date.toLocaleString('zh-CN', {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit',\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n    },\n    \n    // 权限相关方法\n    \n    // 判断当前用户是否可以删除服务\n    canDelete(service) {\n      if (!service) return false;\n      return this.isAdmin || service.user_id === this.currentUser.id;\n    },\n    \n    // 判断当前用户是否可以管理权限\n    canManagePermissions(service) {\n      if (!service) return false;\n      return this.isAdmin || service.user_id === this.currentUser.id;\n    },\n    \n    // 显示权限设置对话框\n    async showPermissionDialog(idx) {\n      if (idx === null || !this.iframes[idx]) return;\n      \n      this.selectedService = this.iframes[idx];\n      this.permissionLoading = true;\n      \n      try {\n        // 获取服务权限设置\n        const response = await axios.get(`/api/services/${this.selectedService.id}/permissions`);\n        \n        this.permissionForm = {\n          is_public: response.data.is_public,\n          permissions: response.data.permissions || []\n        };\n        \n        // 获取可用用户列表\n        await this.loadAvailableUsers();\n        \n        this.permissionDialogVisible = true;\n      } catch (error) {\n        this.error = error.response && error.response.data && error.response.data.error ? error.response.data.error : '获取权限设置失败';\n        this.$message.error(this.error);\n      } finally {\n        this.permissionLoading = false;\n      }\n    },\n    \n    // 加载可用用户列表\n    async loadAvailableUsers() {\n      try {\n        const response = await axios.get('/api/users');\n        // 过滤掉当前用户和已有权限的用户\n        this.availableUsers = response.data.filter(user => \n          user.id !== this.currentUser.id && \n          !this.permissionForm.permissions.some(p => p.user_id === user.id)\n        );\n      } catch (error) {\n        this.$message.error('获取用户列表失败');\n      }\n    },\n    \n    // 显示添加用户权限对话框\n    showAddUserPermission() {\n      // 重置表单\n      this.newUserPermission = {\n        user_id: null,\n        can_view: true,\n        can_edit: false,\n        can_delete: false\n      };\n      \n      // 更新可用用户列表\n      this.addUserPermissionDialogVisible = true;\n    },\n    \n    // 添加用户权限\n    addUserPermission() {\n      if (!this.newUserPermission.user_id) {\n        this.$message.warning('请选择用户');\n        return;\n      }\n      \n      // 查找对应的用户名\n      const selectedUser = this.availableUsers.find(u => u.id === this.newUserPermission.user_id);\n      if (!selectedUser) return;\n      \n      // 添加到权限列表\n      this.permissionForm.permissions.push({\n        user_id: this.newUserPermission.user_id,\n        username: selectedUser.username,\n        can_view: true,\n        can_edit: this.newUserPermission.can_edit,\n        can_delete: this.newUserPermission.can_delete\n      });\n      \n      // 从可用用户列表中移除\n      this.availableUsers = this.availableUsers.filter(u => u.id !== this.newUserPermission.user_id);\n      \n      this.addUserPermissionDialogVisible = false;\n    },\n    \n    // 移除用户权限\n    removeUserPermission(index) {\n      if (index < 0 || index >= this.permissionForm.permissions.length) return;\n      \n      // 将用户添加回可用用户列表\n      const removedPermission = this.permissionForm.permissions[index];\n      const existingUser = this.availableUsers.find(u => u.id === removedPermission.user_id);\n      \n      if (!existingUser) {\n        this.availableUsers.push({\n          id: removedPermission.user_id,\n          username: removedPermission.username\n        });\n      }\n      \n      // 从权限列表中移除\n      this.permissionForm.permissions.splice(index, 1);\n    },\n    \n    // 保存权限设置\n    async savePermissions() {\n      if (!this.selectedService) return;\n      \n      this.permissionLoading = true;\n      \n      try {\n        await axios.post(`/api/services/${this.selectedService.id}/permissions`, this.permissionForm);\n        \n        // 更新本地数据\n        const serviceIndex = this.iframes.findIndex(s => s.id === this.selectedService.id);\n        if (serviceIndex !== -1) {\n          this.$set(this.iframes[serviceIndex], 'is_public', this.permissionForm.is_public);\n        }\n        \n        this.$message.success('权限设置已保存');\n        this.permissionDialogVisible = false;\n      } catch (error) {\n        this.error = error.response && error.response.data && error.response.data.error ? error.response.data.error : '保存权限设置失败';\n        this.$message.error(this.error);\n      } finally {\n        this.permissionLoading = false;\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.service-manager {\n  padding: 20px;\n}\n\n.page-header {\n  margin-bottom: 24px;\n}\n\n.page-title {\n  font-size: 24px;\n  color: #303133;\n  margin: 0 0 8px 0;\n  font-weight: 500;\n}\n\n.page-description {\n  color: #606266;\n  font-size: 14px;\n}\n\n.actions-toolbar {\n  display: flex;\n  justify-content: flex-start;\n  margin-bottom: 20px;\n}\n\n.section-title {\n  margin: 25px 0 15px 0;\n  font-size: 16px;\n  font-weight: 500;\n  color: #5B6B8B;\n  display: flex;\n  align-items: center;\n}\n\n.section-title i {\n  margin-right: 8px;\n  font-size: 18px;\n}\n\n.card-container {\n  margin-bottom: 20px;\n  min-height: 120px;\n}\n\n.iframe-card {\n  margin-bottom: 15px;\n  cursor: pointer;\n  transition: all 0.3s;\n  border-radius: 8px;\n  overflow: hidden;\n  height: 150px;\n  display: flex;\n  flex-direction: column;\n}\n\n.iframe-card.is-active {\n  border: 2px solid #4B7BE5;\n  transform: translateY(-2px);\n}\n\n.iframe-card:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 6px 16px rgba(0, 0, 0, 0.1);\n}\n\n.card-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 12px 15px;\n  background: linear-gradient(to right, #4B7BE5, #5B8FF9);\n  color: white;\n}\n\n.iframe-title {\n  flex: 1;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  font-weight: 500;\n  font-size: 14px;\n}\n\n.card-menu {\n  color: white;\n}\n\n.el-dropdown-link {\n  cursor: pointer;\n  font-size: 16px;\n}\n\n.card-content {\n  padding: 15px;\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n}\n\n.url-preview {\n  color: #909399;\n  font-size: 13px;\n  margin-bottom: 10px;\n}\n\n.card-footer {\n  margin-top: auto;\n  font-size: 12px;\n  color: #909399;\n  display: flex;\n  justify-content: space-between;\n}\n\n.empty-tip {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  color: #909399;\n  height: 200px;\n  background-color: #fff;\n  border-radius: 8px;\n  box-shadow: 0 2px 12px 0 rgba(0,0,0,0.05);\n  padding: 20px;\n}\n\n.iframe-content {\n  width: 100%;\n  height: calc(100vh - 200px);\n  border: none;\n}\n\n.iframe-dialog .el-dialog__body {\n  padding: 0;\n}\n\n.form-tip {\n  color: #909399;\n  font-size: 12px;\n  margin-top: 4px;\n}\n\n.section-divider {\n  display: flex;\n  align-items: center;\n  margin: 24px 0;\n  color: #909399;\n  font-size: 14px;\n}\n\n.section-divider::before,\n.section-divider::after {\n  content: '';\n  flex: 1;\n  height: 1px;\n  background: #EBEEF5;\n}\n\n.section-divider::before {\n  margin-right: 12px;\n}\n\n.section-divider::after {\n  margin-left: 12px;\n}\n\n.user-permissions {\n  margin-bottom: 20px;\n}\n\n.user-permissions-header {\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 12px;\n}\n</style>\n"]}]}