{"remainingRequest":"D:\\gatekeeper\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\gatekeeper\\frontend\\src\\components\\TaskDetail.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\gatekeeper\\frontend\\src\\components\\TaskDetail.vue","mtime":1753233446888},{"path":"D:\\gatekeeper\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1747724956321},{"path":"D:\\gatekeeper\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1747724958365},{"path":"D:\\gatekeeper\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1747724956321},{"path":"D:\\gatekeeper\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1747724959585}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["TaskDetail.vue"],"names":[],"mappings":";AAkfile":"TaskDetail.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"task-detail\">\n    <div class=\"page-header\">\n      <div class=\"header-left\">\n        <h2 class=\"page-title\">{{ task.name }}</h2>\n        <el-tag :type=\"getTaskTypeTag(task.task_type)\" class=\"task-type-tag\">\n          {{ getTaskTypeLabel(task.task_type) }}\n        </el-tag>\n        <el-tag :type=\"task.is_enabled ? 'success' : 'danger'\" class=\"status-tag\">\n          {{ task.is_enabled ? '已启用' : '已禁用' }}\n        </el-tag>\n      </div>\n      <div class=\"header-actions\">\n        <el-button type=\"primary\" icon=\"el-icon-back\" @click=\"$router.push('/system/task-manager')\">\n          返回列表\n        </el-button>\n        <el-button \n          type=\"success\" \n          icon=\"el-icon-video-play\" \n          @click=\"executeTask\" \n          :disabled=\"!task.is_enabled\">\n          执行任务\n        </el-button>\n      </div>\n    </div>\n\n    <el-tabs v-model=\"activeTab\">\n      <el-tab-pane label=\"任务详情\" name=\"details\">\n        <el-card class=\"detail-card\">\n          <div slot=\"header\">\n            <span>基本信息</span>\n            <el-button \n              style=\"float: right; padding: 3px 0\" \n              type=\"text\" \n              icon=\"el-icon-edit\"\n              @click=\"$router.push('/system/task-manager')\"\n              v-if=\"canEdit\">\n              编辑\n            </el-button>\n          </div>\n          \n          <el-descriptions :column=\"2\" border>\n            <el-descriptions-item label=\"任务名称\">{{ task.name }}</el-descriptions-item>\n            <el-descriptions-item label=\"任务类型\">{{ getTaskTypeLabel(task.task_type) }}</el-descriptions-item>\n            <el-descriptions-item label=\"创建时间\">{{ formatDate(task.created_at) }}</el-descriptions-item>\n            <el-descriptions-item label=\"更新时间\">{{ formatDate(task.updated_at) }}</el-descriptions-item>\n            <el-descriptions-item label=\"状态\">\n              <el-tag :type=\"task.is_enabled ? 'success' : 'danger'\">\n                {{ task.is_enabled ? '已启用' : '已禁用' }}\n              </el-tag>\n            </el-descriptions-item>\n            <el-descriptions-item label=\"创建者\">{{ taskOwner }}</el-descriptions-item>\n            <el-descriptions-item label=\"描述\" :span=\"2\">\n              {{ task.description || '无描述' }}\n            </el-descriptions-item>\n          </el-descriptions>\n          \n          <!-- Jenkins任务特有信息 -->\n          <template v-if=\"task.task_type === 'jenkins'\">\n            <div class=\"section-divider\">Jenkins任务信息</div>\n            <el-descriptions :column=\"1\" border>\n              <el-descriptions-item label=\"Jenkins URL\">{{ task.jenkins_url }}</el-descriptions-item>\n              <el-descriptions-item label=\"Jenkins任务名称\">{{ task.jenkins_job_name }}</el-descriptions-item>\n              <el-descriptions-item label=\"Jenkins用户名\">{{ task.jenkins_username }}</el-descriptions-item>\n              <el-descriptions-item label=\"任务参数\" v-if=\"Object.keys(task.jenkins_parameters || {}).length > 0\">\n                <div class=\"params-table\">\n                  <el-table :data=\"formatJenkinsParams(task.jenkins_parameters)\" border size=\"small\">\n                    <el-table-column prop=\"name\" label=\"参数名\" width=\"180\"></el-table-column>\n                    <el-table-column prop=\"value\" label=\"默认值\"></el-table-column>\n                  </el-table>\n                </div>\n              </el-descriptions-item>\n            </el-descriptions>\n          </template>\n          \n          <!-- 脚本任务特有信息 -->\n          <template v-if=\"task.task_type === 'script'\">\n            <div class=\"section-divider\">脚本信息</div>\n            <el-descriptions :column=\"1\" border>\n              <el-descriptions-item label=\"脚本类型\">{{ task.script_type }}</el-descriptions-item>\n              <el-descriptions-item label=\"脚本内容\">\n                <pre class=\"code-block\">{{ task.script_content }}</pre>\n              </el-descriptions-item>\n            </el-descriptions>\n          </template>\n          \n          <!-- 命令任务特有信息 -->\n          <template v-if=\"task.task_type === 'command'\">\n            <div class=\"section-divider\">命令信息</div>\n            <el-descriptions :column=\"1\" border>\n              <el-descriptions-item label=\"命令内容\">\n                <pre class=\"code-block\">{{ task.command }}</pre>\n              </el-descriptions-item>\n            </el-descriptions>\n          </template>\n        </el-card>\n      </el-tab-pane>\n      \n      <el-tab-pane label=\"执行记录\" name=\"executions\">\n        <el-card class=\"executions-card\">\n          <div slot=\"header\">\n            <span>执行历史记录</span>\n          </div>\n          \n          <el-table\n            :data=\"executions\"\n            style=\"width: 100%\"\n            v-loading=\"loadingExecutions\"\n            border\n            stripe\n          >\n            <el-table-column prop=\"id\" label=\"ID\" width=\"80\"></el-table-column>\n            <el-table-column label=\"状态\" width=\"120\">\n              <template slot-scope=\"scope\">\n                <el-tag :type=\"getStatusType(scope.row.status)\">\n                  {{ getStatusLabel(scope.row.status) }}\n                </el-tag>\n              </template>\n            </el-table-column>\n            <el-table-column prop=\"start_time\" label=\"开始时间\" width=\"180\">\n              <template slot-scope=\"scope\">\n                {{ formatDate(scope.row.start_time) }}\n              </template>\n            </el-table-column>\n            <el-table-column prop=\"end_time\" label=\"结束时间\" width=\"180\">\n              <template slot-scope=\"scope\">\n                {{ scope.row.end_time ? formatDate(scope.row.end_time) : '进行中' }}\n              </template>\n            </el-table-column>\n            <el-table-column prop=\"result\" label=\"结果\" min-width=\"150\"></el-table-column>\n            <el-table-column label=\"操作\" width=\"200\" fixed=\"right\">\n              <template slot-scope=\"scope\">\n                <el-button\n                  size=\"mini\"\n                  type=\"primary\"\n                  icon=\"el-icon-view\"\n                  @click=\"viewExecution(scope.row)\"\n                >查看</el-button>\n                <el-button\n                  size=\"mini\"\n                  type=\"danger\"\n                  icon=\"el-icon-close\"\n                  @click=\"terminateExecution(scope.row)\"\n                  v-if=\"scope.row.status === 'pending' || scope.row.status === 'running'\"\n                >终止</el-button>\n              </template>\n            </el-table-column>\n          </el-table>\n          \n          <div class=\"no-data\" v-if=\"executions.length === 0 && !loadingExecutions\">\n            <i class=\"el-icon-info\"></i>\n            <span>暂无执行记录</span>\n          </div>\n        </el-card>\n      </el-tab-pane>\n      \n      <el-tab-pane label=\"权限管理\" name=\"permissions\" v-if=\"canManagePermissions\">\n        <el-card class=\"permissions-card\">\n          <div slot=\"header\">\n            <span>任务权限管理</span>\n            <el-button \n              style=\"float: right; padding: 3px 0\" \n              type=\"text\" \n              icon=\"el-icon-plus\"\n              @click=\"showAddPermissionDialog\">\n              添加用户权限\n            </el-button>\n          </div>\n          \n          <el-table\n            :data=\"permissions\"\n            style=\"width: 100%\"\n            v-loading=\"loadingPermissions\"\n            border\n            stripe\n          >\n            <el-table-column prop=\"username\" label=\"用户名\" width=\"180\"></el-table-column>\n            <el-table-column label=\"查看权限\" width=\"120\" align=\"center\">\n              <template slot-scope=\"scope\">\n                <el-switch\n                  v-model=\"scope.row.can_view\"\n                  active-color=\"#13ce66\"\n                  @change=\"updatePermission(scope.row)\"\n                  :disabled=\"isUpdatingPermission\"\n                ></el-switch>\n              </template>\n            </el-table-column>\n            <el-table-column label=\"执行权限\" width=\"120\" align=\"center\">\n              <template slot-scope=\"scope\">\n                <el-switch\n                  v-model=\"scope.row.can_execute\"\n                  active-color=\"#13ce66\"\n                  @change=\"updatePermission(scope.row)\"\n                  :disabled=\"isUpdatingPermission\"\n                ></el-switch>\n              </template>\n            </el-table-column>\n            <el-table-column label=\"终止权限\" width=\"120\" align=\"center\">\n              <template slot-scope=\"scope\">\n                <el-switch\n                  v-model=\"scope.row.can_terminate\"\n                  active-color=\"#13ce66\"\n                  @change=\"updatePermission(scope.row)\"\n                  :disabled=\"isUpdatingPermission\"\n                ></el-switch>\n              </template>\n            </el-table-column>\n            <el-table-column label=\"删除权限\" width=\"120\" align=\"center\">\n              <template slot-scope=\"scope\">\n                <el-switch\n                  v-model=\"scope.row.can_delete\"\n                  active-color=\"#13ce66\"\n                  @change=\"updatePermission(scope.row)\"\n                  :disabled=\"isUpdatingPermission\"\n                ></el-switch>\n              </template>\n            </el-table-column>\n            <el-table-column label=\"操作\" width=\"120\" fixed=\"right\">\n              <template slot-scope=\"scope\">\n                <el-button\n                  size=\"mini\"\n                  type=\"danger\"\n                  icon=\"el-icon-delete\"\n                  @click=\"removePermission(scope.row)\"\n                  :disabled=\"isUpdatingPermission\"\n                >删除</el-button>\n              </template>\n            </el-table-column>\n          </el-table>\n          \n          <div class=\"no-data\" v-if=\"permissions.length === 0 && !loadingPermissions\">\n            <i class=\"el-icon-info\"></i>\n            <span>暂无其他用户权限设置</span>\n          </div>\n        </el-card>\n      </el-tab-pane>\n    </el-tabs>\n    \n    <!-- 添加用户权限对话框 -->\n    <el-dialog\n      title=\"添加用户权限\"\n      :visible.sync=\"permissionDialogVisible\"\n      width=\"40%\">\n      <el-form :model=\"permissionForm\" label-width=\"100px\">\n        <el-form-item label=\"选择用户\" prop=\"user_id\">\n          <el-select v-model=\"permissionForm.user_id\" placeholder=\"请选择用户\" style=\"width: 100%\">\n            <el-option\n              v-for=\"user in availableUsers\"\n              :key=\"user.id\"\n              :label=\"user.username\"\n              :value=\"user.id\"\n            ></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"查看权限\">\n          <el-switch v-model=\"permissionForm.can_view\"></el-switch>\n        </el-form-item>\n        <el-form-item label=\"执行权限\">\n          <el-switch v-model=\"permissionForm.can_execute\"></el-switch>\n        </el-form-item>\n        <el-form-item label=\"终止权限\">\n          <el-switch v-model=\"permissionForm.can_terminate\"></el-switch>\n        </el-form-item>\n        <el-form-item label=\"删除权限\">\n          <el-switch v-model=\"permissionForm.can_delete\"></el-switch>\n        </el-form-item>\n      </el-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"permissionDialogVisible = false\">取消</el-button>\n        <el-button type=\"primary\" @click=\"addPermission\" :loading=\"isUpdatingPermission\">确定</el-button>\n      </span>\n    </el-dialog>\n\n    <!-- 参数编辑对话框 -->\n    <el-dialog\n      title=\"编辑任务参数\"\n      :visible.sync=\"paramsDialogVisible\"\n      width=\"750px\"\n      @close=\"cancelExecute\"\n    >\n      <div v-if=\"task.task_type === 'jenkins'\">\n        <div class=\"params-editor\">\n          <div v-for=\"(param, index) in executionParams\" :key=\"index\" class=\"param-item\">\n            <el-form :inline=\"false\" class=\"param-form\">\n              <el-form-item :label=\"param.name\">\n                <!-- 选择类型参数 -->\n                <el-select \n                  v-if=\"param.type === 'ChoiceParameterDefinition'\" \n                  v-model=\"param.value\" \n                  :placeholder=\"`选择${param.name}参数值`\"\n                  style=\"width: 100%\"\n                >\n                  <el-option \n                    v-for=\"choice in param.choices\" \n                    :key=\"choice\" \n                    :label=\"choice\" \n                    :value=\"choice\"\n                  ></el-option>\n                </el-select>\n                <!-- 布尔类型参数 -->\n                <el-switch \n                  v-else-if=\"param.type === 'BooleanParameterDefinition'\"\n                  v-model=\"param.value\"\n                  active-text=\"是\"\n                  inactive-text=\"否\"\n                ></el-switch>\n                <!-- 默认文本类型参数 -->\n                <el-input \n                  v-else\n                  v-model=\"param.value\" \n                  type=\"textarea\" \n                  :rows=\"5\"\n                  :placeholder=\"`输入${param.name}参数值`\"\n                  class=\"param-textarea\"\n                ></el-input>\n              </el-form-item>\n              <el-form-item v-if=\"param.description\" label=\"描述\">\n                <el-tooltip :content=\"param.description\" placement=\"top\">\n                  <span class=\"param-description\">{{ param.description }}</span>\n                </el-tooltip>\n              </el-form-item>\n            </el-form>\n          </div>\n          <div v-if=\"executionParams.length === 0\" class=\"no-params\">\n            <i class=\"el-icon-info\"></i>\n            <p>该任务没有定义参数</p>\n          </div>\n        </div>\n      </div>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"cancelExecute\">取消</el-button>\n        <el-button type=\"primary\" @click=\"confirmExecute\" :loading=\"executeLoading\">确认执行</el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'TaskDetail',\n  props: {\n    id: {\n      type: [Number, String],\n      required: true\n    }\n  },\n  data() {\n    return {\n      task: {},\n      activeTab: 'details',\n      loading: false,\n      \n      // 执行记录相关\n      executions: [],\n      loadingExecutions: false,\n      \n      // 权限相关\n      permissions: [],\n      loadingPermissions: false,\n      isUpdatingPermission: false,\n      permissionDialogVisible: false,\n      permissionForm: {\n        user_id: null,\n        can_view: true,\n        can_execute: false,\n        can_terminate: false,\n        can_delete: false\n      },\n      availableUsers: [],\n      \n      // 任务所有者\n      taskOwner: '',\n\n      // 参数对话框相关\n      paramsDialogVisible: false,\n      executionParams: [],\n      jobParameters: [],\n\n      // 执行任务加载状态\n      executeLoading: false,\n      deleteLoading: false,\n    };\n  },\n  computed: {\n    currentUser() {\n      return this.$store.state.user || {};\n    },\n    canEdit() {\n      return this.currentUser.is_admin || (this.task.user_id === this.currentUser.id);\n    },\n    canManagePermissions() {\n      return this.currentUser.is_admin || (this.task.user_id === this.currentUser.id);\n    }\n  },\n  created() {\n    this.loadTaskDetails();\n  },\n  watch: {\n    activeTab(newVal) {\n      if (newVal === 'executions') {\n        this.loadExecutions();\n      } else if (newVal === 'permissions' && this.canManagePermissions) {\n        this.loadPermissions();\n      }\n    }\n  },\n  methods: {\n    // 加载任务详情\n    async loadTaskDetails() {\n      this.loading = true;\n      try {\n        const response = await axios.get(`/api/tasks/${this.id}`);\n        this.task = response.data;\n        \n        // 加载任务所有者信息\n        if (this.task.user_id) {\n          try {\n            const userResponse = await axios.get(`/api/users/${this.task.user_id}`);\n            this.taskOwner = userResponse.data.username;\n          } catch (error) {\n            console.error('获取用户信息失败:', error);\n            // 直接显示用户ID，不添加前缀\n            this.taskOwner = String(this.task.user_id);\n          }\n        }\n        \n        this.loading = false;\n      } catch (error) {\n        this.$message.error('加载任务详情失败: ' + (error.response && error.response.data && error.response.data.error || error.message));\n        this.loading = false;\n        // 返回任务列表页\n        this.$router.push('/system/task-manager');\n      }\n    },\n    \n    // 加载执行记录\n    async loadExecutions() {\n      this.loadingExecutions = true;\n      try {\n        const response = await axios.get(`/api/tasks/${this.id}/executions`);\n        this.executions = response.data;\n        this.loadingExecutions = false;\n      } catch (error) {\n        this.$message.error('加载执行记录失败: ' + (error.response && error.response.data && error.response.data.error || error.message));\n        this.loadingExecutions = false;\n      }\n    },\n    \n    // 加载权限设置\n    async loadPermissions() {\n      this.loadingPermissions = true;\n      try {\n        const response = await axios.get(`/api/tasks/${this.id}/permissions`);\n        this.permissions = response.data.permissions || [];\n        \n        // 加载可用用户\n        await this.loadAvailableUsers();\n        \n        this.loadingPermissions = false;\n      } catch (error) {\n        this.$message.error('加载权限设置失败: ' + (error.response && error.response.data && error.response.data.error || error.message));\n        this.loadingPermissions = false;\n      }\n    },\n    \n    // 加载可用用户\n    async loadAvailableUsers() {\n      try {\n        const response = await axios.get('/api/users');\n        // 过滤掉已有权限的用户和当前任务所有者\n        this.availableUsers = response.data.filter(user => {\n          return user.id !== this.task.user_id && \n                 !this.permissions.some(p => p.user_id === user.id);\n        });\n      } catch (error) {\n        this.$message.error('加载用户列表失败: ' + (error.response && error.response.data && error.response.data.error || error.message));\n      }\n    },\n    \n    // 格式化Jenkins参数为表格数据\n    formatJenkinsParams(params) {\n      if (!params) return [];\n      return Object.keys(params).map(key => ({\n        name: key,\n        value: params[key]\n      }));\n    },\n    \n    // 执行任务\n    async executeTask() {\n      if (this.task.task_type === 'jenkins') {\n        // 获取任务参数\n        try {\n          this.executeLoading = true;\n          \n          // 获取Jenkins任务参数\n          const params = {\n            url: this.task.jenkins_url,\n            username: this.task.jenkins_username || '',\n            api_token: this.task.jenkins_api_token || '',\n            job_name: this.task.jenkins_job_name\n          };\n          \n          const response = await axios.get('/api/jenkins/job/parameters', { params });\n          \n          // 处理响应\n          if (response.data && Array.isArray(response.data)) {\n            this.jobParameters = response.data;\n            \n            // 准备执行参数，使用任务默认参数\n            this.executionParams = [];\n            const defaultParams = this.task.jenkins_parameters || {};\n            \n            // 将任务参数与默认值合并\n            response.data.forEach(param => {\n              this.executionParams.push({\n                name: param.name,\n                value: defaultParams[param.name] || param.default_value || '',\n                description: param.description || '',\n                type: param.type || 'string',\n                choices: param.choices || [] // 添加选项数组\n              });\n            });\n            \n            // 显示参数对话框\n            this.paramsDialogVisible = true;\n            this.executeLoading = false; // 重要：在显示对话框时重置loading状态\n          } else {\n            // 没有参数，直接执行\n            this.confirmExecute();\n          }\n        } catch (error) {\n          console.error('获取任务参数失败:', error);\n          this.$message.error('获取任务参数失败: ' + (error.response && error.response.data && error.response.data.error || error.message));\n          this.executeLoading = false;\n        }\n      } else {\n        // 非Jenkins任务，直接执行\n        this.confirmExecute();\n      }\n    },\n    \n    // 取消执行\n    cancelExecute() {\n      this.paramsDialogVisible = false;\n      this.executeLoading = false;\n      this.executionParams = [];\n    },\n    \n    // 确认执行\n    async confirmExecute() {\n      try {\n        this.executeLoading = true;\n        \n        // 构建参数\n        const parameters = {};\n        if (this.executionParams.length > 0) {\n          this.executionParams.forEach(param => {\n            parameters[param.name] = param.value;\n          });\n        }\n        \n        // 发送执行请求\n        const response = await axios.post(`/api/tasks/${this.id}/execute`, \n          { parameters: Object.keys(parameters).length > 0 ? parameters : undefined }, \n          {\n            headers: {\n              'Content-Type': 'application/json'\n            }\n          }\n        );\n        \n        this.$message.success('任务已提交执行');\n        \n        // 关闭对话框\n        this.paramsDialogVisible = false;\n        \n        // 跳转到执行详情页\n        this.$router.push(`/system/task-execution/${response.data.execution_id}`);\n      } catch (error) {\n        this.$message.error('执行任务失败: ' + (error.response && error.response.data && error.response.data.error || error.message));\n      } finally {\n        this.executeLoading = false;\n      }\n    },\n    \n    // 查看执行详情\n    viewExecution(execution) {\n      this.$router.push(`/system/task-execution/${execution.id}`);\n    },\n    \n    // 终止执行\n    async terminateExecution(execution) {\n      try {\n        await axios.post(`/api/executions/${execution.id}/terminate`);\n        \n        this.$message.success('任务已终止');\n        \n        // 重新加载执行记录\n        this.loadExecutions();\n      } catch (error) {\n        this.$message.error('终止任务失败: ' + (error.response && error.response.data && error.response.data.error || error.message));\n      }\n    },\n    \n    // 显示添加权限对话框\n    showAddPermissionDialog() {\n      this.permissionForm = {\n        user_id: null,\n        can_view: true,\n        can_execute: false,\n        can_terminate: false,\n        can_delete: false\n      };\n      this.permissionDialogVisible = true;\n    },\n    \n    // 添加权限\n    async addPermission() {\n      if (!this.permissionForm.user_id) {\n        this.$message.warning('请选择用户');\n        return;\n      }\n      \n      this.isUpdatingPermission = true;\n      \n      try {\n        // 获取用户名\n        const user = this.availableUsers.find(u => u.id === this.permissionForm.user_id);\n        const username = user ? user.username : '';\n        \n        // 添加到本地数据\n        const newPermission = {\n          ...this.permissionForm,\n          username\n        };\n        \n        this.permissions.push(newPermission);\n        \n        // 更新权限\n        await this.savePermissions();\n        \n        this.$message.success('权限添加成功');\n        this.permissionDialogVisible = false;\n        \n        // 更新可用用户列表\n        await this.loadAvailableUsers();\n      } catch (error) {\n        this.$message.error('添加权限失败: ' + (error.response && error.response.data && error.response.data.error || error.message));\n      } finally {\n        this.isUpdatingPermission = false;\n      }\n    },\n    \n    // 更新权限\n    async updatePermission(permission) {\n      this.isUpdatingPermission = true;\n      \n      try {\n        await this.savePermissions();\n        this.$message.success('权限更新成功');\n      } catch (error) {\n        this.$message.error('更新权限失败: ' + (error.response && error.response.data && error.response.data.error || error.message));\n        // 重新加载权限\n        await this.loadPermissions();\n      } finally {\n        this.isUpdatingPermission = false;\n      }\n    },\n    \n    // 移除权限\n    async removePermission(permission) {\n      this.isUpdatingPermission = true;\n      \n      try {\n        // 从本地数据中移除\n        const index = this.permissions.findIndex(p => p.user_id === permission.user_id);\n        if (index !== -1) {\n          this.permissions.splice(index, 1);\n        }\n        \n        // 更新权限\n        await this.savePermissions();\n        \n        this.$message.success('权限移除成功');\n        \n        // 更新可用用户列表\n        await this.loadAvailableUsers();\n      } catch (error) {\n        this.$message.error('移除权限失败: ' + (error.response && error.response.data && error.response.data.error || error.message));\n        // 重新加载权限\n        await this.loadPermissions();\n      } finally {\n        this.isUpdatingPermission = false;\n      }\n    },\n    \n    // 保存所有权限\n    async savePermissions() {\n      await axios.post(`/api/tasks/${this.id}/permissions`, {\n        permissions: this.permissions\n      });\n    },\n    \n    // 格式化日期\n    formatDate(dateString) {\n      if (!dateString) return '';\n      \n      // 创建日期对象\n      const date = new Date(dateString);\n      \n      // 获取UTC时间并添加8小时（东八区）\n      const utcTime = date.getTime();\n      const beijingTime = new Date(utcTime + 8 * 60 * 60 * 1000);\n      \n      // 格式化为本地时间字符串\n      return beijingTime.toLocaleString('zh-CN', {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit',\n        hour: '2-digit',\n        minute: '2-digit',\n        second: '2-digit',\n        hour12: false\n      });\n    },\n    \n    // 获取任务类型标签\n    getTaskTypeLabel(type) {\n      const types = {\n        'jenkins': 'Jenkins任务',\n        'script': '脚本任务',\n        'command': '命令任务'\n      };\n      return types[type] || type;\n    },\n    \n    // 获取任务类型标签样式\n    getTaskTypeTag(type) {\n      const types = {\n        'jenkins': 'primary',\n        'script': 'success',\n        'command': 'warning'\n      };\n      return types[type] || '';\n    },\n    \n    // 获取状态标签\n    getStatusLabel(status) {\n      const statuses = {\n        'pending': '待执行',\n        'running': '执行中',\n        'success': '成功',\n        'failed': '失败',\n        'terminated': '已终止'\n      };\n      return statuses[status] || status;\n    },\n    \n    // 获取状态标签样式\n    getStatusType(status) {\n      const types = {\n        'pending': 'info',\n        'running': 'primary',\n        'success': 'success',\n        'failed': 'danger',\n        'terminated': 'warning'\n      };\n      return types[status] || '';\n    }\n  }\n};\n</script>\n\n<style scoped>\n.task-detail {\n  padding: 20px;\n}\n\n.page-header {\n  margin-bottom: 20px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.header-left {\n  display: flex;\n  align-items: center;\n}\n\n.page-title {\n  font-size: 24px;\n  margin: 0;\n  margin-right: 15px;\n}\n\n.task-type-tag,\n.status-tag {\n  margin-right: 10px;\n}\n\n.detail-card,\n.executions-card,\n.permissions-card {\n  margin-bottom: 20px;\n}\n\n.section-divider {\n  font-size: 16px;\n  font-weight: bold;\n  margin: 20px 0 10px 0;\n  padding-bottom: 10px;\n  border-bottom: 1px solid #EBEEF5;\n}\n\n.code-block {\n  background-color: #f5f7fa;\n  border: 1px solid #e4e7ed;\n  border-radius: 4px;\n  padding: 10px;\n  font-family: monospace;\n  white-space: pre-wrap;\n  word-break: break-all;\n  max-height: 300px;\n  overflow-y: auto;\n}\n\n.no-data {\n  padding: 30px 0;\n  text-align: center;\n  color: #909399;\n}\n\n.no-data i {\n  font-size: 30px;\n  margin-bottom: 10px;\n  display: block;\n}\n\n.params-table {\n  max-width: 100%;\n}\n\n.params-table .el-table {\n  margin-bottom: 0;\n}\n\n.params-editor {\n  max-height: 400px;\n  overflow-y: auto;\n}\n\n.param-item {\n  margin-bottom: 10px;\n  padding: 10px;\n  border-bottom: 1px solid #eee;\n}\n\n.param-item:last-child {\n  border-bottom: none;\n}\n\n.param-form {\n  display: flex;\n  align-items: center;\n}\n\n.param-form .el-form-item {\n  margin-bottom: 0;\n}\n\n.no-params {\n  text-align: center;\n  padding: 20px;\n  color: #909399;\n}\n\n.no-params i {\n  font-size: 30px;\n  margin-bottom: 10px;\n}\n\n.param-description {\n  color: #606266;\n  font-size: 13px;\n  line-height: 1.4;\n  display: block;\n  word-break: break-word;\n}\n\n.param-textarea {\n  width: 100%;\n  font-family: Consolas, Monaco, monospace;\n  font-size: 14px;\n  line-height: 1.5;\n}\n\n.param-textarea >>> .el-textarea__inner {\n  border-radius: 4px;\n  border-color: #dcdfe6;\n  padding: 10px;\n  min-height: 120px !important;\n  transition: border-color 0.2s ease;\n}\n\n.param-textarea >>> .el-textarea__inner:focus {\n  border-color: #409EFF;\n}\n\n.param-textarea >>> .el-textarea__inner:hover {\n  border-color: #c0c4cc;\n}\n</style> "]}]}