{"remainingRequest":"D:\\gatekeeper\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\gatekeeper\\frontend\\src\\components\\ServerList.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\gatekeeper\\frontend\\src\\components\\ServerList.vue","mtime":1751270158081},{"path":"D:\\gatekeeper\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1747724956321},{"path":"D:\\gatekeeper\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1747724958365},{"path":"D:\\gatekeeper\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1747724956321},{"path":"D:\\gatekeeper\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1747724959585}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["ServerList.vue"],"names":[],"mappings":";AAkfile":"ServerList.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"server-list-container\">\n    <!-- 左侧分类树 -->\n    <div class=\"category-tree\" :class=\"{ 'category-tree-collapsed': isMobile && !showSidebar }\">\n      <div class=\"sidebar-toggle\" v-if=\"isMobile\" @click=\"toggleSidebar\">\n        <i :class=\"showSidebar ? 'el-icon-arrow-left' : 'el-icon-arrow-right'\"></i>\n      </div>\n      <el-tree\n        v-show=\"!isMobile || showSidebar\"\n        :data=\"categoryTree\"\n        :props=\"defaultProps\"\n        @node-click=\"handleNodeClick\"\n        default-expand-all\n        highlight-current>\n      </el-tree>\n    </div>\n\n    <!-- 右侧服务器列表 -->\n    <div class=\"server-list\">\n      <!-- 只有管理员才能看到添加服务器按钮 -->\n      <div class=\"toolbar\" v-if=\"isAdmin\">\n        <el-input\n          v-model=\"searchKeyword\"\n          placeholder=\"搜索服务器名称或IP\"\n          clearable\n          style=\"width: 260px; margin-right: 16px;\"\n          @input=\"currentPage = 1\"\n        >\n          <i slot=\"prefix\" class=\"el-icon-search\"></i>\n        </el-input>\n        <el-button type=\"primary\" @click=\"showAddDialog\">\n          <i class=\"el-icon-plus\"></i> 添加服务器\n        </el-button>\n      </div>\n\n      <el-table \n        :data=\"paginatedServers\" \n        style=\"width: 100%\"\n        :max-height=\"tableMaxHeight\"\n        @sort-change=\"handleSortChange\">\n        <el-table-column prop=\"name\" label=\"名称\" min-width=\"120\" sortable=\"custom\" />\n        <el-table-column prop=\"ip\" label=\"IP地址\" min-width=\"140\" sortable=\"custom\" />\n        <el-table-column prop=\"type\" label=\"类型\" min-width=\"100\" align=\"center\" sortable=\"custom\">\n          <template slot-scope=\"scope\">\n            <el-tag \n              :type=\"scope.row.type === 'Windows' ? 'primary' : 'success'\"\n              size=\"medium\"\n              effect=\"plain\">\n              {{ scope.row.type }}\n            </el-tag>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"状态\" min-width=\"150\" align=\"center\">\n          <template slot-scope=\"scope\">\n            <el-tag \n              v-if=\"scope.row.in_use\"\n              :type=\"scope.row.in_use_by_me ? 'warning' : 'danger'\"\n              size=\"medium\"\n              effect=\"plain\">\n              {{ scope.row.in_use_by_me ? '我正在使用中' : `${scope.row.in_use_by_username} 正在使用中` }}\n            </el-tag>\n            <el-tag \n              v-else \n              type=\"success\"\n              size=\"medium\"\n              effect=\"plain\">\n              空闲\n            </el-tag>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"操作\" min-width=\"280\" align=\"center\">\n          <template slot-scope=\"scope\">\n            <div class=\"action-buttons\">\n              <el-button \n                type=\"primary\" \n                size=\"mini\" \n                @click=\"connectServer(scope.row)\"\n                :disabled=\"scope.row.in_use && !scope.row.in_use_by_me\"\n                :type=\"scope.row.type === 'Windows' ? 'primary' : 'success'\"\n                plain>\n                <i :class=\"scope.row.type === 'Windows' ? 'el-icon-monitor' : 'el-icon-terminal'\"></i>\n                {{ scope.row.type === 'Windows' ? 'RDP连接' : 'SSH连接' }}\n              </el-button>\n              <el-button\n                v-if=\"isAdmin\"\n                type=\"warning\"\n                size=\"mini\"\n                @click=\"showEditDialog(scope.row)\"\n                plain>\n                <i class=\"el-icon-edit\"></i>\n                编辑\n              </el-button>\n              <el-button\n                v-if=\"isAdmin\"\n                type=\"danger\"\n                size=\"mini\"\n                @click=\"deleteServer(scope.row)\"\n                plain>\n                <i class=\"el-icon-delete\"></i>\n                删除\n              </el-button>\n            </div>\n          </template>\n        </el-table-column>\n      </el-table>\n\n      <!-- 分页组件 -->\n      <div class=\"pagination-container\">\n        <el-pagination\n          @size-change=\"handleSizeChange\"\n          @current-change=\"handleCurrentChange\"\n          :current-page=\"currentPage\"\n          :page-sizes=\"[8, 10, 20, 50, 100]\"\n          :page-size=\"pageSize\"\n          layout=\"total, sizes, prev, pager, next, jumper\"\n          :total=\"filteredServers.length\">\n        </el-pagination>\n      </div>\n\n      <!-- 添加/编辑服务器对话框 -->\n      <el-dialog \n        :title=\"isEdit ? '编辑服务器' : '添加服务器'\" \n        :visible.sync=\"dialogVisible\" \n        :width=\"isMobile ? '95%' : '600px'\"\n        custom-class=\"server-dialog\"\n        :close-on-click-modal=\"false\">\n        <el-form \n          :model=\"serverForm\" \n          ref=\"serverForm\" \n          :rules=\"rules\"\n          :label-width=\"isMobile ? '70px' : '80px'\"\n          class=\"server-form\">\n          <div class=\"form-row\" :class=\"{ 'form-row-mobile': isMobile }\">\n            <el-form-item label=\"名称\" prop=\"name\" class=\"form-item\">\n              <el-input v-model=\"serverForm.name\" placeholder=\"请输入服务器名称\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"IP地址\" prop=\"ip\" class=\"form-item\">\n              <el-input v-model=\"serverForm.ip\" placeholder=\"请输入IP地址\"></el-input>\n            </el-form-item>\n          </div>\n          <div class=\"form-row\" :class=\"{ 'form-row-mobile': isMobile }\">\n            <el-form-item label=\"类型\" prop=\"type\" class=\"form-item\">\n              <el-select v-model=\"serverForm.type\" placeholder=\"请选择服务器类型\" style=\"width: 100%\" @change=\"updateDefaultPort\">\n                <el-option label=\"Windows\" value=\"Windows\"></el-option>\n                <el-option label=\"Linux\" value=\"Linux\"></el-option>\n              </el-select>\n            </el-form-item>\n            <el-form-item label=\"端口\" prop=\"port\" class=\"form-item\">\n              <el-input v-model.number=\"serverForm.port\" type=\"number\" placeholder=\"请输入端口号\"></el-input>\n            </el-form-item>\n          </div>\n          <el-form-item label=\"凭据\" prop=\"credential_id\">\n            <el-select \n              v-model=\"serverForm.credential_id\" \n              placeholder=\"选择预设凭据\" \n              style=\"width: 100%\"\n              @change=\"handleCredentialChange\"\n              clearable>\n              <el-option \n                v-for=\"item in credentialOptions\" \n                :key=\"item.id\" \n                :label=\"item.name\" \n                :value=\"item.id\">\n                <span style=\"float: left\">{{ item.name }}</span>\n                <span style=\"float: right; color: #8492a6; font-size: 13px\">{{ item.username }}</span>\n              </el-option>\n            </el-select>\n            <div class=\"form-tip\">选择预设凭据后，用户名和密码将自动填充</div>\n          </el-form-item>\n          \n          <div class=\"form-credentials\" v-if=\"!serverForm.credential_id\">\n            <div class=\"form-row\" :class=\"{ 'form-row-mobile': isMobile }\">\n              <el-form-item label=\"用户名\" prop=\"username\" class=\"form-item\">\n                <el-input v-model=\"serverForm.username\" placeholder=\"请输入用户名\"></el-input>\n              </el-form-item>\n              <el-form-item :label=\"isEdit ? '新密码' : '密码'\" prop=\"password\" class=\"form-item\">\n                <el-input \n                  type=\"password\" \n                  v-model=\"serverForm.password\" \n                  placeholder=\"请输入密码\"\n                  show-password>\n                  <template slot=\"append\">\n                    <el-button @click=\"generatePassword\" type=\"text\">生成</el-button>\n                  </template>\n                </el-input>\n                <div class=\"form-tip\" v-if=\"isEdit\">留空表示不修改密码</div>\n              </el-form-item>\n            </div>\n          </div>\n          <div class=\"form-credentials\" v-else>\n            <div class=\"credential-info\">\n              <el-alert\n                title=\"使用预设凭据\"\n                type=\"info\"\n                :closable=\"false\">\n                <div>当前选择的预设凭据：<b>{{ selectedCredentialName }}</b></div>\n                <div>用户名：{{ selectedCredentialUsername }}</div>\n              </el-alert>\n            </div>\n          </div>\n\n          <el-form-item label=\"分类\" prop=\"category_id\">\n            <el-select \n              v-model=\"serverForm.category_id\" \n              placeholder=\"选择分类\" \n              style=\"width: 100%\"\n              @change=\"handleCategoryChange\">\n              <el-option \n                v-for=\"item in categories\" \n                :key=\"item.id\" \n                :label=\"item.name\" \n                :value=\"item.id\">\n              </el-option>\n            </el-select>\n          </el-form-item>\n        </el-form>\n        <div slot=\"footer\" class=\"dialog-footer\">\n          <el-button @click=\"dialogVisible = false\">取 消</el-button>\n          <el-button type=\"primary\" @click=\"submitForm\">确 定</el-button>\n        </div>\n      </el-dialog>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      servers: [],\n      dialogVisible: false,\n      serverForm: {\n        name: '',\n        ip: '',\n        type: 'Windows',\n        port: 3389,\n        username: '',\n        password: '',\n        credential_id: null,\n        category_id: null\n      },\n      rules: {\n        name: [{ required: true, message: '请输入服务器名称', trigger: 'blur' }],\n        ip: [{ required: true, message: '请输入IP地址', trigger: 'blur' }],\n        type: [{ required: true, message: '请选择服务器类型', trigger: 'change' }],\n        port: [\n          { required: true, message: '请输入端口号', trigger: 'blur' },\n          { type: 'number', message: '端口必须为数字', trigger: 'blur' },\n          { validator: (rule, value, callback) => {\n              if (value < 1 || value > 65535) {\n                callback(new Error('端口号必须在1-65535之间'));\n              } else {\n                callback();\n              }\n            }, \n            trigger: 'blur' \n          }\n        ],\n        username: [{ required: true, message: '请输入用户名', trigger: 'blur' }],\n        password: [{ \n          validator: (rule, value, callback) => {\n            if (!this.isEdit && !value) {\n              callback(new Error('请输入密码'));\n            } else {\n              callback();\n            }\n          },\n          trigger: 'blur' \n        }]\n      },\n      activeConnections: {},  // 存储活动连接的 token\n      heartbeatTimer: null,\n      refreshInterval: null,\n      categories: [],\n      selectedCategory: null,\n      categoryTree: [{\n        id: 'all',\n        label: '全部服务器'\n      }],\n      defaultProps: {\n        children: 'children',\n        label: 'label'\n      },\n      isEdit: false,\n      editingServerId: null,\n      // 新增分页相关\n      currentPage: 1,\n      pageSize: 8,\n      // 自适应相关\n      windowWidth: 0,\n      isMobile: false,\n      showSidebar: true,\n      tableMaxHeight: 500,\n      // 排序相关\n      sortColumn: null,\n      sortOrder: null,\n      // 凭据相关\n      credentials: [],\n      selectedCredentialName: '',\n      selectedCredentialUsername: '',\n      // 搜索关键字\n      searchKeyword: ''\n    }\n  },\n\n  computed: {\n    isAdmin() {\n      return this.$store.state.user && this.$store.state.user.is_admin;\n    },\n    isLoggedIn() {\n      return this.$store.state.user !== null;\n    },\n    filteredServers() {\n      let servers = [];\n      if (!this.selectedCategory || this.selectedCategory.id === 'all') {\n        servers = this.servers;\n      } else {\n        servers = this.servers.filter(server => server.category_id === this.selectedCategory.id);\n      }\n      if (this.searchKeyword) {\n        const keyword = this.searchKeyword.trim().toLowerCase();\n        servers = servers.filter(server =>\n          (server.name && server.name.toLowerCase().includes(keyword)) ||\n          (server.ip && server.ip.toLowerCase().includes(keyword))\n        );\n      }\n      return servers;\n    },\n    // 添加分页计算属性\n    paginatedServers() {\n      const start = (this.currentPage - 1) * this.pageSize;\n      const end = start + this.pageSize;\n      \n      // 对筛选后的服务器进行排序\n      let sortedServers = [...this.filteredServers];\n      if (this.sortColumn && this.sortOrder) {\n        sortedServers.sort((a, b) => {\n          const aValue = a[this.sortColumn];\n          const bValue = b[this.sortColumn];\n          \n          if (typeof aValue === 'string') {\n            if (this.sortOrder === 'ascending') {\n              return aValue.localeCompare(bValue);\n            } else {\n              return bValue.localeCompare(aValue);\n            }\n          } else {\n            if (this.sortOrder === 'ascending') {\n              return aValue - bValue;\n            } else {\n              return bValue - aValue;\n            }\n          }\n        });\n      }\n      \n      return sortedServers.slice(start, end);\n    },\n    credentialOptions() {\n      return this.credentials;\n    }\n  },\n\n  methods: {\n    updateDefaultPort() {\n      // 根据服务器类型更新默认端口\n      if (this.serverForm.type === 'Windows') {\n        this.serverForm.port = 3389;\n      } else if (this.serverForm.type === 'Linux') {\n        this.serverForm.port = 22;\n      }\n    },\n    \n    async loadServers() {\n      // 如果未登录，不加载服务器列表\n      if (!this.isLoggedIn) {\n        return;\n      }\n      \n      try {\n        const response = await this.axios.get('/api/servers');\n        this.servers = response.data;\n      } catch (error) {\n        // 只在登录状态下显示错误消息\n        if (this.isLoggedIn) {\n          this.$message.error('获取服务器列表失败');\n        }\n      }\n    },\n\n    showAddDialog() {\n      this.isEdit = false;\n      this.editingServerId = null;\n      this.dialogVisible = true;\n      this.serverForm = {\n        name: '',\n        ip: '',\n        type: 'Windows',\n        port: 3389, // 默认为Windows RDP端口\n        username: '',\n        password: '',\n        credential_id: null,\n        category_id: null\n      };\n      this.selectedCredentialName = '';\n      this.selectedCredentialUsername = '';\n    },\n\n    showEditDialog(server) {\n      this.isEdit = true;\n      this.editingServerId = server.id;\n      this.dialogVisible = true;\n      this.serverForm = {\n        name: server.name,\n        ip: server.ip,\n        type: server.type,\n        port: server.port || (server.type === 'Windows' ? 3389 : 22), // 根据类型设置默认端口\n        username: server.username,\n        password: '', // 编辑时密码为空\n        credential_id: server.credential_id || null,\n        category_id: server.category_id || null\n      };\n      \n      if (server.credential_id) {\n        this.handleCredentialChange(server.credential_id);\n      } else {\n        this.selectedCredentialName = '';\n        this.selectedCredentialUsername = '';\n      }\n    },\n\n    async loadCategories() {\n      try {\n        const response = await this.axios.get('/api/categories');\n        this.categories = response.data;\n        // 更新分类树\n        this.categoryTree = [{\n          id: 'all',\n          label: '全部服务器'\n        }, ...this.categories.map(category => ({\n          id: category.id,\n          label: category.name\n        }))];\n      } catch (error) {\n        this.$message.error('获取分类列表失败');\n      }\n    },\n\n    async loadCredentials() {\n      try {\n        const response = await this.axios.get('/api/credentials');\n        this.credentials = response.data;\n      } catch (error) {\n        console.error('获取凭据列表失败', error);\n      }\n    },\n\n    async submitForm() {\n      try {\n        const valid = await this.$refs.serverForm.validate();\n        if (valid) {\n          if (this.isEdit) {\n            // 更新服务器\n            try {\n              const response = await this.axios.put(`/api/servers/${this.editingServerId}`, this.serverForm);\n              if (response.data) {\n                this.$message.success('更新服务器成功');\n                this.dialogVisible = false;\n                this.loadServers();\n              }\n            } catch (error) {\n              const errorMsg = error.response && error.response.data && error.response.data.error \n                ? error.response.data.error \n                : '未知错误';\n              this.$message.error(`更新服务器失败: ${errorMsg}`);\n              console.error('更新服务器错误:', error);\n            }\n          } else {\n            // 添加服务器\n            try {\n              await this.axios.post('/api/servers', this.serverForm);\n              this.$message.success('添加服务器成功');\n              this.dialogVisible = false;\n              this.loadServers();\n            } catch (error) {\n              const errorMsg = error.response && error.response.data && error.response.data.error \n                ? error.response.data.error \n                : '未知错误';\n              this.$message.error(`添加服务器失败: ${errorMsg}`);\n              console.error('添加服务器错误:', error);\n            }\n          }\n        }\n      } catch (error) {\n        console.error('表单验证错误:', error);\n        this.$message.error('表单验证失败，请检查输入');\n      }\n    },\n\n    async deleteServer(server) {\n      try {\n        await this.$confirm('确认删除该服务器?', '提示', {\n          type: 'warning'\n        });\n        await this.axios.delete(`/api/servers/${server.id}`);\n        this.$message.success('删除成功');\n        this.loadServers();\n      } catch (error) {\n        if (error !== 'cancel') {\n          this.$message.error('删除失败');\n        }\n      }\n    },\n\n    async connectServer(server) {\n      try {\n        if (server.type === 'Windows') {\n          // 获取服务器密码（已加密）\n          const passwordResponse = await this.axios.get(`/api/servers/${server.id}/password`);\n          const encryptedPassword = passwordResponse.data.password;\n          const isEncrypted = passwordResponse.data.encrypted || false;\n\n          // 发起 RDP 连接\n          const response = await this.axios.post('/api/rdp/connect', {\n            server_id: server.id,\n            username: server.username,\n            password: encryptedPassword,\n            is_encrypted: isEncrypted\n          });\n\n          if (response.data.success) {\n            this.$message.success('RDP 连接请求已发送');\n          }\n        } else {\n          // Linux SSH 连接\n          await this.connectSSH(server);\n        }\n      } catch (error) {\n        this.$message.error('连接失败：' + (error.response && error.response.data ? error.response.data.error : error.message));\n      }\n    },\n\n    async connectSSH(server) {\n      try {\n        // 获取服务器密码（已加密）\n        const passwordResponse = await this.axios.get(`/api/servers/${server.id}/password`);\n        const encryptedPassword = passwordResponse.data.password;\n        const isEncrypted = passwordResponse.data.encrypted || false;\n        \n        // 通过后端API发起SSH连接请求\n        const response = await this.axios.post('/api/ssh/connect', {\n          server_id: server.id,\n          password: encryptedPassword,\n          is_encrypted: isEncrypted\n        });\n        \n        if (response.data.success) {\n          this.$message.success('SSH 连接请求已发送');\n        } else {\n          throw new Error(response.data.error || '启动SSH连接失败');\n        }\n      } catch (error) {\n        console.error('SSH连接错误:', error);\n        this.$message.error('SSH连接失败：' + (error.response && error.response.data ? error.response.data.error : error.message));\n      }\n    },\n\n    handleNodeClick(data) {\n      this.selectedCategory = data;\n      // 切换分类时重置分页\n      this.currentPage = 1;\n    },\n\n    // 新增分页方法\n    handleSizeChange(val) {\n      this.pageSize = val;\n      this.currentPage = 1; // 重置到第一页\n    },\n\n    handleCurrentChange(val) {\n      this.currentPage = val;\n    },\n    \n    // 排序方法\n    handleSortChange({ column, prop, order }) {\n      this.sortColumn = prop;\n      this.sortOrder = order;\n    },\n\n    // 自适应相关方法\n    handleResize() {\n      this.windowWidth = window.innerWidth;\n      this.isMobile = this.windowWidth < 768;\n      \n      // 在移动设备上默认隐藏侧边栏\n      if (this.isMobile && this.showSidebar) {\n        this.showSidebar = false;\n      }\n      \n      // 调整表格高度\n      this.calculateTableHeight();\n    },\n\n    toggleSidebar() {\n      this.showSidebar = !this.showSidebar;\n    },\n    \n    calculateTableHeight() {\n      // 计算表格可用高度，减去其他元素（分页、标题等）占用的空间\n      // 这个值需要根据实际布局调整\n      const otherHeight = this.isMobile ? 130 : 150;\n      this.tableMaxHeight = window.innerHeight - otherHeight;\n    },\n\n    handleCredentialChange(credentialId) {\n      if (credentialId) {\n        const credential = this.credentials.find(c => c.id === credentialId);\n        if (credential) {\n          this.selectedCredentialName = credential.name;\n          this.selectedCredentialUsername = credential.username;\n          \n          // 清空用户名和密码字段，因为将使用凭据\n          this.serverForm.username = '';\n          this.serverForm.password = '';\n        }\n      } else {\n        this.selectedCredentialName = '';\n        this.selectedCredentialUsername = '';\n      }\n    },\n    \n    generatePassword() {\n      // 生成8-12位的随机密码，包含大小写字母、数字和特殊字符\n      const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*()_+';\n      const length = 12;\n      let password = '';\n      \n      for (let i = 0; i < length; i++) {\n        const randomIndex = Math.floor(Math.random() * chars.length);\n        password += chars[randomIndex];\n      }\n      \n      this.serverForm.password = password;\n      \n      // 弹出提示\n      this.$message({\n        message: '已生成随机密码',\n        type: 'success',\n        duration: 2000\n      });\n    },\n\n    handleCategoryChange(categoryId) {\n      this.serverForm.category_id = categoryId;\n    }\n  },\n\n  created() {\n    this.loadCategories();  // 加载分类列表\n    this.loadServers();\n    this.loadCredentials();\n    // 每30秒刷新一次服务器列表\n    this.refreshInterval = setInterval(() => {\n      if (this.isLoggedIn) {\n        this.loadServers();\n        this.loadCategories();  // 同时刷新分类列表\n      }\n    }, 30000);\n  },\n\n  mounted() {\n    // 监听窗口大小变化\n    window.addEventListener('resize', this.handleResize);\n    // 初始化窗口大小\n    this.handleResize();\n  },\n\n  beforeDestroy() {\n    if (this.refreshInterval) {\n      clearInterval(this.refreshInterval);\n    }\n    if (this.heartbeatTimer) {\n      clearInterval(this.heartbeatTimer);\n    }\n    // 移除窗口大小监听\n    window.removeEventListener('resize', this.handleResize);\n  }\n}\n</script>\n\n<style scoped>\n.server-list-container {\n  display: flex;\n  height: 100%;\n  padding: 20px;\n  gap: 20px;\n}\n\n.category-tree {\n  width: 250px;\n  background-color: #fff;\n  border-radius: 4px;\n  padding: 20px;\n  box-shadow: 0 2px 12px 0 rgba(0,0,0,0.1);\n  transition: all 0.3s;\n  position: relative;\n}\n\n.category-tree-collapsed {\n  width: 50px;\n  padding: 20px 10px;\n}\n\n.sidebar-toggle {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  width: 30px;\n  height: 30px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  background-color: #f5f7fa;\n  border-radius: 50%;\n  z-index: 2;\n}\n\n.server-list {\n  flex: 1;\n  background-color: #fff;\n  border-radius: 4px;\n  padding: 20px;\n  box-shadow: 0 2px 12px 0 rgba(0,0,0,0.1);\n  overflow: auto;\n}\n\n.toolbar {\n  margin-bottom: 20px;\n}\n\n.terminal {\n  height: 100%;\n  background: #000;\n}\n\n/* 添加服务器对话框样式 */\n.server-dialog {\n  border-radius: 8px;\n}\n\n.server-form {\n  padding: 20px 20px 0;\n}\n\n.form-row {\n  display: flex;\n  justify-content: space-between;\n  gap: 20px;\n  margin-bottom: 22px;\n}\n\n/* 移动端表单样式 */\n.form-row-mobile {\n  flex-direction: column;\n  gap: 0;\n}\n\n.form-item {\n  flex: 1;\n  margin-bottom: 0;\n}\n\n.dialog-footer {\n  text-align: right;\n  padding: 10px 20px;\n  border-top: 1px solid #eee;\n}\n\n/* 分页容器样式 */\n.pagination-container {\n  margin-top: 20px;\n  display: flex;\n  justify-content: flex-end;\n}\n\n/* 操作按钮容器 */\n.action-buttons {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 5px;\n}\n\n:deep(.el-dialog__body) {\n  padding: 0;\n}\n\n:deep(.el-dialog__header) {\n  padding: 20px;\n  border-bottom: 1px solid #eee;\n}\n\n:deep(.el-dialog__title) {\n  font-size: 18px;\n  font-weight: 500;\n}\n\n:deep(.el-form-item__label) {\n  font-weight: 500;\n}\n\n:deep(.el-input__inner) {\n  border-radius: 4px;\n}\n\n/* 表格样式优化 */\n:deep(.el-table) {\n  border-radius: 8px;\n  overflow: hidden;\n}\n\n:deep(.el-table th) {\n  background-color: #f5f7fa !important;\n  color: #606266;\n  font-weight: 600;\n  height: 50px;\n  padding: 8px 0;\n}\n\n:deep(.el-table td) {\n  padding: 12px 0;\n}\n\n:deep(.el-table--enable-row-hover .el-table__body tr:hover > td) {\n  background-color: #f5f7fa;\n}\n\n/* 标签样式优化 */\n:deep(.el-tag) {\n  border-radius: 4px;\n  padding: 0 12px;\n  height: 28px;\n  line-height: 26px;\n  font-size: 13px;\n}\n\n/* 按钮样式优化 */\n:deep(.el-button--mini) {\n  padding: 7px 12px;\n  font-size: 12px;\n  border-radius: 4px;\n}\n\n:deep(.el-button--mini i) {\n  margin-right: 4px;\n  font-size: 14px;\n}\n\n/* 分类树样式优化 */\n:deep(.el-tree) {\n  background: none;\n  color: #606266;\n}\n\n:deep(.el-tree-node__content) {\n  height: 40px;\n  border-radius: 4px;\n}\n\n:deep(.el-tree-node__content:hover) {\n  background-color: #f5f7fa;\n}\n\n:deep(.el-tree-node.is-current > .el-tree-node__content) {\n  background-color: #ecf5ff;\n  color: #409EFF;\n}\n\n/* 工具栏样式 */\n.toolbar {\n  margin-bottom: 20px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.toolbar .el-button {\n  padding: 10px 20px;\n  font-size: 14px;\n  border-radius: 4px;\n  display: flex;\n  align-items: center;\n}\n\n.toolbar .el-button i {\n  margin-right: 6px;\n  font-size: 16px;\n}\n\n/* 移动端响应式样式 */\n@media screen and (max-width: 768px) {\n  .server-list-container {\n    flex-direction: column;\n    padding: 10px;\n  }\n  \n  .category-tree {\n    width: 100%;\n    max-height: 300px;\n    overflow-y: auto;\n    margin-bottom: 10px;\n  }\n  \n  .server-list {\n    padding: 15px;\n  }\n  \n  .toolbar {\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 10px;\n  }\n  \n  .form-row {\n    flex-direction: column;\n    gap: 0;\n  }\n  \n  .el-form-item {\n    margin-bottom: 18px;\n  }\n  \n  :deep(.el-pagination) {\n    padding: 0;\n    justify-content: center;\n    flex-wrap: wrap;\n    gap: 5px;\n  }\n}\n\n.form-tip {\n  font-size: 12px;\n  color: #909399;\n  margin-top: 5px;\n}\n\n.credential-info {\n  margin-bottom: 15px;\n}\n</style>"]}]}