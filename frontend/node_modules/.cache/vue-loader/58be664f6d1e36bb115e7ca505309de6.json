{"remainingRequest":"D:\\test\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\test\\frontend\\src\\components\\AuditLogs.vue?vue&type=style&index=0&id=811579ac&scoped=true&lang=css","dependencies":[{"path":"D:\\test\\frontend\\src\\components\\AuditLogs.vue","mtime":1747202411347},{"path":"D:\\test\\frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":1747724957296},{"path":"D:\\test\\frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1747724961113},{"path":"D:\\test\\frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":1747724958346},{"path":"D:\\test\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1747724956321},{"path":"D:\\test\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1747724959585}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQouYXVkaXQtbG9ncy1jb250YWluZXIgew0KICBwYWRkaW5nOiAyMHB4Ow0KfQ0KDQoucGFnZS1oZWFkZXIgew0KICBkaXNwbGF5OiBmbGV4Ow0KICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47DQogIGFsaWduLWl0ZW1zOiBjZW50ZXI7DQogIG1hcmdpbi1ib3R0b206IDIwcHg7DQp9DQoNCi5wYWdlLWhlYWRlciBoMSB7DQogIG1hcmdpbjogMDsNCiAgZm9udC1zaXplOiAyNHB4Ow0KICBjb2xvcjogIzMzMzsNCn0NCg0KLmZpbHRlci1zZWN0aW9uIHsNCiAgbWFyZ2luLWJvdHRvbTogMjBweDsNCiAgcGFkZGluZzogMTVweDsNCiAgYmFja2dyb3VuZC1jb2xvcjogI2Y5ZjlmOTsNCiAgYm9yZGVyLXJhZGl1czogNHB4Ow0KfQ0KDQoucGFnaW5hdGlvbi1jb250YWluZXIgew0KICBtYXJnaW4tdG9wOiAyMHB4Ow0KICB0ZXh0LWFsaWduOiByaWdodDsNCn0NCg=="},{"version":3,"sources":["AuditLogs.vue"],"names":[],"mappings":";AAqOA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"AuditLogs.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div class=\"audit-logs-container\">\r\n    <div class=\"page-header\">\r\n      <h1>审计日志</h1>\r\n      <div class=\"controls\">\r\n        <el-button type=\"primary\" size=\"small\" icon=\"el-icon-refresh\" @click=\"getLogs\">刷新</el-button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 过滤器 -->\r\n    <div class=\"filter-section\">\r\n      <el-form :inline=\"true\" :model=\"filters\" class=\"filter-form\">\r\n        <el-form-item label=\"用户:\">\r\n          <el-select v-model=\"filters.userId\" placeholder=\"所有用户\" clearable>\r\n            <el-option\r\n              v-for=\"user in users\"\r\n              :key=\"user.id\"\r\n              :label=\"user.username\"\r\n              :value=\"user.id\">\r\n            </el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"操作:\">\r\n          <el-select v-model=\"filters.action\" placeholder=\"所有操作\" clearable>\r\n            <el-option label=\"登录\" value=\"login\"></el-option>\r\n            <el-option label=\"注销\" value=\"logout\"></el-option>\r\n            <el-option label=\"连接服务器\" value=\"connect\"></el-option>\r\n            <el-option label=\"断开服务器\" value=\"disconnect\"></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"日期范围:\">\r\n          <el-date-picker\r\n            v-model=\"dateRange\"\r\n            type=\"daterange\"\r\n            range-separator=\"至\"\r\n            start-placeholder=\"开始日期\"\r\n            end-placeholder=\"结束日期\"\r\n            value-format=\"yyyy-MM-dd\"\r\n            @change=\"handleDateChange\">\r\n          </el-date-picker>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"handleFilter\">筛选</el-button>\r\n          <el-button @click=\"resetFilter\">重置</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n\r\n    <!-- 日志表格 -->\r\n    <el-table\r\n      v-loading=\"loading\"\r\n      :data=\"logs\"\r\n      border\r\n      stripe\r\n      style=\"width: 100%\">\r\n      <el-table-column\r\n        prop=\"username\"\r\n        label=\"用户名\"\r\n        width=\"120\">\r\n      </el-table-column>\r\n      <el-table-column\r\n        prop=\"action\"\r\n        label=\"操作类型\"\r\n        width=\"120\">\r\n        <template slot-scope=\"scope\">\r\n          <el-tag\r\n            :type=\"getActionTagType(scope.row.action)\">\r\n            {{ getActionText(scope.row.action) }}\r\n          </el-tag>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column\r\n        prop=\"server_name\"\r\n        label=\"服务器名称\"\r\n        width=\"150\">\r\n      </el-table-column>\r\n      <el-table-column\r\n        prop=\"server_ip\"\r\n        label=\"服务器IP\"\r\n        width=\"140\">\r\n      </el-table-column>\r\n      <el-table-column\r\n        prop=\"client_ip\"\r\n        label=\"客户端IP\"\r\n        width=\"140\">\r\n      </el-table-column>\r\n      <el-table-column\r\n        prop=\"details\"\r\n        label=\"详细信息\"\r\n        min-width=\"250\">\r\n      </el-table-column>\r\n      <el-table-column\r\n        prop=\"created_at\"\r\n        label=\"时间\"\r\n        width=\"170\"\r\n        :formatter=\"formatDate\">\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <!-- 分页 -->\r\n    <div class=\"pagination-container\">\r\n      <el-pagination\r\n        @size-change=\"handleSizeChange\"\r\n        @current-change=\"handleCurrentChange\"\r\n        :current-page=\"currentPage\"\r\n        :page-sizes=\"[8, 16, 24, 50]\"\r\n        :page-size=\"pageSize\"\r\n        layout=\"total, sizes, prev, pager, next, jumper\"\r\n        :total=\"total\">\r\n      </el-pagination>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'AuditLogs',\r\n  data() {\r\n    return {\r\n      logs: [],\r\n      loading: false,\r\n      users: [],\r\n      filters: {\r\n        userId: '',\r\n        action: '',\r\n        startDate: '',\r\n        endDate: ''\r\n      },\r\n      dateRange: [],\r\n      currentPage: 1,\r\n      pageSize: 8,\r\n      total: 0\r\n    };\r\n  },\r\n  created() {\r\n    this.getLogs();\r\n    this.getUsers();\r\n  },\r\n  methods: {\r\n    async getLogs() {\r\n      this.loading = true;\r\n      try {\r\n        const params = {\r\n          page: this.currentPage,\r\n          per_page: this.pageSize,\r\n          user_id: this.filters.userId || undefined,\r\n          action: this.filters.action || undefined,\r\n          start_date: this.filters.startDate || undefined,\r\n          end_date: this.filters.endDate || undefined\r\n        };\r\n\r\n        const response = await axios.get('/api/auth/logs', { params });\r\n        this.logs = response.data.logs;\r\n        this.total = response.data.total;\r\n      } catch (error) {\r\n        console.error('获取审计日志失败:', error);\r\n        this.$message.error('获取审计日志失败: ' + (error.response && error.response.data && error.response.data.error || error.message));\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n    async getUsers() {\r\n      try {\r\n        const response = await axios.get('/api/users');\r\n        this.users = response.data;\r\n      } catch (error) {\r\n        console.error('获取用户列表失败:', error);\r\n      }\r\n    },\r\n    handleFilter() {\r\n      this.currentPage = 1;\r\n      this.getLogs();\r\n    },\r\n    resetFilter() {\r\n      this.filters = {\r\n        userId: '',\r\n        action: '',\r\n        startDate: '',\r\n        endDate: ''\r\n      };\r\n      this.dateRange = [];\r\n      this.currentPage = 1;\r\n      this.getLogs();\r\n    },\r\n    handleDateChange(val) {\r\n      if (val) {\r\n        this.filters.startDate = val[0];\r\n        this.filters.endDate = val[1];\r\n      } else {\r\n        this.filters.startDate = '';\r\n        this.filters.endDate = '';\r\n      }\r\n    },\r\n    handleSizeChange(val) {\r\n      this.pageSize = val;\r\n      this.getLogs();\r\n    },\r\n    handleCurrentChange(val) {\r\n      this.currentPage = val;\r\n      this.getLogs();\r\n    },\r\n    formatDate(row, column) {\r\n      return row.created_at;\r\n    },\r\n    getActionText(action) {\r\n      const actions = {\r\n        'login': '登录',\r\n        'logout': '注销',\r\n        'connect': '连接',\r\n        'disconnect': '断开'\r\n      };\r\n      return actions[action] || action;\r\n    },\r\n    getActionTagType(action) {\r\n      const types = {\r\n        'login': 'success',\r\n        'logout': 'info',\r\n        'connect': 'primary',\r\n        'disconnect': 'warning'\r\n      };\r\n      return types[action] || '';\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.audit-logs-container {\r\n  padding: 20px;\r\n}\r\n\r\n.page-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.page-header h1 {\r\n  margin: 0;\r\n  font-size: 24px;\r\n  color: #333;\r\n}\r\n\r\n.filter-section {\r\n  margin-bottom: 20px;\r\n  padding: 15px;\r\n  background-color: #f9f9f9;\r\n  border-radius: 4px;\r\n}\r\n\r\n.pagination-container {\r\n  margin-top: 20px;\r\n  text-align: right;\r\n}\r\n</style> "]}]}