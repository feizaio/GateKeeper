{"remainingRequest":"E:\\github\\GateKeeper\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\github\\GateKeeper\\frontend\\src\\components\\Layout.vue?vue&type=script&lang=js","dependencies":[{"path":"E:\\github\\GateKeeper\\frontend\\src\\components\\Layout.vue","mtime":1742440565662},{"path":"E:\\github\\GateKeeper\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1742449391247},{"path":"E:\\github\\GateKeeper\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1742449393880},{"path":"E:\\github\\GateKeeper\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1742449391247},{"path":"E:\\github\\GateKeeper\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1742449394890}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQppbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnOw0KDQpleHBvcnQgZGVmYXVsdCB7DQogIG5hbWU6ICdMYXlvdXQnLA0KICBkYXRhKCkgew0KICAgIHJldHVybiB7DQogICAgICBjbGllbnRDb25uZWN0ZWQ6IGZhbHNlLA0KICAgICAgY2hlY2tpbmdTdGF0dXM6IGZhbHNlLA0KICAgICAgc2hvd0NsaWVudERpYWxvZzogZmFsc2UNCiAgICB9DQogIH0sDQogIGNvbXB1dGVkOiB7DQogICAgc3RhdHVzSWNvbigpIHsNCiAgICAgIGlmICh0aGlzLmNoZWNraW5nU3RhdHVzKSByZXR1cm4gJ2VsLWljb24tbG9hZGluZyc7DQogICAgICByZXR1cm4gdGhpcy5jbGllbnRDb25uZWN0ZWQgPyAnZWwtaWNvbi1zdWNjZXNzJyA6ICdlbC1pY29uLWVycm9yJzsNCiAgICB9LA0KICAgIHN0YXR1c1RleHQoKSB7DQogICAgICBpZiAodGhpcy5jaGVja2luZ1N0YXR1cykgcmV0dXJuICfmraPlnKjmo4Dmn6XlrqLmiLfnq6/nirbmgIEuLi4nOw0KICAgICAgcmV0dXJuIHRoaXMuY2xpZW50Q29ubmVjdGVkID8gJ+WuouaIt+err+W3sui/nuaOpScgOiAn5a6i5oi356uv5pyq6L+e5o6lJzsNCiAgICB9LA0KICAgIGlzTG9nZ2VkSW4oKSB7DQogICAgICByZXR1cm4gdGhpcy4kc3RvcmUuc3RhdGUudXNlciAhPT0gbnVsbDsNCiAgICB9DQogIH0sDQogIG1ldGhvZHM6IHsNCiAgICBhc3luYyBoYW5kbGVMb2dvdXQoKSB7DQogICAgICB0cnkgew0KICAgICAgICAvLyDosIPnlKjms6jplIDmjqXlj6MNCiAgICAgICAgYXdhaXQgYXhpb3MucG9zdCgnL2FwaS9hdXRoL2xvZ291dCcpOw0KICAgICAgICAvLyDmuIXpmaTmnKzlnLDlrZjlgqjnmoQgdG9rZW4g5ZKM55So5oi35L+h5oGvDQogICAgICAgIGxvY2FsU3RvcmFnZS5yZW1vdmVJdGVtKCd0b2tlbicpOw0KICAgICAgICB0aGlzLiRzdG9yZS5jb21taXQoJ1NFVF9VU0VSJywgbnVsbCk7DQogICAgICAgIC8vIOWBnOatoueKtuaAgeajgOafpQ0KICAgICAgICB0aGlzLnN0b3BTdGF0dXNDaGVjaygpOw0KICAgICAgICAvLyDph43nva7nirbmgIENCiAgICAgICAgdGhpcy5jbGllbnRDb25uZWN0ZWQgPSBmYWxzZTsNCiAgICAgICAgdGhpcy5jaGVja2luZ1N0YXR1cyA9IGZhbHNlOw0KICAgICAgICB0aGlzLnNob3dDbGllbnREaWFsb2cgPSBmYWxzZTsNCiAgICAgICAgLy8g6Lez6L2s5Yiw55m75b2V6aG16Z2iDQogICAgICAgIHRoaXMuJHJvdXRlci5wdXNoKCcvbG9naW4nKTsNCiAgICAgICAgdGhpcy4kbWVzc2FnZS5zdWNjZXNzKCfms6jplIDmiJDlip8nKTsNCiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgIGNvbnNvbGUuZXJyb3IoJ+azqOmUgOWksei0pTonLCBlcnJvcik7DQogICAgICAgIGNvbnN0IGVycm9yTWVzc2FnZSA9IGVycm9yLnJlc3BvbnNlICYmIGVycm9yLnJlc3BvbnNlLmRhdGEgJiYgZXJyb3IucmVzcG9uc2UuZGF0YS5lcnJvciB8fCBlcnJvci5tZXNzYWdlOw0KICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKCfms6jplIDlpLHotKU6ICcgKyBlcnJvck1lc3NhZ2UpOw0KICAgICAgfQ0KICAgIH0sDQogICAgYXN5bmMgY2hlY2tDbGllbnRTdGF0dXMoKSB7DQogICAgICAvLyDlpoLmnpzmnKrnmbvlvZXvvIzkuI3miafooYzmo4Dmn6UNCiAgICAgIGlmICghdGhpcy5pc0xvZ2dlZEluKSB7DQogICAgICAgIHJldHVybjsNCiAgICAgIH0NCiAgICAgIA0KICAgICAgdHJ5IHsNCiAgICAgICAgdGhpcy5jaGVja2luZ1N0YXR1cyA9IHRydWU7DQogICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgYXhpb3MuZ2V0KCcvYXBpL2NsaWVudC9zdGF0dXMnKTsNCiAgICAgICAgDQogICAgICAgIC8vIOebtOaOpeS9v+eUqOacjeWKoeWZqOi/lOWbnueahOeKtuaAgQ0KICAgICAgICB0aGlzLmNsaWVudENvbm5lY3RlZCA9IHJlc3BvbnNlLmRhdGEuaXNfY29ubmVjdGVkOw0KICAgICAgICANCiAgICAgICAgLy8g5Y+q5pyJ5Zyo5pyq6L+e5o6l5pe25omN5pi+56S65LiL6L295a+56K+d5qGGDQogICAgICAgIGlmICghdGhpcy5jbGllbnRDb25uZWN0ZWQgJiYgIXRoaXMuc2hvd0NsaWVudERpYWxvZykgew0KICAgICAgICAgIHRoaXMuc2hvd0NsaWVudERpYWxvZyA9IHRydWU7DQogICAgICAgIH0NCiAgICAgICAgDQogICAgICAgIGNvbnNvbGUubG9nKCflrqLmiLfnq6/nirbmgIE6Jywgew0KICAgICAgICAgIGN1cnJlbnRJcDogcmVzcG9uc2UuZGF0YS5jdXJyZW50X2lwLA0KICAgICAgICAgIGlzQ29ubmVjdGVkOiByZXNwb25zZS5kYXRhLmlzX2Nvbm5lY3RlZCwNCiAgICAgICAgICBjbGllbnRzOiByZXNwb25zZS5kYXRhLmNsaWVudHMNCiAgICAgICAgfSk7DQogICAgICAgIA0KICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgY29uc29sZS5lcnJvcign5qOA5p+l5a6i5oi356uv54q25oCB5aSx6LSlOicsIGVycm9yKTsNCiAgICAgICAgdGhpcy5jbGllbnRDb25uZWN0ZWQgPSBmYWxzZTsNCiAgICAgIH0gZmluYWxseSB7DQogICAgICAgIHRoaXMuY2hlY2tpbmdTdGF0dXMgPSBmYWxzZTsNCiAgICAgIH0NCiAgICB9LA0KICAgIGRvd25sb2FkQ2xpZW50KCkgew0KICAgICAgd2luZG93LmxvY2F0aW9uLmhyZWYgPSAnL3N0YXRpYy9mb3J0cmVzc19jbGllbnQuZXhlJzsNCiAgICAgIHRoaXMuc2hvd0NsaWVudERpYWxvZyA9IGZhbHNlOw0KICAgIH0sDQogICAgc3RhcnRTdGF0dXNDaGVjaygpIHsNCiAgICAgIC8vIOWmguaenOacqueZu+W9le+8jOS4jeWQr+WKqOajgOafpQ0KICAgICAgaWYgKCF0aGlzLmlzTG9nZ2VkSW4pIHsNCiAgICAgICAgcmV0dXJuOw0KICAgICAgfQ0KICAgICAgDQogICAgICAvLyDlpoLmnpzlt7Lnu4/mnInlrprml7blmajlnKjov5DooYzvvIzlhYjmuIXpmaTlroMNCiAgICAgIHRoaXMuc3RvcFN0YXR1c0NoZWNrKCk7DQogICAgICANCiAgICAgIC8vIOabtOmikee5geWcsOajgOafpeeKtuaAge+8iOavjzEw56eS5LiA5qyh77yJDQogICAgICB0aGlzLnN0YXR1c0NoZWNrSW50ZXJ2YWwgPSBzZXRJbnRlcnZhbCgoKSA9PiB7DQogICAgICAgIHRoaXMuY2hlY2tDbGllbnRTdGF0dXMoKTsNCiAgICAgIH0sIDEwMDAwKTsNCiAgICAgIA0KICAgICAgLy8g56uL5Y2z5omn6KGM5LiA5qyh5qOA5p+lDQogICAgICB0aGlzLmNoZWNrQ2xpZW50U3RhdHVzKCk7DQogICAgfSwNCiAgICBzdG9wU3RhdHVzQ2hlY2soKSB7DQogICAgICBpZiAodGhpcy5zdGF0dXNDaGVja0ludGVydmFsKSB7DQogICAgICAgIGNsZWFySW50ZXJ2YWwodGhpcy5zdGF0dXNDaGVja0ludGVydmFsKTsNCiAgICAgICAgdGhpcy5zdGF0dXNDaGVja0ludGVydmFsID0gbnVsbDsNCiAgICAgIH0NCiAgICB9DQogIH0sDQogIHdhdGNoOiB7DQogICAgLy8g55uR5ZCs55m75b2V54q25oCB5Y+Y5YyWDQogICAgaXNMb2dnZWRJbihuZXdWYWx1ZSkgew0KICAgICAgaWYgKG5ld1ZhbHVlKSB7DQogICAgICAgIHRoaXMuc3RhcnRTdGF0dXNDaGVjaygpOw0KICAgICAgfSBlbHNlIHsNCiAgICAgICAgdGhpcy5zdG9wU3RhdHVzQ2hlY2soKTsNCiAgICAgIH0NCiAgICB9DQogIH0sDQogIG1vdW50ZWQoKSB7DQogICAgLy8g5Y+q5Zyo55m75b2V54q25oCB5LiL5ZCv5Yqo5qOA5p+lDQogICAgaWYgKHRoaXMuaXNMb2dnZWRJbikgew0KICAgICAgdGhpcy5zdGFydFN0YXR1c0NoZWNrKCk7DQogICAgfQ0KICB9LA0KICBiZWZvcmVEZXN0cm95KCkgew0KICAgIHRoaXMuc3RvcFN0YXR1c0NoZWNrKCk7DQogIH0NCn0NCg=="},{"version":3,"sources":["Layout.vue"],"names":[],"mappings":";AAoEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Layout.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div class=\"layout\">\r\n    <el-container>\r\n      <el-header height=\"50px\">\r\n        <div class=\"header-content\">\r\n          <div class=\"client-status\">\r\n            <el-tooltip :content=\"statusText\" placement=\"bottom\">\r\n              <i :class=\"['client-icon', statusIcon]\"></i>\r\n            </el-tooltip>\r\n          </div>\r\n          <span class=\"header-title\">堡垒机管理系统</span>\r\n          <!-- 添加注销按钮 -->\r\n          <el-button type=\"text\" class=\"logout-button\" @click=\"handleLogout\">\r\n            <i class=\"el-icon-switch-button\"></i>\r\n            注销\r\n          </el-button>\r\n        </div>\r\n      </el-header>\r\n      \r\n      <el-container>\r\n        <el-aside width=\"200px\">\r\n          <div class=\"logo\">堡垒机</div>\r\n          <el-menu\r\n            :default-active=\"$route.path\"\r\n            class=\"el-menu-vertical\"\r\n            router\r\n          >\r\n            <el-menu-item index=\"/\">\r\n              <i class=\"el-icon-monitor\"></i>\r\n              <span>服务器管理</span>\r\n            </el-menu-item>\r\n            \r\n            <el-submenu index=\"2\">\r\n              <template slot=\"title\">\r\n                <i class=\"el-icon-setting\"></i>\r\n                <span>系统设置</span>\r\n              </template>\r\n              <el-menu-item index=\"/users\">\r\n                <i class=\"el-icon-user\"></i>\r\n                <span>用户管理</span>\r\n              </el-menu-item>\r\n            </el-submenu>\r\n          </el-menu>\r\n        </el-aside>\r\n        \r\n        <el-main>\r\n          <router-view></router-view>\r\n        </el-main>\r\n      </el-container>\r\n    </el-container>\r\n\r\n    <!-- 客户端下载提示对话框 -->\r\n    <el-dialog\r\n      title=\"需要安装客户端\"\r\n      :visible.sync=\"showClientDialog\"\r\n      width=\"400px\">\r\n      <span>需要安装堡垒机客户端才能使用远程连接功能。</span>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"showClientDialog = false\">取消</el-button>\r\n        <el-button type=\"primary\" @click=\"downloadClient\">\r\n          下载客户端\r\n        </el-button>\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'Layout',\r\n  data() {\r\n    return {\r\n      clientConnected: false,\r\n      checkingStatus: false,\r\n      showClientDialog: false\r\n    }\r\n  },\r\n  computed: {\r\n    statusIcon() {\r\n      if (this.checkingStatus) return 'el-icon-loading';\r\n      return this.clientConnected ? 'el-icon-success' : 'el-icon-error';\r\n    },\r\n    statusText() {\r\n      if (this.checkingStatus) return '正在检查客户端状态...';\r\n      return this.clientConnected ? '客户端已连接' : '客户端未连接';\r\n    },\r\n    isLoggedIn() {\r\n      return this.$store.state.user !== null;\r\n    }\r\n  },\r\n  methods: {\r\n    async handleLogout() {\r\n      try {\r\n        // 调用注销接口\r\n        await axios.post('/api/auth/logout');\r\n        // 清除本地存储的 token 和用户信息\r\n        localStorage.removeItem('token');\r\n        this.$store.commit('SET_USER', null);\r\n        // 停止状态检查\r\n        this.stopStatusCheck();\r\n        // 重置状态\r\n        this.clientConnected = false;\r\n        this.checkingStatus = false;\r\n        this.showClientDialog = false;\r\n        // 跳转到登录页面\r\n        this.$router.push('/login');\r\n        this.$message.success('注销成功');\r\n      } catch (error) {\r\n        console.error('注销失败:', error);\r\n        const errorMessage = error.response && error.response.data && error.response.data.error || error.message;\r\n        this.$message.error('注销失败: ' + errorMessage);\r\n      }\r\n    },\r\n    async checkClientStatus() {\r\n      // 如果未登录，不执行检查\r\n      if (!this.isLoggedIn) {\r\n        return;\r\n      }\r\n      \r\n      try {\r\n        this.checkingStatus = true;\r\n        const response = await axios.get('/api/client/status');\r\n        \r\n        // 直接使用服务器返回的状态\r\n        this.clientConnected = response.data.is_connected;\r\n        \r\n        // 只有在未连接时才显示下载对话框\r\n        if (!this.clientConnected && !this.showClientDialog) {\r\n          this.showClientDialog = true;\r\n        }\r\n        \r\n        console.log('客户端状态:', {\r\n          currentIp: response.data.current_ip,\r\n          isConnected: response.data.is_connected,\r\n          clients: response.data.clients\r\n        });\r\n        \r\n      } catch (error) {\r\n        console.error('检查客户端状态失败:', error);\r\n        this.clientConnected = false;\r\n      } finally {\r\n        this.checkingStatus = false;\r\n      }\r\n    },\r\n    downloadClient() {\r\n      window.location.href = '/static/fortress_client.exe';\r\n      this.showClientDialog = false;\r\n    },\r\n    startStatusCheck() {\r\n      // 如果未登录，不启动检查\r\n      if (!this.isLoggedIn) {\r\n        return;\r\n      }\r\n      \r\n      // 如果已经有定时器在运行，先清除它\r\n      this.stopStatusCheck();\r\n      \r\n      // 更频繁地检查状态（每10秒一次）\r\n      this.statusCheckInterval = setInterval(() => {\r\n        this.checkClientStatus();\r\n      }, 10000);\r\n      \r\n      // 立即执行一次检查\r\n      this.checkClientStatus();\r\n    },\r\n    stopStatusCheck() {\r\n      if (this.statusCheckInterval) {\r\n        clearInterval(this.statusCheckInterval);\r\n        this.statusCheckInterval = null;\r\n      }\r\n    }\r\n  },\r\n  watch: {\r\n    // 监听登录状态变化\r\n    isLoggedIn(newValue) {\r\n      if (newValue) {\r\n        this.startStatusCheck();\r\n      } else {\r\n        this.stopStatusCheck();\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    // 只在登录状态下启动检查\r\n    if (this.isLoggedIn) {\r\n      this.startStatusCheck();\r\n    }\r\n  },\r\n  beforeDestroy() {\r\n    this.stopStatusCheck();\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.layout {\r\n  height: 100vh;\r\n}\r\n\r\n.el-aside {\r\n  background-color: #304156;\r\n  height: 100vh;\r\n}\r\n\r\n.el-menu {\r\n  border-right: none;\r\n  background-color: transparent;\r\n}\r\n\r\n.el-menu-item {\r\n  color: #fff;\r\n}\r\n\r\n.el-menu-item:hover, .el-menu-item.is-active {\r\n  background-color: #263445;\r\n}\r\n\r\n.el-submenu {\r\n  color: #fff;\r\n}\r\n\r\n.el-submenu /deep/ .el-submenu__title {\r\n  color: #fff;\r\n}\r\n\r\n.el-submenu /deep/ .el-submenu__title:hover {\r\n  background-color: #263445;\r\n}\r\n\r\n.header-content {\r\n  display: flex;\r\n  align-items: center;\r\n  height: 100%;\r\n}\r\n\r\n.client-status {\r\n  margin-right: 20px;\r\n}\r\n\r\n.client-icon {\r\n  font-size: 20px;\r\n}\r\n\r\n.client-icon.el-icon-success {\r\n  color: #67C23A;\r\n}\r\n\r\n.client-icon.el-icon-error {\r\n  color: #F56C6C;\r\n}\r\n\r\n.client-icon.el-icon-loading {\r\n  color: #409EFF;\r\n}\r\n\r\n.header-title {\r\n  color: #303133;\r\n  font-size: 18px;\r\n}\r\n\r\n.logout-button {\r\n  margin-left: auto;\r\n  color: #F56C6C;\r\n}\r\n</style>"]}]}