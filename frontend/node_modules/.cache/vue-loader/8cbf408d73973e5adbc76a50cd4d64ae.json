{"remainingRequest":"D:\\gatekeeper\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\gatekeeper\\frontend\\src\\components\\Dashboard.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\gatekeeper\\frontend\\src\\components\\Dashboard.vue","mtime":1751424519770},{"path":"D:\\gatekeeper\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1747724956321},{"path":"D:\\gatekeeper\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1747724958365},{"path":"D:\\gatekeeper\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1747724956321},{"path":"D:\\gatekeeper\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1747724959585}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQppbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnOw0KaW1wb3J0ICogYXMgZWNoYXJ0cyBmcm9tICdlY2hhcnRzJzsNCg0KZXhwb3J0IGRlZmF1bHQgew0KICBuYW1lOiAnRGFzaGJvYXJkJywNCiAgZGF0YSgpIHsNCiAgICByZXR1cm4gew0KICAgICAgZGFzaGJvYXJkRGF0YTogew0KICAgICAgICB0b3RhbF9zZXJ2ZXJzOiAwLA0KICAgICAgICB0b3RhbF91c2VyczogMCwNCiAgICAgICAgdG9kYXlfYWN0aXZpdGllczogMCwNCiAgICAgICAgYWxlcnRzOiAwLA0KICAgICAgICBzZXJ2ZXJfdHlwZV9kaXN0cmlidXRpb246IHt9LA0KICAgICAgICBhY3Rpdml0eV90cmVuZDogW10sDQogICAgICAgIHJlY2VudF9hY3Rpdml0aWVzOiBbXQ0KICAgICAgfSwNCiAgICAgIGFzc2V0VHlwZUNoYXJ0OiBudWxsLA0KICAgICAgYWN0aXZpdHlUcmVuZENoYXJ0OiBudWxsLA0KICAgICAgcmVmcmVzaEludGVydmFsOiBudWxsDQogICAgfTsNCiAgfSwNCiAgbW91bnRlZCgpIHsNCiAgICB0aGlzLmZldGNoRGFzaGJvYXJkRGF0YSgpOw0KICAgIC8vIOavjzYw56eS5Yi35paw5LiA5qyh5pWw5o2uDQogICAgdGhpcy5yZWZyZXNoSW50ZXJ2YWwgPSBzZXRJbnRlcnZhbCgoKSA9PiB7DQogICAgICB0aGlzLmZldGNoRGFzaGJvYXJkRGF0YSgpOw0KICAgIH0sIDYwMDAwKTsNCiAgICANCiAgICAvLyDnm5HlkKznqpflj6PlpKflsI/lj5jljJbvvIzph43mlrDosIPmlbTlm77ooajlpKflsI8NCiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigncmVzaXplJywgdGhpcy5yZXNpemVDaGFydHMpOw0KICB9LA0KICBiZWZvcmVEZXN0cm95KCkgew0KICAgIC8vIOe7hOS7tumUgOavgeWJjea4hemZpOWumuaXtuWZqA0KICAgIGlmICh0aGlzLnJlZnJlc2hJbnRlcnZhbCkgew0KICAgICAgY2xlYXJJbnRlcnZhbCh0aGlzLnJlZnJlc2hJbnRlcnZhbCk7DQogICAgfQ0KICAgIA0KICAgIC8vIOenu+mZpOS6i+S7tuebkeWQrA0KICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdyZXNpemUnLCB0aGlzLnJlc2l6ZUNoYXJ0cyk7DQogICAgDQogICAgLy8g6ZSA5q+B5Zu+6KGo5a6e5L6LDQogICAgaWYgKHRoaXMuYXNzZXRUeXBlQ2hhcnQpIHsNCiAgICAgIHRoaXMuYXNzZXRUeXBlQ2hhcnQuZGlzcG9zZSgpOw0KICAgIH0NCiAgICBpZiAodGhpcy5hY3Rpdml0eVRyZW5kQ2hhcnQpIHsNCiAgICAgIHRoaXMuYWN0aXZpdHlUcmVuZENoYXJ0LmRpc3Bvc2UoKTsNCiAgICB9DQogIH0sDQogIG1ldGhvZHM6IHsNCiAgICBhc3luYyBmZXRjaERhc2hib2FyZERhdGEoKSB7DQogICAgICB0cnkgew0KICAgICAgICAvLyDkvb/nlKjnnJ/lrp5BUEnosIPnlKjojrflj5bmlbDmja4NCiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBheGlvcy5nZXQoJy9hcGkvZGFzaGJvYXJkL3N0YXRzJyk7DQogICAgICAgIHRoaXMuZGFzaGJvYXJkRGF0YSA9IHJlc3BvbnNlLmRhdGE7DQogICAgICAgIA0KICAgICAgICB0aGlzLiRuZXh0VGljaygoKSA9PiB7DQogICAgICAgICAgdGhpcy5pbml0Q2hhcnRzKCk7DQogICAgICAgIH0pOw0KICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgY29uc29sZS5lcnJvcign6I635Y+W5Luq6KGo55uY5pWw5o2u5aSx6LSlOicsIGVycm9yKTsNCiAgICAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcign6I635Y+W5Luq6KGo55uY5pWw5o2u5aSx6LSlJyk7DQogICAgICB9DQogICAgfSwNCiAgICANCiAgICBpbml0Q2hhcnRzKCkgew0KICAgICAgdGhpcy5pbml0QXNzZXRUeXBlQ2hhcnQoKTsNCiAgICAgIHRoaXMuaW5pdEFjdGl2aXR5VHJlbmRDaGFydCgpOw0KICAgIH0sDQogICAgDQogICAgaW5pdEFzc2V0VHlwZUNoYXJ0KCkgew0KICAgICAgLy8g5Yid5aeL5YyW6LWE5Lqn57G75Z6L5YiG5biD5Zu+6KGoDQogICAgICBjb25zdCBjaGFydERvbSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhc3NldC10eXBlLWNoYXJ0Jyk7DQogICAgICBpZiAoIWNoYXJ0RG9tKSByZXR1cm47DQogICAgICANCiAgICAgIHRoaXMuYXNzZXRUeXBlQ2hhcnQgPSBlY2hhcnRzLmluaXQoY2hhcnREb20pOw0KICAgICAgDQogICAgICBjb25zdCBkYXRhID0gW107DQogICAgICBjb25zdCB0eXBlTWFwID0gew0KICAgICAgICAnV2luZG93cyc6ICdXaW5kb3dzIOacjeWKoeWZqCcsDQogICAgICAgICdMaW51eCc6ICdMaW51eCDmnI3liqHlmagnLA0KICAgICAgICAnTmV0d29yayc6ICfnvZHnu5zorr7lpIcnLA0KICAgICAgICAnT3RoZXInOiAn5YW25LuWJw0KICAgICAgfTsNCiAgICAgIA0KICAgICAgZm9yIChjb25zdCBbdHlwZSwgY291bnRdIG9mIE9iamVjdC5lbnRyaWVzKHRoaXMuZGFzaGJvYXJkRGF0YS5zZXJ2ZXJfdHlwZV9kaXN0cmlidXRpb24pKSB7DQogICAgICAgIGRhdGEucHVzaCh7DQogICAgICAgICAgdmFsdWU6IGNvdW50LA0KICAgICAgICAgIG5hbWU6IHR5cGVNYXBbdHlwZV0gfHwgdHlwZQ0KICAgICAgICB9KTsNCiAgICAgIH0NCiAgICAgIA0KICAgICAgY29uc3Qgb3B0aW9uID0gew0KICAgICAgICB0b29sdGlwOiB7DQogICAgICAgICAgdHJpZ2dlcjogJ2l0ZW0nLA0KICAgICAgICAgIGZvcm1hdHRlcjogJ3thfSA8YnIvPntifToge2N9ICh7ZH0lKScNCiAgICAgICAgfSwNCiAgICAgICAgbGVnZW5kOiB7DQogICAgICAgICAgb3JpZW50OiAndmVydGljYWwnLA0KICAgICAgICAgIGxlZnQ6IDEwLA0KICAgICAgICAgIGRhdGE6IGRhdGEubWFwKGl0ZW0gPT4gaXRlbS5uYW1lKQ0KICAgICAgICB9LA0KICAgICAgICBzZXJpZXM6IFsNCiAgICAgICAgICB7DQogICAgICAgICAgICBuYW1lOiAn6LWE5Lqn57G75Z6LJywNCiAgICAgICAgICAgIHR5cGU6ICdwaWUnLA0KICAgICAgICAgICAgcmFkaXVzOiBbJzUwJScsICc3MCUnXSwNCiAgICAgICAgICAgIGF2b2lkTGFiZWxPdmVybGFwOiBmYWxzZSwNCiAgICAgICAgICAgIGxhYmVsOiB7DQogICAgICAgICAgICAgIHNob3c6IGZhbHNlLA0KICAgICAgICAgICAgICBwb3NpdGlvbjogJ2NlbnRlcicNCiAgICAgICAgICAgIH0sDQogICAgICAgICAgICBlbXBoYXNpczogew0KICAgICAgICAgICAgICBsYWJlbDogew0KICAgICAgICAgICAgICAgIHNob3c6IHRydWUsDQogICAgICAgICAgICAgICAgZm9udFNpemU6ICcxOCcsDQogICAgICAgICAgICAgICAgZm9udFdlaWdodDogJ2JvbGQnDQogICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0sDQogICAgICAgICAgICBsYWJlbExpbmU6IHsNCiAgICAgICAgICAgICAgc2hvdzogZmFsc2UNCiAgICAgICAgICAgIH0sDQogICAgICAgICAgICBkYXRhOiBkYXRhDQogICAgICAgICAgfQ0KICAgICAgICBdLA0KICAgICAgICBjb2xvcjogWycjNDA5RUZGJywgJyM2N0MyM0EnLCAnI0U2QTIzQycsICcjRjU2QzZDJywgJyM5MDkzOTknXQ0KICAgICAgfTsNCiAgICAgIA0KICAgICAgdGhpcy5hc3NldFR5cGVDaGFydC5zZXRPcHRpb24ob3B0aW9uKTsNCiAgICB9LA0KICAgIA0KICAgIGluaXRBY3Rpdml0eVRyZW5kQ2hhcnQoKSB7DQogICAgICAvLyDliJ3lp4vljJbmtLvliqjotovlir/lm77ooagNCiAgICAgIGNvbnN0IGNoYXJ0RG9tID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2FjdGl2aXR5LXRyZW5kLWNoYXJ0Jyk7DQogICAgICBpZiAoIWNoYXJ0RG9tKSByZXR1cm47DQogICAgICANCiAgICAgIHRoaXMuYWN0aXZpdHlUcmVuZENoYXJ0ID0gZWNoYXJ0cy5pbml0KGNoYXJ0RG9tKTsNCiAgICAgIA0KICAgICAgY29uc3QgeEF4aXNEYXRhID0gdGhpcy5kYXNoYm9hcmREYXRhLmFjdGl2aXR5X3RyZW5kLm1hcChpdGVtID0+IGl0ZW0uZGF0ZSk7DQogICAgICBjb25zdCBzZXJpZXNEYXRhID0gdGhpcy5kYXNoYm9hcmREYXRhLmFjdGl2aXR5X3RyZW5kLm1hcChpdGVtID0+IGl0ZW0uY291bnQpOw0KICAgICAgDQogICAgICBjb25zdCBvcHRpb24gPSB7DQogICAgICAgIHRpdGxlOiB7DQogICAgICAgICAgdGV4dDogJ+i/kTflpKnkvJror53otovlir8nLA0KICAgICAgICAgIGxlZnQ6ICdjZW50ZXInLA0KICAgICAgICAgIHRleHRTdHlsZTogew0KICAgICAgICAgICAgZm9udFNpemU6IDE0LA0KICAgICAgICAgICAgZm9udFdlaWdodDogJ25vcm1hbCcNCiAgICAgICAgICB9DQogICAgICAgIH0sDQogICAgICAgIHRvb2x0aXA6IHsNCiAgICAgICAgICB0cmlnZ2VyOiAnYXhpcycsDQogICAgICAgICAgYXhpc1BvaW50ZXI6IHsNCiAgICAgICAgICAgIHR5cGU6ICdzaGFkb3cnLA0KICAgICAgICAgICAgbGFiZWw6IHsNCiAgICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOiAnIzZhNzk4NScNCiAgICAgICAgICAgIH0NCiAgICAgICAgICB9DQogICAgICAgIH0sDQogICAgICAgIGdyaWQ6IHsNCiAgICAgICAgICBsZWZ0OiAnMyUnLA0KICAgICAgICAgIHJpZ2h0OiAnNCUnLA0KICAgICAgICAgIGJvdHRvbTogJzMlJywNCiAgICAgICAgICBjb250YWluTGFiZWw6IHRydWUNCiAgICAgICAgfSwNCiAgICAgICAgeEF4aXM6IFsNCiAgICAgICAgICB7DQogICAgICAgICAgICB0eXBlOiAnY2F0ZWdvcnknLA0KICAgICAgICAgICAgZGF0YTogeEF4aXNEYXRhLA0KICAgICAgICAgICAgYXhpc0xhYmVsOiB7DQogICAgICAgICAgICAgIGludGVydmFsOiAwLA0KICAgICAgICAgICAgICByb3RhdGU6IDANCiAgICAgICAgICAgIH0NCiAgICAgICAgICB9DQogICAgICAgIF0sDQogICAgICAgIHlBeGlzOiBbDQogICAgICAgICAgew0KICAgICAgICAgICAgdHlwZTogJ3ZhbHVlJywNCiAgICAgICAgICAgIG5hbWU6ICfkvJror53mlbAnDQogICAgICAgICAgfQ0KICAgICAgICBdLA0KICAgICAgICBzZXJpZXM6IFsNCiAgICAgICAgICB7DQogICAgICAgICAgICBuYW1lOiAn5Lya6K+d5pWwJywNCiAgICAgICAgICAgIHR5cGU6ICdiYXInLA0KICAgICAgICAgICAgZW1waGFzaXM6IHsNCiAgICAgICAgICAgICAgZm9jdXM6ICdzZXJpZXMnDQogICAgICAgICAgICB9LA0KICAgICAgICAgICAgZGF0YTogc2VyaWVzRGF0YSwNCiAgICAgICAgICAgIGl0ZW1TdHlsZTogew0KICAgICAgICAgICAgICBjb2xvcjogbmV3IGVjaGFydHMuZ3JhcGhpYy5MaW5lYXJHcmFkaWVudCgwLCAwLCAwLCAxLCBbDQogICAgICAgICAgICAgICAge29mZnNldDogMCwgY29sb3I6ICcjODNiZmY2J30sDQogICAgICAgICAgICAgICAge29mZnNldDogMC41LCBjb2xvcjogJyMxODhkZjAnfSwNCiAgICAgICAgICAgICAgICB7b2Zmc2V0OiAxLCBjb2xvcjogJyMxODhkZjAnfQ0KICAgICAgICAgICAgICBdKQ0KICAgICAgICAgICAgfQ0KICAgICAgICAgIH0NCiAgICAgICAgXQ0KICAgICAgfTsNCiAgICAgIA0KICAgICAgdGhpcy5hY3Rpdml0eVRyZW5kQ2hhcnQuc2V0T3B0aW9uKG9wdGlvbik7DQogICAgfSwNCiAgICANCiAgICByZXNpemVDaGFydHMoKSB7DQogICAgICBpZiAodGhpcy5hc3NldFR5cGVDaGFydCkgew0KICAgICAgICB0aGlzLmFzc2V0VHlwZUNoYXJ0LnJlc2l6ZSgpOw0KICAgICAgfQ0KICAgICAgaWYgKHRoaXMuYWN0aXZpdHlUcmVuZENoYXJ0KSB7DQogICAgICAgIHRoaXMuYWN0aXZpdHlUcmVuZENoYXJ0LnJlc2l6ZSgpOw0KICAgICAgfQ0KICAgIH0sDQogICAgDQogICAgZm9ybWF0QWN0aW9uKGFjdGlvbikgew0KICAgICAgY29uc3QgYWN0aW9uTWFwID0gew0KICAgICAgICAnbG9naW4nOiAn55m75b2VJywNCiAgICAgICAgJ2xvZ291dCc6ICfnmbvlh7onLA0KICAgICAgICAnY29ubmVjdCc6ICfov57mjqUnLA0KICAgICAgICAnZGlzY29ubmVjdCc6ICfmlq3lvIAnLA0KICAgICAgICAnbG9naW5fZmFpbGVkJzogJ+eZu+W9leWksei0pScsDQogICAgICAgICdjb25uZWN0X2ZhaWxlZCc6ICfov57mjqXlpLHotKUnDQogICAgICB9Ow0KICAgICAgDQogICAgICByZXR1cm4gYWN0aW9uTWFwW2FjdGlvbl0gfHwgYWN0aW9uOw0KICAgIH0NCiAgfQ0KfTsNCg=="},{"version":3,"sources":["Dashboard.vue"],"names":[],"mappings":";AAgfile":"Dashboard.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div class=\"dashboard-container\">\r\n    <h1>仪表盘</h1>\r\n    \r\n    <!-- 统计卡片 -->\r\n    <div class=\"stat-cards\">\r\n      <el-card class=\"stat-card\" shadow=\"hover\">\r\n        <div class=\"stat-card-content\">\r\n          <div class=\"stat-card-value\">{{ dashboardData.total_servers }}</div>\r\n          <div class=\"stat-card-label\">总资产</div>\r\n        </div>\r\n        <div class=\"stat-card-icon\">\r\n          <i class=\"el-icon-monitor\"></i>\r\n        </div>\r\n      </el-card>\r\n      \r\n      <el-card class=\"stat-card\" shadow=\"hover\">\r\n        <div class=\"stat-card-content\">\r\n          <div class=\"stat-card-value\">{{ dashboardData.total_users }}</div>\r\n          <div class=\"stat-card-label\">在线用户</div>\r\n        </div>\r\n        <div class=\"stat-card-icon\">\r\n          <i class=\"el-icon-user\"></i>\r\n        </div>\r\n      </el-card>\r\n      \r\n      <el-card class=\"stat-card\" shadow=\"hover\">\r\n        <div class=\"stat-card-content\">\r\n          <div class=\"stat-card-value\">{{ dashboardData.today_activities }}</div>\r\n          <div class=\"stat-card-label\">今日会话</div>\r\n        </div>\r\n        <div class=\"stat-card-icon\">\r\n          <i class=\"el-icon-data-line\"></i>\r\n        </div>\r\n      </el-card>\r\n      \r\n      <el-card class=\"stat-card\" shadow=\"hover\">\r\n        <div class=\"stat-card-content\">\r\n          <div class=\"stat-card-value\">{{ dashboardData.alerts }}</div>\r\n          <div class=\"stat-card-label\">告警事件</div>\r\n        </div>\r\n        <div class=\"stat-card-icon warning\">\r\n          <i class=\"el-icon-warning\"></i>\r\n        </div>\r\n      </el-card>\r\n    </div>\r\n    \r\n    <!-- 图表区域 -->\r\n    <div class=\"chart-container\">\r\n      <!-- 资产类型分布 -->\r\n      <el-card class=\"chart-card\" shadow=\"hover\">\r\n        <div slot=\"header\" class=\"chart-header\">\r\n          <span>资产类型分布</span>\r\n        </div>\r\n        <div class=\"chart-content\" id=\"asset-type-chart\"></div>\r\n      </el-card>\r\n      \r\n      <!-- 会话趋势 -->\r\n      <el-card class=\"chart-card\" shadow=\"hover\">\r\n        <div slot=\"header\" class=\"chart-header\">\r\n          <span>会话趋势</span>\r\n        </div>\r\n        <div class=\"chart-content\" id=\"activity-trend-chart\"></div>\r\n      </el-card>\r\n    </div>\r\n    \r\n    <!-- 最新活动日志 -->\r\n    <el-card class=\"log-card\" shadow=\"hover\">\r\n      <div slot=\"header\" class=\"log-header\">\r\n        <span>最新活动日志</span>\r\n      </div>\r\n      <div class=\"table-container\">\r\n        <el-table :data=\"dashboardData.recent_activities\" style=\"width: 100%\" stripe>\r\n          <el-table-column prop=\"time\" label=\"时间\" width=\"180\"></el-table-column>\r\n          <el-table-column prop=\"user\" label=\"用户\" width=\"120\"></el-table-column>\r\n          <el-table-column prop=\"action\" label=\"操作\" width=\"120\">\r\n            <template slot-scope=\"scope\">\r\n              <span>{{ formatAction(scope.row.action) }}</span>\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column prop=\"server\" label=\"资产\" width=\"180\"></el-table-column>\r\n          <el-table-column prop=\"ip\" label=\"IP地址\" width=\"140\"></el-table-column>\r\n          <el-table-column prop=\"status\" label=\"状态\" width=\"100\">\r\n            <template slot-scope=\"scope\">\r\n              <el-tag :type=\"scope.row.status === 'success' ? 'success' : 'danger'\" size=\"mini\">\r\n                {{ scope.row.status === 'success' ? '成功' : '失败' }}\r\n              </el-tag>\r\n            </template>\r\n          </el-table-column>\r\n        </el-table>\r\n      </div>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport * as echarts from 'echarts';\r\n\r\nexport default {\r\n  name: 'Dashboard',\r\n  data() {\r\n    return {\r\n      dashboardData: {\r\n        total_servers: 0,\r\n        total_users: 0,\r\n        today_activities: 0,\r\n        alerts: 0,\r\n        server_type_distribution: {},\r\n        activity_trend: [],\r\n        recent_activities: []\r\n      },\r\n      assetTypeChart: null,\r\n      activityTrendChart: null,\r\n      refreshInterval: null\r\n    };\r\n  },\r\n  mounted() {\r\n    this.fetchDashboardData();\r\n    // 每60秒刷新一次数据\r\n    this.refreshInterval = setInterval(() => {\r\n      this.fetchDashboardData();\r\n    }, 60000);\r\n    \r\n    // 监听窗口大小变化，重新调整图表大小\r\n    window.addEventListener('resize', this.resizeCharts);\r\n  },\r\n  beforeDestroy() {\r\n    // 组件销毁前清除定时器\r\n    if (this.refreshInterval) {\r\n      clearInterval(this.refreshInterval);\r\n    }\r\n    \r\n    // 移除事件监听\r\n    window.removeEventListener('resize', this.resizeCharts);\r\n    \r\n    // 销毁图表实例\r\n    if (this.assetTypeChart) {\r\n      this.assetTypeChart.dispose();\r\n    }\r\n    if (this.activityTrendChart) {\r\n      this.activityTrendChart.dispose();\r\n    }\r\n  },\r\n  methods: {\r\n    async fetchDashboardData() {\r\n      try {\r\n        // 使用真实API调用获取数据\r\n        const response = await axios.get('/api/dashboard/stats');\r\n        this.dashboardData = response.data;\r\n        \r\n        this.$nextTick(() => {\r\n          this.initCharts();\r\n        });\r\n      } catch (error) {\r\n        console.error('获取仪表盘数据失败:', error);\r\n        this.$message.error('获取仪表盘数据失败');\r\n      }\r\n    },\r\n    \r\n    initCharts() {\r\n      this.initAssetTypeChart();\r\n      this.initActivityTrendChart();\r\n    },\r\n    \r\n    initAssetTypeChart() {\r\n      // 初始化资产类型分布图表\r\n      const chartDom = document.getElementById('asset-type-chart');\r\n      if (!chartDom) return;\r\n      \r\n      this.assetTypeChart = echarts.init(chartDom);\r\n      \r\n      const data = [];\r\n      const typeMap = {\r\n        'Windows': 'Windows 服务器',\r\n        'Linux': 'Linux 服务器',\r\n        'Network': '网络设备',\r\n        'Other': '其他'\r\n      };\r\n      \r\n      for (const [type, count] of Object.entries(this.dashboardData.server_type_distribution)) {\r\n        data.push({\r\n          value: count,\r\n          name: typeMap[type] || type\r\n        });\r\n      }\r\n      \r\n      const option = {\r\n        tooltip: {\r\n          trigger: 'item',\r\n          formatter: '{a} <br/>{b}: {c} ({d}%)'\r\n        },\r\n        legend: {\r\n          orient: 'vertical',\r\n          left: 10,\r\n          data: data.map(item => item.name)\r\n        },\r\n        series: [\r\n          {\r\n            name: '资产类型',\r\n            type: 'pie',\r\n            radius: ['50%', '70%'],\r\n            avoidLabelOverlap: false,\r\n            label: {\r\n              show: false,\r\n              position: 'center'\r\n            },\r\n            emphasis: {\r\n              label: {\r\n                show: true,\r\n                fontSize: '18',\r\n                fontWeight: 'bold'\r\n              }\r\n            },\r\n            labelLine: {\r\n              show: false\r\n            },\r\n            data: data\r\n          }\r\n        ],\r\n        color: ['#409EFF', '#67C23A', '#E6A23C', '#F56C6C', '#909399']\r\n      };\r\n      \r\n      this.assetTypeChart.setOption(option);\r\n    },\r\n    \r\n    initActivityTrendChart() {\r\n      // 初始化活动趋势图表\r\n      const chartDom = document.getElementById('activity-trend-chart');\r\n      if (!chartDom) return;\r\n      \r\n      this.activityTrendChart = echarts.init(chartDom);\r\n      \r\n      const xAxisData = this.dashboardData.activity_trend.map(item => item.date);\r\n      const seriesData = this.dashboardData.activity_trend.map(item => item.count);\r\n      \r\n      const option = {\r\n        title: {\r\n          text: '近7天会话趋势',\r\n          left: 'center',\r\n          textStyle: {\r\n            fontSize: 14,\r\n            fontWeight: 'normal'\r\n          }\r\n        },\r\n        tooltip: {\r\n          trigger: 'axis',\r\n          axisPointer: {\r\n            type: 'shadow',\r\n            label: {\r\n              backgroundColor: '#6a7985'\r\n            }\r\n          }\r\n        },\r\n        grid: {\r\n          left: '3%',\r\n          right: '4%',\r\n          bottom: '3%',\r\n          containLabel: true\r\n        },\r\n        xAxis: [\r\n          {\r\n            type: 'category',\r\n            data: xAxisData,\r\n            axisLabel: {\r\n              interval: 0,\r\n              rotate: 0\r\n            }\r\n          }\r\n        ],\r\n        yAxis: [\r\n          {\r\n            type: 'value',\r\n            name: '会话数'\r\n          }\r\n        ],\r\n        series: [\r\n          {\r\n            name: '会话数',\r\n            type: 'bar',\r\n            emphasis: {\r\n              focus: 'series'\r\n            },\r\n            data: seriesData,\r\n            itemStyle: {\r\n              color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n                {offset: 0, color: '#83bff6'},\r\n                {offset: 0.5, color: '#188df0'},\r\n                {offset: 1, color: '#188df0'}\r\n              ])\r\n            }\r\n          }\r\n        ]\r\n      };\r\n      \r\n      this.activityTrendChart.setOption(option);\r\n    },\r\n    \r\n    resizeCharts() {\r\n      if (this.assetTypeChart) {\r\n        this.assetTypeChart.resize();\r\n      }\r\n      if (this.activityTrendChart) {\r\n        this.activityTrendChart.resize();\r\n      }\r\n    },\r\n    \r\n    formatAction(action) {\r\n      const actionMap = {\r\n        'login': '登录',\r\n        'logout': '登出',\r\n        'connect': '连接',\r\n        'disconnect': '断开',\r\n        'login_failed': '登录失败',\r\n        'connect_failed': '连接失败'\r\n      };\r\n      \r\n      return actionMap[action] || action;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.dashboard-container {\r\n  padding: 0;\r\n  width: 100%;\r\n}\r\n\r\n.stat-cards {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 20px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.stat-card {\r\n  flex: 1;\r\n  min-width: 220px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 10px;\r\n}\r\n\r\n.stat-card-content {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.stat-card-value {\r\n  font-size: 28px;\r\n  font-weight: bold;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.stat-card-label {\r\n  font-size: 14px;\r\n  color: #909399;\r\n}\r\n\r\n.stat-card-icon {\r\n  font-size: 48px;\r\n  color: #409EFF;\r\n  opacity: 0.7;\r\n}\r\n\r\n.stat-card-icon.warning {\r\n  color: #E6A23C;\r\n}\r\n\r\n.chart-container {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 20px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.chart-card {\r\n  flex: 1;\r\n  min-width: 45%;\r\n}\r\n\r\n.chart-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.chart-content {\r\n  height: 300px;\r\n}\r\n\r\n.log-card {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.log-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.table-container {\r\n  width: 100%;\r\n  overflow-x: auto;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .stat-card {\r\n    min-width: 100%;\r\n  }\r\n  \r\n  .chart-card {\r\n    min-width: 100%;\r\n  }\r\n}\r\n</style> "]}]}