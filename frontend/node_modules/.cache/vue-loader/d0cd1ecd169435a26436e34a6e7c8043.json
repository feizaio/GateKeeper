{"remainingRequest":"E:\\gatekeeper\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\gatekeeper\\frontend\\src\\App.vue?vue&type=style&index=0&id=7ba5bd90&lang=css","dependencies":[{"path":"E:\\gatekeeper\\frontend\\src\\App.vue","mtime":1742954384990},{"path":"E:\\gatekeeper\\frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":1740710846355},{"path":"E:\\gatekeeper\\frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1740710850033},{"path":"E:\\gatekeeper\\frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":1740710847386},{"path":"E:\\gatekeeper\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1740710845061},{"path":"E:\\gatekeeper\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1740710848685}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQojYXBwIHsNCiAgaGVpZ2h0OiAxMDB2aDsNCiAgbWFyZ2luOiAwOw0KICBwYWRkaW5nOiAwOw0KfQ0KDQpib2R5IHsNCiAgbWFyZ2luOiAwOw0KICBwYWRkaW5nOiAwOw0KICBmb250LWZhbWlseTogQXJpYWwsIHNhbnMtc2VyaWY7DQogIGJhY2tncm91bmQtY29sb3I6ICNmNWY1ZjU7DQp9DQoNCi5sb2FkaW5nIHsNCiAgZGlzcGxheTogZmxleDsNCiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7DQogIGFsaWduLWl0ZW1zOiBjZW50ZXI7DQogIGhlaWdodDogMTAwdmg7DQogIGZvbnQtc2l6ZTogMThweDsNCiAgY29sb3I6ICM0MDlFRkY7DQp9DQo="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";AA2CA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\r\n  <div id=\"app\" @mousemove=\"resetInactivityTimer\" @click=\"resetInactivityTimer\" @keydown=\"resetInactivityTimer\">\r\n    <div v-if=\"isLoading\" class=\"loading\">加载中...</div>\r\n    <router-view v-else></router-view>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'App',\r\n  data() {\r\n    return {\r\n      isLoading: true\r\n    };\r\n  },\r\n  methods: {\r\n    // 添加重置不活动计时器的方法\r\n    resetInactivityTimer() {\r\n      // 只有在用户已登录的情况下才重置计时器\r\n      if (this.$store.state.user) {\r\n        this.$store.dispatch('resetInactivityTimer');\r\n      }\r\n    }\r\n  },\r\n  async created() {\r\n    try {\r\n      const response = await axios.get('/api/auth/check');\r\n      this.$store.commit('setUser', response.data);\r\n      // 如果登录状态有效，初始化自动登出计时器\r\n      this.$store.dispatch('startInactivityTimer');\r\n    } catch (error) {\r\n      console.error('Auth check failed:', error);\r\n      this.$router.push('/login'); // 重定向到登录页\r\n    } finally {\r\n      this.isLoading = false;\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n#app {\r\n  height: 100vh;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\nbody {\r\n  margin: 0;\r\n  padding: 0;\r\n  font-family: Arial, sans-serif;\r\n  background-color: #f5f5f5;\r\n}\r\n\r\n.loading {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100vh;\r\n  font-size: 18px;\r\n  color: #409EFF;\r\n}\r\n</style>"]}]}