{"remainingRequest":"D:\\gatekeeper\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\gatekeeper\\frontend\\src\\components\\TaskViewManagement.vue?vue&type=style&index=0&id=cfffc546&scoped=true&lang=css","dependencies":[{"path":"D:\\gatekeeper\\frontend\\src\\components\\TaskViewManagement.vue","mtime":1753338496466},{"path":"D:\\gatekeeper\\frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":1747724957296},{"path":"D:\\gatekeeper\\frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1747724961113},{"path":"D:\\gatekeeper\\frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":1747724958346},{"path":"D:\\gatekeeper\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1747724956321},{"path":"D:\\gatekeeper\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1747724959585}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQoudGFzay12aWV3LW1hbmFnZW1lbnQgew0KICBwYWRkaW5nOiAyMHB4Ow0KfQ0KDQoucGFnZS1oZWFkZXIgew0KICBtYXJnaW4tYm90dG9tOiAyMHB4Ow0KICBkaXNwbGF5OiBmbGV4Ow0KICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47DQogIGFsaWduLWl0ZW1zOiBjZW50ZXI7DQp9DQoNCi5oZWFkZXItbGVmdCB7DQogIGZsZXg6IDE7DQogIG1hcmdpbi1yaWdodDogMjBweDsNCn0NCg0KLmhlYWRlci1yaWdodCB7DQogIGZsZXgtc2hyaW5rOiAwOw0KfQ0KDQoucGFnZS10aXRsZSB7DQogIGZvbnQtc2l6ZTogMjRweDsNCiAgbWFyZ2luLWJvdHRvbTogOHB4Ow0KfQ0KDQoucGFnZS1kZXNjcmlwdGlvbiB7DQogIGNvbG9yOiAjNjA2MjY2Ow0KICBmb250LXNpemU6IDE0cHg7DQp9DQoNCi52aWV3LW5hbWUgew0KICBmb250LXdlaWdodDogYm9sZDsNCiAgY29sb3I6ICMzMDMxMzM7DQp9DQoNCi5kZXNjcmlwdGlvbi10ZXh0IHsNCiAgY29sb3I6ICM2MDYyNjY7DQogIGRpc3BsYXk6IC13ZWJraXQtYm94Ow0KICAtd2Via2l0LWxpbmUtY2xhbXA6IDI7DQogIC13ZWJraXQtYm94LW9yaWVudDogdmVydGljYWw7DQogIG92ZXJmbG93OiBoaWRkZW47DQogIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzOw0KfQ0KDQoud2FybmluZy10ZXh0IHsNCiAgY29sb3I6ICNFNkEyM0M7DQogIGZvbnQtd2VpZ2h0OiBib2xkOw0KfQ0KDQouYWN0aW9uLWJ1dHRvbnMgew0KICBkaXNwbGF5OiBmbGV4Ow0KICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDsNCiAgYWxpZ24taXRlbXM6IGNlbnRlcjsNCiAgZmxleC13cmFwOiBub3dyYXA7DQogIGdhcDogOHB4Ow0KfQ0KDQouYWN0aW9uLWJ1dHRvbnMgLmVsLWJ1dHRvbiB7DQogIG1hcmdpbjogMDsNCiAgcGFkZGluZzogN3B4Ow0KfQ0KDQouYWN0aW9uLWJ1dHRvbnMgLmVsLWJ1dHRvbiArIC5lbC1idXR0b24gew0KICBtYXJnaW4tbGVmdDogMDsNCn0NCg0KLyog6KGo5qC85qC35byPICovDQouZWwtdGFibGUgew0KICBtYXJnaW4tdG9wOiAxNXB4Ow0KICBib3JkZXItcmFkaXVzOiA0cHg7DQogIG92ZXJmbG93OiBoaWRkZW47DQogIGJveC1zaGFkb3c6IDAgMnB4IDEycHggMCByZ2JhKDAsIDAsIDAsIDAuMDUpOw0KfQ0KDQouZWwtdGFibGUgPj4+IHRoIHsNCiAgYmFja2dyb3VuZC1jb2xvcjogI2Y1ZjdmYSAhaW1wb3J0YW50Ow0KICBjb2xvcjogIzYwNjI2NjsNCiAgZm9udC13ZWlnaHQ6IGJvbGQ7DQogIGZvbnQtc2l6ZTogMTRweDsNCiAgcGFkZGluZzogMTJweCAwOw0KfQ0KDQouZWwtdGFibGUgPj4+IC5lbC10YWJsZV9faGVhZGVyLXdyYXBwZXIgew0KICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI0VCRUVGNTsNCn0NCg=="},{"version":3,"sources":["TaskViewManagement.vue"],"names":[],"mappings":";AAmUA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"TaskViewManagement.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div class=\"task-view-management\">\r\n    <div class=\"page-header\">\r\n      <div class=\"header-left\">\r\n        <h2 class=\"page-title\">任务视图管理</h2>\r\n        <div class=\"page-description\">创建和管理任务视图，对任务进行分类</div>\r\n      </div>\r\n      <div class=\"header-right\">\r\n        <el-button plain icon=\"el-icon-back\" @click=\"$router.push('/system/task-manager')\">返回任务管理</el-button>\r\n        <el-button type=\"primary\" icon=\"el-icon-plus\" @click=\"showAddDialog\">创建视图</el-button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 视图列表 -->\r\n    <el-table\r\n      :data=\"views\"\r\n      style=\"width: 100%\"\r\n      v-loading=\"loading\"\r\n      border\r\n      stripe\r\n      :default-sort=\"{prop: 'updated_at', order: 'descending'}\"\r\n    >\r\n      <el-table-column prop=\"name\" label=\"视图名称\" min-width=\"130\">\r\n        <template slot-scope=\"scope\">\r\n          <span class=\"view-name\">{{ scope.row.name }}</span>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column prop=\"description\" label=\"描述\" min-width=\"180\">\r\n        <template slot-scope=\"scope\">\r\n          <span class=\"description-text\">{{ scope.row.description || '无描述' }}</span>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column prop=\"task_count\" label=\"任务数量\" width=\"100\" align=\"center\">\r\n        <template slot-scope=\"scope\">\r\n          <el-tag size=\"medium\">{{ scope.row.task_count }}</el-tag>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column prop=\"updated_at\" label=\"更新时间\" width=\"160\" sortable align=\"center\">\r\n        <template slot-scope=\"scope\">\r\n          {{ formatDate(scope.row.updated_at) }}\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"操作\" width=\"180\" fixed=\"right\" align=\"center\">\r\n        <template slot-scope=\"scope\">\r\n          <div class=\"action-buttons\">\r\n            <!-- 查看任务按钮 -->\r\n            <el-tooltip content=\"查看任务\" placement=\"top\">\r\n              <el-button\r\n                size=\"mini\"\r\n                type=\"info\"\r\n                icon=\"el-icon-view\"\r\n                circle\r\n                @click=\"viewTasks(scope.row)\"\r\n              ></el-button>\r\n            </el-tooltip>\r\n            \r\n            <!-- 编辑视图按钮 -->\r\n            <el-tooltip content=\"编辑视图\" placement=\"top\" v-if=\"canEdit(scope.row)\">\r\n              <el-button\r\n                size=\"mini\"\r\n                type=\"warning\"\r\n                icon=\"el-icon-edit\"\r\n                circle\r\n                @click=\"editView(scope.row)\"\r\n              ></el-button>\r\n            </el-tooltip>\r\n            \r\n            <!-- 删除视图按钮 -->\r\n            <el-tooltip content=\"删除视图\" placement=\"top\" v-if=\"canDelete(scope.row)\">\r\n              <el-button\r\n                size=\"mini\"\r\n                type=\"danger\"\r\n                icon=\"el-icon-delete\"\r\n                circle\r\n                @click=\"confirmDelete(scope.row)\"\r\n              ></el-button>\r\n            </el-tooltip>\r\n          </div>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n    \r\n    <!-- 添加/编辑视图对话框 -->\r\n    <el-dialog\r\n      :title=\"dialogTitle\"\r\n      :visible.sync=\"dialogVisible\"\r\n      width=\"40%\"\r\n      @closed=\"resetForm\"\r\n    >\r\n      <el-form :model=\"viewForm\" :rules=\"formRules\" ref=\"viewForm\" label-width=\"100px\">\r\n        <el-form-item label=\"视图名称\" prop=\"name\">\r\n          <el-input v-model=\"viewForm.name\" placeholder=\"请输入视图名称\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"描述\">\r\n          <el-input type=\"textarea\" v-model=\"viewForm.description\" placeholder=\"请输入视图描述\"></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"dialogVisible = false\">取消</el-button>\r\n        <el-button type=\"primary\" @click=\"saveView\" :loading=\"saveLoading\">保存</el-button>\r\n      </span>\r\n    </el-dialog>\r\n    \r\n    <!-- 删除确认对话框 -->\r\n    <el-dialog\r\n      title=\"确认删除\"\r\n      :visible.sync=\"deleteDialogVisible\"\r\n      width=\"30%\">\r\n      <p>确定要删除视图 \"{{ viewToDelete ? viewToDelete.name : '' }}\" 吗？</p>\r\n      <p class=\"warning-text\">删除视图不会删除其中的任务，但任务将不再属于任何视图。</p>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"deleteDialogVisible = false\">取消</el-button>\r\n        <el-button type=\"danger\" @click=\"deleteView\" :loading=\"deleteLoading\">确定删除</el-button>\r\n      </span>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'TaskViewManagement',\r\n  data() {\r\n    return {\r\n      views: [],\r\n      loading: false,\r\n      \r\n      // 对话框相关\r\n      dialogVisible: false,\r\n      dialogTitle: '创建视图',\r\n      isEdit: false,\r\n      viewForm: {\r\n        name: '',\r\n        description: ''\r\n      },\r\n      formRules: {\r\n        name: [\r\n          { required: true, message: '请输入视图名称', trigger: 'blur' },\r\n          { min: 2, max: 50, message: '长度在 2 到 50 个字符', trigger: 'blur' }\r\n        ]\r\n      },\r\n      saveLoading: false,\r\n      \r\n      // 删除相关\r\n      deleteDialogVisible: false,\r\n      viewToDelete: null,\r\n      deleteLoading: false\r\n    };\r\n  },\r\n  computed: {\r\n    currentUser() {\r\n      return this.$store.state.user || {};\r\n    }\r\n  },\r\n  created() {\r\n    this.loadViews();\r\n  },\r\n  methods: {\r\n    // 加载视图列表\r\n    async loadViews() {\r\n      this.loading = true;\r\n      try {\r\n        const response = await axios.get('/api/task-views');\r\n        this.views = response.data;\r\n        this.loading = false;\r\n      } catch (error) {\r\n        this.$message.error('加载视图列表失败: ' + (error.response && error.response.data && error.response.data.error || error.message));\r\n        this.loading = false;\r\n      }\r\n    },\r\n    \r\n    // 显示添加对话框\r\n    showAddDialog() {\r\n      this.isEdit = false;\r\n      this.dialogTitle = '创建视图';\r\n      this.dialogVisible = true;\r\n    },\r\n    \r\n    // 编辑视图\r\n    editView(view) {\r\n      this.isEdit = true;\r\n      this.dialogTitle = '编辑视图';\r\n      \r\n      // 复制视图数据到表单\r\n      this.viewForm = {\r\n        id: view.id,\r\n        name: view.name,\r\n        description: view.description || ''\r\n      };\r\n      \r\n      this.dialogVisible = true;\r\n    },\r\n    \r\n    // 保存视图\r\n    saveView() {\r\n      this.$refs.viewForm.validate(async valid => {\r\n        if (!valid) return;\r\n        \r\n        this.saveLoading = true;\r\n        \r\n        try {\r\n          let response;\r\n          \r\n          if (this.isEdit) {\r\n            // 更新视图\r\n            response = await axios.put(`/api/task-views/${this.viewForm.id}`, this.viewForm);\r\n            \r\n            // 更新本地数据\r\n            const index = this.views.findIndex(v => v.id === this.viewForm.id);\r\n            if (index !== -1) {\r\n              this.$set(this.views, index, response.data);\r\n            }\r\n            \r\n            this.$message.success('视图更新成功');\r\n          } else {\r\n            // 创建视图\r\n            response = await axios.post('/api/task-views', this.viewForm);\r\n            \r\n            // 添加到本地数据\r\n            this.views.push(response.data);\r\n            \r\n            this.$message.success('视图创建成功');\r\n          }\r\n          \r\n          this.dialogVisible = false;\r\n          this.saveLoading = false;\r\n        } catch (error) {\r\n          this.$message.error('保存视图失败: ' + (error.response && error.response.data && error.response.data.error || error.message));\r\n          this.saveLoading = false;\r\n        }\r\n      });\r\n    },\r\n    \r\n    // 重置表单\r\n    resetForm() {\r\n      if (this.$refs.viewForm) {\r\n        this.$refs.viewForm.resetFields();\r\n      }\r\n      \r\n      this.viewForm = {\r\n        name: '',\r\n        description: ''\r\n      };\r\n    },\r\n    \r\n    // 确认删除\r\n    confirmDelete(view) {\r\n      this.viewToDelete = view;\r\n      this.deleteDialogVisible = true;\r\n    },\r\n    \r\n    // 删除视图\r\n    async deleteView() {\r\n      if (!this.viewToDelete) return;\r\n      \r\n      this.deleteLoading = true;\r\n      \r\n      try {\r\n        await axios.delete(`/api/task-views/${this.viewToDelete.id}`);\r\n        \r\n        // 从本地数据中移除\r\n        const index = this.views.findIndex(v => v.id === this.viewToDelete.id);\r\n        if (index !== -1) {\r\n          this.views.splice(index, 1);\r\n        }\r\n        \r\n        this.$message.success('视图删除成功');\r\n        this.deleteDialogVisible = false;\r\n        this.deleteLoading = false;\r\n      } catch (error) {\r\n        this.$message.error('删除视图失败: ' + (error.response && error.response.data && error.response.data.error || error.message));\r\n        this.deleteLoading = false;\r\n      }\r\n    },\r\n    \r\n    // 查看视图任务\r\n    viewTasks(view) {\r\n      this.$router.push({\r\n        path: '/system/task-manager',\r\n        query: { view_id: view.id }\r\n      });\r\n    },\r\n    \r\n    // 判断是否可以编辑视图\r\n    canEdit(view) {\r\n      // 只有管理员或视图创建者可以编辑\r\n      return this.currentUser.is_admin || view.user_id === this.currentUser.id;\r\n    },\r\n    \r\n    // 判断是否可以删除视图\r\n    canDelete(view) {\r\n      // 只有管理员或视图创建者可以删除\r\n      return this.currentUser.is_admin || view.user_id === this.currentUser.id;\r\n    },\r\n    \r\n    // 格式化日期\r\n    formatDate(dateString) {\r\n      if (!dateString) return '';\r\n      \r\n      // 创建日期对象\r\n      const date = new Date(dateString);\r\n      \r\n      // 获取UTC时间并添加8小时（东八区）\r\n      const utcTime = date.getTime();\r\n      const beijingTime = new Date(utcTime + 8 * 60 * 60 * 1000);\r\n      \r\n      // 格式化为本地时间字符串\r\n      return beijingTime.toLocaleString('zh-CN', {\r\n        year: 'numeric',\r\n        month: '2-digit',\r\n        day: '2-digit',\r\n        hour: '2-digit',\r\n        minute: '2-digit',\r\n        second: '2-digit',\r\n        hour12: false\r\n      });\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.task-view-management {\r\n  padding: 20px;\r\n}\r\n\r\n.page-header {\r\n  margin-bottom: 20px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.header-left {\r\n  flex: 1;\r\n  margin-right: 20px;\r\n}\r\n\r\n.header-right {\r\n  flex-shrink: 0;\r\n}\r\n\r\n.page-title {\r\n  font-size: 24px;\r\n  margin-bottom: 8px;\r\n}\r\n\r\n.page-description {\r\n  color: #606266;\r\n  font-size: 14px;\r\n}\r\n\r\n.view-name {\r\n  font-weight: bold;\r\n  color: #303133;\r\n}\r\n\r\n.description-text {\r\n  color: #606266;\r\n  display: -webkit-box;\r\n  -webkit-line-clamp: 2;\r\n  -webkit-box-orient: vertical;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n}\r\n\r\n.warning-text {\r\n  color: #E6A23C;\r\n  font-weight: bold;\r\n}\r\n\r\n.action-buttons {\r\n  display: flex;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  flex-wrap: nowrap;\r\n  gap: 8px;\r\n}\r\n\r\n.action-buttons .el-button {\r\n  margin: 0;\r\n  padding: 7px;\r\n}\r\n\r\n.action-buttons .el-button + .el-button {\r\n  margin-left: 0;\r\n}\r\n\r\n/* 表格样式 */\r\n.el-table {\r\n  margin-top: 15px;\r\n  border-radius: 4px;\r\n  overflow: hidden;\r\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.05);\r\n}\r\n\r\n.el-table >>> th {\r\n  background-color: #f5f7fa !important;\r\n  color: #606266;\r\n  font-weight: bold;\r\n  font-size: 14px;\r\n  padding: 12px 0;\r\n}\r\n\r\n.el-table >>> .el-table__header-wrapper {\r\n  border-bottom: 1px solid #EBEEF5;\r\n}\r\n</style> "]}]}