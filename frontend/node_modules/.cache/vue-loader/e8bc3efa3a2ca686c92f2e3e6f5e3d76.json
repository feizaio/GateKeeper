{"remainingRequest":"E:\\gatekeeper\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\gatekeeper\\frontend\\src\\components\\CategoryManagement.vue?vue&type=style&index=0&id=4ee6d4de&scoped=true&lang=css","dependencies":[{"path":"E:\\gatekeeper\\frontend\\src\\components\\CategoryManagement.vue","mtime":1742458390670},{"path":"E:\\gatekeeper\\frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":1740710846355},{"path":"E:\\gatekeeper\\frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1740710850033},{"path":"E:\\gatekeeper\\frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":1740710847386},{"path":"E:\\gatekeeper\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1740710845061},{"path":"E:\\gatekeeper\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1740710848685}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQouY2F0ZWdvcnktbWFuYWdlbWVudCB7DQogIHBhZGRpbmc6IDIwcHg7DQp9DQoudG9vbGJhciB7DQogIG1hcmdpbi1ib3R0b206IDIwcHg7DQp9DQouc2VydmVyLWxpc3QtY29udGFpbmVyIHsNCiAgbWF4LWhlaWdodDogNTAwcHg7DQogIG92ZXJmbG93LXk6IGF1dG87DQp9DQouY2F0ZWdvcnktZGlhbG9nIHsNCiAgYm9yZGVyLXJhZGl1czogOHB4Ow0KfQ0KOmRlZXAoLmVsLWRpYWxvZ19fYm9keSkgew0KICBwYWRkaW5nOiAyMHB4IDIwcHggMDsNCn0NCjpkZWVwKC5lbC1mb3JtLWl0ZW1fX2xhYmVsKSB7DQogIGZvbnQtd2VpZ2h0OiA1MDA7DQp9DQo6ZGVlcCguZWwtaW5wdXRfX2lubmVyKSB7DQogIGJvcmRlci1yYWRpdXM6IDRweDsNCn0NCjpkZWVwKC5lbC1kaWFsb2dfX2hlYWRlcikgew0KICBwYWRkaW5nOiAyMHB4IDIwcHggMTBweDsNCiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNlZWU7DQp9DQo6ZGVlcCguZWwtZGlhbG9nX19mb290ZXIpIHsNCiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNlZWU7DQogIHBhZGRpbmc6IDE1cHggMjBweDsNCn0NCg=="},{"version":3,"sources":["CategoryManagement.vue"],"names":[],"mappings":";AA2NA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CategoryManagement.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div class=\"category-management\">\r\n    <div class=\"toolbar\">\r\n      <el-button type=\"primary\" @click=\"showAddDialog\">\r\n        <i class=\"el-icon-plus\"></i> 添加分类\r\n      </el-button>\r\n    </div>\r\n\r\n    <el-table :data=\"categories\" style=\"width: 100%\">\r\n      <el-table-column prop=\"name\" label=\"分类名称\" />\r\n      <el-table-column prop=\"server_count\" label=\"服务器数量\" width=\"120\" />\r\n      <el-table-column label=\"操作\" width=\"250\">\r\n        <template slot-scope=\"scope\">\r\n          <el-button \r\n            type=\"primary\" \r\n            size=\"small\" \r\n            @click=\"showEditDialog(scope.row)\">\r\n            编辑\r\n          </el-button>\r\n          <el-button\r\n            type=\"success\"\r\n            size=\"small\"\r\n            @click=\"showServerList(scope.row)\"\r\n          >\r\n            管理服务器\r\n          </el-button>\r\n          <el-button\r\n            type=\"danger\"\r\n            size=\"small\"\r\n            @click=\"deleteCategory(scope.row)\"\r\n          >\r\n            删除\r\n          </el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <!-- 添加/编辑分类对话框 -->\r\n    <el-dialog \r\n      :title=\"dialogType === 'add' ? '添加分类' : '编辑分类'\" \r\n      :visible.sync=\"dialogVisible\" \r\n      width=\"500px\"\r\n      custom-class=\"category-dialog\">\r\n      <el-form \r\n        :model=\"categoryForm\" \r\n        ref=\"categoryForm\" \r\n        :rules=\"rules\"\r\n        label-width=\"80px\">\r\n        <el-form-item label=\"名称\" prop=\"name\">\r\n          <el-input v-model=\"categoryForm.name\" placeholder=\"请输入分类名称\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"描述\" prop=\"description\">\r\n          <el-input \r\n            type=\"textarea\" \r\n            v-model=\"categoryForm.description\" \r\n            placeholder=\"请输入分类描述\"\r\n            :rows=\"3\">\r\n          </el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"dialogVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"submitForm\">确 定</el-button>\r\n      </div>\r\n    </el-dialog>\r\n\r\n    <!-- 管理服务器对话框 -->\r\n    <el-dialog \r\n      title=\"管理服务器\" \r\n      :visible.sync=\"serverDialogVisible\" \r\n      width=\"800px\"\r\n      custom-class=\"server-dialog\">\r\n      <div class=\"server-list-container\">\r\n        <el-table \r\n          :data=\"allServers\" \r\n          style=\"width: 100%\"\r\n          @selection-change=\"handleSelectionChange\">\r\n          <el-table-column type=\"selection\" width=\"55\"></el-table-column>\r\n          <el-table-column prop=\"name\" label=\"服务器名称\" />\r\n          <el-table-column prop=\"ip\" label=\"IP地址\" />\r\n          <el-table-column prop=\"type\" label=\"类型\">\r\n            <template slot-scope=\"scope\">\r\n              <el-tag :type=\"scope.row.type === 'Windows' ? 'primary' : 'success'\">\r\n                {{ scope.row.type }}\r\n              </el-tag>\r\n            </template>\r\n          </el-table-column>\r\n        </el-table>\r\n      </div>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"serverDialogVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"saveServerSelection\">确 定</el-button>\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'CategoryManagement',\r\n  data() {\r\n    return {\r\n      categories: [],\r\n      allServers: [],\r\n      dialogVisible: false,\r\n      serverDialogVisible: false,\r\n      dialogType: 'add', // 'add' 或 'edit'\r\n      selectedServers: [],\r\n      currentCategory: null,\r\n      categoryForm: {\r\n        name: '',\r\n        description: ''\r\n      },\r\n      rules: {\r\n        name: [\r\n          { required: true, message: '请输入分类名称', trigger: 'blur' },\r\n          { min: 2, max: 20, message: '长度在 2 到 20 个字符', trigger: 'blur' }\r\n        ],\r\n        description: [\r\n          { max: 200, message: '描述不能超过200个字符', trigger: 'blur' }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    async loadCategories() {\r\n      try {\r\n        const response = await this.axios.get('/api/categories');\r\n        this.categories = response.data;\r\n      } catch (error) {\r\n        this.$message.error('获取分类列表失败');\r\n      }\r\n    },\r\n    async loadAllServers() {\r\n      try {\r\n        const response = await this.axios.get('/api/servers');\r\n        this.allServers = response.data;\r\n      } catch (error) {\r\n        this.$message.error('获取服务器列表失败');\r\n      }\r\n    },\r\n    showAddDialog() {\r\n      this.dialogType = 'add';\r\n      this.categoryForm = {\r\n        name: '',\r\n        description: ''\r\n      };\r\n      this.dialogVisible = true;\r\n    },\r\n    showEditDialog(category) {\r\n      this.dialogType = 'edit';\r\n      this.categoryForm = { ...category };\r\n      this.dialogVisible = true;\r\n    },\r\n    async submitForm() {\r\n      try {\r\n        const valid = await this.$refs.categoryForm.validate();\r\n        if (valid) {\r\n          if (this.dialogType === 'add') {\r\n            await this.axios.post('/api/categories', this.categoryForm);\r\n            this.$message.success('添加分类成功');\r\n          } else {\r\n            await this.axios.put(`/api/categories/${this.categoryForm.id}`, this.categoryForm);\r\n            this.$message.success('更新分类成功');\r\n          }\r\n          this.dialogVisible = false;\r\n          this.loadCategories();\r\n        }\r\n      } catch (error) {\r\n        this.$message.error(this.dialogType === 'add' ? '添加分类失败' : '更新分类失败');\r\n      }\r\n    },\r\n    async deleteCategory(category) {\r\n      try {\r\n        await this.$confirm('确认删除该分类?', '提示', {\r\n          type: 'warning'\r\n        });\r\n        await this.axios.delete(`/api/categories/${category.id}`);\r\n        this.$message.success('删除成功');\r\n        this.loadCategories();\r\n      } catch (error) {\r\n        if (error !== 'cancel') {\r\n          this.$message.error('删除失败');\r\n        }\r\n      }\r\n    },\r\n    async showServerList(category) {\r\n      this.currentCategory = category;\r\n      this.serverDialogVisible = true;\r\n      await this.loadAllServers();\r\n      // 设置已选中的服务器\r\n      this.selectedServers = this.allServers.filter(server => \r\n        server.category_id === category.id\r\n      );\r\n    },\r\n    handleSelectionChange(selection) {\r\n      this.selectedServers = selection;\r\n    },\r\n    async saveServerSelection() {\r\n      try {\r\n        const serverIds = this.selectedServers.map(server => server.id);\r\n        await this.axios.put(`/api/categories/${this.currentCategory.id}/servers`, {\r\n          server_ids: serverIds\r\n        });\r\n        this.$message.success('更新服务器成功');\r\n        this.serverDialogVisible = false;\r\n        this.loadCategories();\r\n      } catch (error) {\r\n        this.$message.error('更新服务器失败');\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    this.loadCategories();\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.category-management {\r\n  padding: 20px;\r\n}\r\n.toolbar {\r\n  margin-bottom: 20px;\r\n}\r\n.server-list-container {\r\n  max-height: 500px;\r\n  overflow-y: auto;\r\n}\r\n.category-dialog {\r\n  border-radius: 8px;\r\n}\r\n:deep(.el-dialog__body) {\r\n  padding: 20px 20px 0;\r\n}\r\n:deep(.el-form-item__label) {\r\n  font-weight: 500;\r\n}\r\n:deep(.el-input__inner) {\r\n  border-radius: 4px;\r\n}\r\n:deep(.el-dialog__header) {\r\n  padding: 20px 20px 10px;\r\n  border-bottom: 1px solid #eee;\r\n}\r\n:deep(.el-dialog__footer) {\r\n  border-top: 1px solid #eee;\r\n  padding: 15px 20px;\r\n}\r\n</style> "]}]}