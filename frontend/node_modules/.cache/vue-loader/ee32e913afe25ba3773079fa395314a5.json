{"remainingRequest":"E:\\gatekeeper\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\gatekeeper\\frontend\\src\\components\\UserManagement.vue?vue&type=script&lang=js","dependencies":[{"path":"E:\\gatekeeper\\frontend\\src\\components\\UserManagement.vue","mtime":1747376883903},{"path":"E:\\gatekeeper\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1751596765290},{"path":"E:\\gatekeeper\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1751596769322},{"path":"E:\\gatekeeper\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1751596765290},{"path":"E:\\gatekeeper\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1751596771154}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CgpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHVzZXJzOiBbXSwKICAgICAgYWxsU2VydmVyczogW10sCiAgICAgIHNlbGVjdGVkU2VydmVyczogW10sCiAgICAgIGN1cnJlbnRVc2VyOiBudWxsLAogICAgICBzZWxlY3RlZFVzZXI6IG51bGwsCiAgICAgIHVzZXJEaWFsb2dWaXNpYmxlOiBmYWxzZSwKICAgICAgc2VydmVyQXV0aERpYWxvZ1Zpc2libGU6IGZhbHNlLAogICAgICB1c2VyRm9ybTogewogICAgICAgIHVzZXJuYW1lOiAnJywKICAgICAgICBwYXNzd29yZDogJycsCiAgICAgICAgaXNfYWRtaW46IGZhbHNlCiAgICAgIH0sCiAgICAgIHVzZXJSdWxlczogewogICAgICAgIHVzZXJuYW1lOiBbCiAgICAgICAgICB7IHJlcXVpcmVkOiB0cnVlLCBtZXNzYWdlOiAn6K+36L6T5YWl55So5oi35ZCNJywgdHJpZ2dlcjogJ2JsdXInIH0KICAgICAgICBdLAogICAgICAgIHBhc3N3b3JkOiBbCiAgICAgICAgICB7IHJlcXVpcmVkOiB0cnVlLCBtZXNzYWdlOiAn6K+36L6T5YWl5a+G56CBJywgdHJpZ2dlcjogJ2JsdXInIH0KICAgICAgICBdCiAgICAgIH0KICAgIH0KICB9LAogIGNvbXB1dGVkOiB7CiAgICBkaWFsb2dUaXRsZSgpIHsKICAgICAgcmV0dXJuIHRoaXMuc2VsZWN0ZWRVc2VyID8gJ+e8lui+keeUqOaItycgOiAn5re75Yqg55So5oi3JzsKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIGFzeW5jIGxvYWRVc2VycygpIHsKICAgICAgdHJ5IHsKICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGF4aW9zLmdldCgnL2FwaS91c2VycycpOwogICAgICAgIHRoaXMudXNlcnMgPSByZXNwb25zZS5kYXRhOwogICAgICAgIC8vIOiOt+WPluW9k+WJjeeUqOaIt+S/oeaBrwogICAgICAgIGNvbnN0IGN1cnJlbnRVc2VyUmVzcG9uc2UgPSBhd2FpdCBheGlvcy5nZXQoJy9hcGkvdXNlcnMvY3VycmVudCcpOwogICAgICAgIHRoaXMuY3VycmVudFVzZXIgPSBjdXJyZW50VXNlclJlc3BvbnNlLmRhdGE7CiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcign6I635Y+W55So5oi35YiX6KGo5aSx6LSlJyk7CiAgICAgIH0KICAgIH0sCiAgICAKICAgIGFzeW5jIGxvYWRTZXJ2ZXJzKCkgewogICAgICB0cnkgewogICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgYXhpb3MuZ2V0KCcvYXBpL3NlcnZlcnMnKTsKICAgICAgICB0aGlzLmFsbFNlcnZlcnMgPSByZXNwb25zZS5kYXRhLm1hcChzZXJ2ZXIgPT4gKHsKICAgICAgICAgIGlkOiBzZXJ2ZXIuaWQsCiAgICAgICAgICBuYW1lOiBzZXJ2ZXIubmFtZSwKICAgICAgICAgIGlwOiBzZXJ2ZXIuaXAsCiAgICAgICAgICB0eXBlOiBzZXJ2ZXIudHlwZSwKICAgICAgICAgIHVzZXJuYW1lOiBzZXJ2ZXIudXNlcm5hbWUsCiAgICAgICAgICBkaXNwbGF5TmFtZTogYCR7c2VydmVyLm5hbWV9ICgke3NlcnZlci5pcH0pYAogICAgICAgIH0pKTsKICAgICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKCfojrflj5bmnI3liqHlmajliJfooajlpLHotKUnKTsKICAgICAgfQogICAgfSwKICAgIAogICAgc2hvd0FkZFVzZXJEaWFsb2coKSB7CiAgICAgIHRoaXMuc2VsZWN0ZWRVc2VyID0gbnVsbDsKICAgICAgdGhpcy51c2VyRm9ybSA9IHsKICAgICAgICB1c2VybmFtZTogJycsCiAgICAgICAgcGFzc3dvcmQ6ICcnLAogICAgICAgIGlzX2FkbWluOiBmYWxzZQogICAgICB9OwogICAgICB0aGlzLnVzZXJEaWFsb2dWaXNpYmxlID0gdHJ1ZTsKICAgIH0sCiAgICAKICAgIHNob3dFZGl0VXNlckRpYWxvZyh1c2VyKSB7CiAgICAgIHRoaXMuc2VsZWN0ZWRVc2VyID0gdXNlcjsKICAgICAgdGhpcy51c2VyRm9ybSA9IHsKICAgICAgICB1c2VybmFtZTogdXNlci51c2VybmFtZSwKICAgICAgICBwYXNzd29yZDogJycsCiAgICAgICAgaXNfYWRtaW46IHVzZXIuaXNfYWRtaW4KICAgICAgfTsKICAgICAgdGhpcy51c2VyRGlhbG9nVmlzaWJsZSA9IHRydWU7CiAgICB9LAogICAgCiAgICBhc3luYyBoYW5kbGVVc2VyU3VibWl0KCkgewogICAgICB0cnkgewogICAgICAgIGlmICh0aGlzLnNlbGVjdGVkVXNlcikgewogICAgICAgICAgLy8g57yW6L6R55So5oi3CiAgICAgICAgICBhd2FpdCBheGlvcy5wdXQoYC9hcGkvdXNlcnMvJHt0aGlzLnNlbGVjdGVkVXNlci5pZH1gLCB0aGlzLnVzZXJGb3JtKTsKICAgICAgICAgIHRoaXMuJG1lc3NhZ2Uuc3VjY2Vzcygn55So5oi35pu05paw5oiQ5YqfJyk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIC8vIOa3u+WKoOeUqOaItwogICAgICAgICAgYXdhaXQgYXhpb3MucG9zdCgnL2FwaS91c2VycycsIHRoaXMudXNlckZvcm0pOwogICAgICAgICAgdGhpcy4kbWVzc2FnZS5zdWNjZXNzKCfnlKjmiLfmt7vliqDmiJDlip8nKTsKICAgICAgICB9CiAgICAgICAgdGhpcy51c2VyRGlhbG9nVmlzaWJsZSA9IGZhbHNlOwogICAgICAgIHRoaXMubG9hZFVzZXJzKCk7CiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgICAgbGV0IGVycm9yTWVzc2FnZSA9ICfmk43kvZzlpLHotKUnOwogICAgICAgIGlmIChlcnJvci5yZXNwb25zZSAmJiBlcnJvci5yZXNwb25zZS5kYXRhICYmIGVycm9yLnJlc3BvbnNlLmRhdGEuZXJyb3IpIHsKICAgICAgICAgIGVycm9yTWVzc2FnZSA9IGVycm9yLnJlc3BvbnNlLmRhdGEuZXJyb3I7CiAgICAgICAgfQogICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IoZXJyb3JNZXNzYWdlKTsKICAgICAgfQogICAgfSwKICAgIAogICAgYXN5bmMgZGVsZXRlVXNlcih1c2VyKSB7CiAgICAgIHRyeSB7CiAgICAgICAgYXdhaXQgdGhpcy4kY29uZmlybSgn56Gu6K6k5Yig6Zmk6K+l55So5oi3PycsICfmj5DnpLonLCB7CiAgICAgICAgICB0eXBlOiAnd2FybmluZycKICAgICAgICB9KTsKICAgICAgICBhd2FpdCBheGlvcy5kZWxldGUoYC9hcGkvdXNlcnMvJHt1c2VyLmlkfWApOwogICAgICAgIHRoaXMuJG1lc3NhZ2Uuc3VjY2Vzcygn5Yig6Zmk5oiQ5YqfJyk7CiAgICAgICAgdGhpcy5sb2FkVXNlcnMoKTsKICAgICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgICAgICBpZiAoZXJyb3IgIT09ICdjYW5jZWwnKSB7CiAgICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKCfliKDpmaTlpLHotKUnKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgICAKICAgIGFzeW5jIHNob3dTZXJ2ZXJBdXRoRGlhbG9nKHVzZXIpIHsKICAgICAgdGhpcy5zZWxlY3RlZFVzZXIgPSB1c2VyOwogICAgICB0aGlzLnNlcnZlckF1dGhEaWFsb2dWaXNpYmxlID0gdHJ1ZTsKICAgICAgdHJ5IHsKICAgICAgICBhd2FpdCB0aGlzLmxvYWRTZXJ2ZXJzKCk7IC8vIOWKoOi9veaJgOacieacjeWKoeWZqAogICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgYXhpb3MuZ2V0KGAvYXBpL3VzZXJzLyR7dXNlci5pZH0vc2VydmVyc2ApOwogICAgICAgIHRoaXMuc2VsZWN0ZWRTZXJ2ZXJzID0gcmVzcG9uc2UuZGF0YS5tYXAoc2VydmVyID0+IHNlcnZlci5pZCk7CiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcign6I635Y+W55So5oi35pyN5Yqh5Zmo5o6I5p2D5aSx6LSlJyk7CiAgICAgIH0KICAgIH0sCiAgICAKICAgIGFzeW5jIGhhbmRsZVNlcnZlckF1dGgoKSB7CiAgICAgIHRyeSB7CiAgICAgICAgYXdhaXQgYXhpb3MucG9zdChgL2FwaS91c2Vycy8ke3RoaXMuc2VsZWN0ZWRVc2VyLmlkfS9zZXJ2ZXJzYCwgewogICAgICAgICAgc2VydmVyX2lkczogdGhpcy5zZWxlY3RlZFNlcnZlcnMKICAgICAgICB9KTsKICAgICAgICB0aGlzLiRtZXNzYWdlLnN1Y2Nlc3MoJ+acjeWKoeWZqOaOiOadg+abtOaWsOaIkOWKnycpOwogICAgICAgIHRoaXMuc2VydmVyQXV0aERpYWxvZ1Zpc2libGUgPSBmYWxzZTsKICAgICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKCfmm7TmlrDmnI3liqHlmajmjojmnYPlpLHotKUnKTsKICAgICAgfQogICAgfQogIH0sCiAgY3JlYXRlZCgpIHsKICAgIHRoaXMubG9hZFVzZXJzKCk7CiAgfQp9Cg=="},{"version":3,"sources":["UserManagement.vue"],"names":[],"mappings":";AAqfile":"UserManagement.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"user-management\">\n    <div class=\"toolbar\">\n      <el-button type=\"primary\" @click=\"showAddUserDialog\">\n        <i class=\"el-icon-plus\"></i> 添加用户\n      </el-button>\n    </div>\n\n    <el-table :data=\"users\" style=\"width: 100%\">\n      <el-table-column prop=\"username\" label=\"用户名\"></el-table-column>\n      <el-table-column prop=\"is_admin\" label=\"角色\">\n        <template slot-scope=\"scope\">\n          {{ scope.row.is_admin ? '管理员' : '普通用户' }}\n        </template>\n      </el-table-column>\n      <el-table-column label=\"授权服务器\">\n        <template slot-scope=\"scope\">\n          <el-button size=\"mini\" @click=\"showServerAuthDialog(scope.row)\">\n            管理授权\n          </el-button>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"操作\" width=\"200\">\n        <template slot-scope=\"scope\">\n          <el-button \n            size=\"mini\" \n            type=\"primary\"\n            @click=\"showEditUserDialog(scope.row)\">\n            编辑\n          </el-button>\n          <el-button \n            size=\"mini\" \n            type=\"danger\" \n            @click=\"deleteUser(scope.row)\"\n            :disabled=\"scope.row.id === currentUser.id\">\n            删除\n          </el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <!-- 添加/编辑用户对话框 -->\n    <el-dialog :title=\"dialogTitle\" :visible.sync=\"userDialogVisible\">\n      <el-form :model=\"userForm\" :rules=\"userRules\" ref=\"userForm\" label-width=\"100px\">\n        <el-form-item label=\"用户名\" prop=\"username\">\n          <el-input v-model=\"userForm.username\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"密码\" prop=\"password\">\n          <el-input type=\"password\" v-model=\"userForm.password\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"是否管理员\">\n          <el-switch v-model=\"userForm.is_admin\"></el-switch>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\">\n        <el-button @click=\"userDialogVisible = false\">取消</el-button>\n        <el-button type=\"primary\" @click=\"handleUserSubmit\">确定</el-button>\n      </div>\n    </el-dialog>\n\n    <!-- 服务器授权对话框 -->\n    <el-dialog title=\"服务器授权\" :visible.sync=\"serverAuthDialogVisible\" width=\"900px\" class=\"server-auth-dialog\">\n      <div class=\"server-transfer-container\">\n      <el-transfer\n        v-model=\"selectedServers\"\n        :data=\"allServers\"\n        :titles=\"['未授权服务器', '已授权服务器']\"\n          filterable\n          filter-placeholder=\"请输入服务器名称\"\n        :props=\"{\n          key: 'id',\n            label: 'displayName'\n        }\"\n          class=\"server-transfer\"\n      ></el-transfer>\n      </div>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"serverAuthDialogVisible = false\">取消</el-button>\n        <el-button type=\"primary\" @click=\"handleServerAuth\">确定</el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      users: [],\n      allServers: [],\n      selectedServers: [],\n      currentUser: null,\n      selectedUser: null,\n      userDialogVisible: false,\n      serverAuthDialogVisible: false,\n      userForm: {\n        username: '',\n        password: '',\n        is_admin: false\n      },\n      userRules: {\n        username: [\n          { required: true, message: '请输入用户名', trigger: 'blur' }\n        ],\n        password: [\n          { required: true, message: '请输入密码', trigger: 'blur' }\n        ]\n      }\n    }\n  },\n  computed: {\n    dialogTitle() {\n      return this.selectedUser ? '编辑用户' : '添加用户';\n    }\n  },\n  methods: {\n    async loadUsers() {\n      try {\n        const response = await axios.get('/api/users');\n        this.users = response.data;\n        // 获取当前用户信息\n        const currentUserResponse = await axios.get('/api/users/current');\n        this.currentUser = currentUserResponse.data;\n      } catch (error) {\n        this.$message.error('获取用户列表失败');\n      }\n    },\n    \n    async loadServers() {\n      try {\n        const response = await axios.get('/api/servers');\n        this.allServers = response.data.map(server => ({\n          id: server.id,\n          name: server.name,\n          ip: server.ip,\n          type: server.type,\n          username: server.username,\n          displayName: `${server.name} (${server.ip})`\n        }));\n      } catch (error) {\n        this.$message.error('获取服务器列表失败');\n      }\n    },\n    \n    showAddUserDialog() {\n      this.selectedUser = null;\n      this.userForm = {\n        username: '',\n        password: '',\n        is_admin: false\n      };\n      this.userDialogVisible = true;\n    },\n    \n    showEditUserDialog(user) {\n      this.selectedUser = user;\n      this.userForm = {\n        username: user.username,\n        password: '',\n        is_admin: user.is_admin\n      };\n      this.userDialogVisible = true;\n    },\n    \n    async handleUserSubmit() {\n      try {\n        if (this.selectedUser) {\n          // 编辑用户\n          await axios.put(`/api/users/${this.selectedUser.id}`, this.userForm);\n          this.$message.success('用户更新成功');\n        } else {\n          // 添加用户\n          await axios.post('/api/users', this.userForm);\n          this.$message.success('用户添加成功');\n        }\n        this.userDialogVisible = false;\n        this.loadUsers();\n      } catch (error) {\n        let errorMessage = '操作失败';\n        if (error.response && error.response.data && error.response.data.error) {\n          errorMessage = error.response.data.error;\n        }\n        this.$message.error(errorMessage);\n      }\n    },\n    \n    async deleteUser(user) {\n      try {\n        await this.$confirm('确认删除该用户?', '提示', {\n          type: 'warning'\n        });\n        await axios.delete(`/api/users/${user.id}`);\n        this.$message.success('删除成功');\n        this.loadUsers();\n      } catch (error) {\n        if (error !== 'cancel') {\n          this.$message.error('删除失败');\n        }\n      }\n    },\n    \n    async showServerAuthDialog(user) {\n      this.selectedUser = user;\n      this.serverAuthDialogVisible = true;\n      try {\n        await this.loadServers(); // 加载所有服务器\n        const response = await axios.get(`/api/users/${user.id}/servers`);\n        this.selectedServers = response.data.map(server => server.id);\n      } catch (error) {\n        this.$message.error('获取用户服务器授权失败');\n      }\n    },\n    \n    async handleServerAuth() {\n      try {\n        await axios.post(`/api/users/${this.selectedUser.id}/servers`, {\n          server_ids: this.selectedServers\n        });\n        this.$message.success('服务器授权更新成功');\n        this.serverAuthDialogVisible = false;\n      } catch (error) {\n        this.$message.error('更新服务器授权失败');\n      }\n    }\n  },\n  created() {\n    this.loadUsers();\n  }\n}\n</script>\n\n<style scoped>\n.user-management {\n  padding: 20px;\n}\n\n.toolbar {\n  margin-bottom: 20px;\n}\n\n.server-auth-dialog :deep(.el-dialog__body) {\n  padding: 20px;\n}\n\n.server-transfer-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 0;\n}\n\n.server-transfer {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.server-transfer :deep(.el-transfer-panel) {\n  width: 380px;\n  margin: 0;\n}\n\n.server-transfer :deep(.el-transfer-panel__header) {\n  padding: 8px 15px;\n  background: #f5f7fa;\n}\n\n.server-transfer :deep(.el-transfer-panel__body) {\n  height: 400px;\n}\n\n.server-transfer :deep(.el-transfer-panel__list) {\n  height: 340px;\n}\n\n.server-transfer :deep(.el-transfer-panel__item) {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  padding: 0 15px;\n  height: 32px;\n  line-height: 32px;\n}\n\n.server-transfer :deep(.el-transfer__buttons) {\n  padding: 0 30px;\n}\n\n.server-transfer :deep(.el-transfer__button) {\n  display: block;\n  margin: 5px 0;\n  padding: 10px;\n}\n\n.server-transfer :deep(.el-checkbox__label) {\n  font-size: 14px;\n}\n\n.dialog-footer {\n  text-align: right;\n  padding-top: 20px;\n}\n</style> "]}]}